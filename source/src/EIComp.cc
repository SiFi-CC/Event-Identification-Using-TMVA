#include "EIComp.hh"
#include "TCanvas.h"
#include "TRandom.h"
#include <fstream>
#include <iostream>
#include <math.h>
#include <sstream>
#include <string>
#include "TH1F.h"
#include "THStack.h"
#include "TH2F.h"
#include "TH3F.h"
//#include "ROOT/TDataFrame.hxx"
#include <complex> 
#include "TBits.h"
#include "TRandom3.h"
#include <TLorentzVector.h>
using namespace std;

//ClassImp(EI);

//--------------------
/// Standard constructor (recommended).
///\param path (TString) - full path to the configuration file.
EIComp::EIComp(TString path) {
    
    Clear();
  //fVerbose = verbose;
    bool stat_config = ReadConfig(path);
    bool stat_reader = SetInputReader();
    if (!stat_config || !stat_reader) {
        
        throw "##### Exception in  constructor!";
    }
  
    Size_t len = strlen(fInputName);
    TString fname = fInputName;
    fname.Insert(len - 5, "_EI-s2s3s4s5-full-sigma2");
    TString outputName = "../source/results/" + fname;
    fOutputFile = new TFile(outputName, "RECREATE");
  
/// To clarify which Geant4 output is used for Event Identification     
    //TString filename = input->GetName();
    //Int_t istart, istop, totalsimnev; 
    fTree_stat = new TTree("TreeStat", "TreeStat");
    fTree_stat->Branch("InputFilename", &fInputName); 
    fTree_stat->Branch("StartEvent", &fStart); 
    fTree_stat->Branch("StopEvent", &fStop);
    fTree_stat->Branch("TotalSimNev", &fNevS); 
////////////////////////////////////////////////////////////////// 
//// Signal trees for training phase
    
    fTreeS2 = new TTree("TreeS2", "TreeS2");
    fTreeS2->Branch("EventNumber", &fEventNumber);
    fTreeS2->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeS2->Branch("Pos_eX", &fPos_eX);
    fTreeS2->Branch("Pos_eY", &fPos_eY);
    fTreeS2->Branch("Pos_eZ", &fPos_eZ);
    fTreeS2->Branch("Pos_pX", &fPos_pX);
    fTreeS2->Branch("Pos_pY", &fPos_pY);
    fTreeS2->Branch("Pos_pZ", &fPos_pZ);
    fTreeS2->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeS2->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeS2->Branch("PosX_Scat", &fPosX_1);
    fTreeS2->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeS2->Branch("PosY_Scat", &fPosY_1);
    fTreeS2->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeS2->Branch("PosZ_Scat", &fPosZ_1);
    fTreeS2->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeS2->Branch("Pos_Scat", &fPosScat);
    fTreeS2->Branch("Energy_Scat", &fEnergy_1);
    fTreeS2->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeS2->Branch("PosX_Abs", &fPosX_2);
    fTreeS2->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeS2->Branch("PosY_Abs", &fPosY_2);
    fTreeS2->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeS2->Branch("PosZ_Abs", &fPosZ_2);
    fTreeS2->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeS2->Branch("Pos_Abs", &fPosAbs);
    fTreeS2->Branch("PosX_Sec", &fPosX_3);
    fTreeS2->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeS2->Branch("PosY_Sec", &fPosY_3);
    fTreeS2->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeS2->Branch("PosZ_Sec", &fPosZ_3);
    fTreeS2->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeS2->Branch("EnergySecond_abs", &fEnergySe);
    fTreeS2->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeS2->Branch("PosX_Th", &fPosX_4);
    fTreeS2->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeS2->Branch("PosY_Th", &fPosY_4);
    fTreeS2->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeS2->Branch("PosZ_Th", &fPosZ_4);
    fTreeS2->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeS2->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeS2->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeS2->Branch("PosX_Fo", &fPosX_5);
    fTreeS2->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeS2->Branch("PosY_Fo", &fPosY_5);
    fTreeS2->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeS2->Branch("PosZ_Fo", &fPosZ_5);
    fTreeS2->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeS2->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeS2->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeS2->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeS2->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeS2->Branch("Energy_Abs", &fEnergy_2);
    fTreeS2->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeS2->Branch("EnDiff", &fEnDiff);
    fTreeS2->Branch("EnergySum", &fEnergy_3);
    fTreeS2->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeS2->Branch("Multiplicity", &fS);
    fTreeS2->Branch("DiffPosition", &fDiffPosX);
    fTreeS2->Branch("DiffEnergy", &fDiffEnergy);
    fTreeS2->Branch("AngularDistribution", &fTheta);
    fTreeS2->Branch("ECII", &fECII);
    fTreeS2->SetCircular(2000000); 
///the maximum number of entries to be kept in the buffers.When the number of entries exceeds this value, 
///the first entries in the Tree are deleted and the buffers used again.  
    fTreeS3 = new TTree("TreeS3", "TreeS3");
    fTreeS3->Branch("EventNumber", &fEventNumber);
    fTreeS3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeS3->Branch("Pos_eX", &fPos_eX);
    fTreeS3->Branch("Pos_eY", &fPos_eY);
    fTreeS3->Branch("Pos_eZ", &fPos_eZ);
    fTreeS3->Branch("Pos_pX", &fPos_pX);
    fTreeS3->Branch("Pos_pY", &fPos_pY);
    fTreeS3->Branch("Pos_pZ", &fPos_pZ);
    fTreeS3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeS3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeS3->Branch("PosX_Scat", &fPosX_1);
    fTreeS3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeS3->Branch("PosY_Scat", &fPosY_1);
    fTreeS3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeS3->Branch("PosZ_Scat", &fPosZ_1);
    fTreeS3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeS3->Branch("Pos_Scat", &fPosScat);
    fTreeS3->Branch("Energy_Scat", &fEnergy_1);
    fTreeS3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeS3->Branch("PosX_Abs", &fPosX_2);
    fTreeS3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeS3->Branch("PosY_Abs", &fPosY_2);
    fTreeS3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeS3->Branch("PosZ_Abs", &fPosZ_2);
    fTreeS3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeS3->Branch("Pos_Abs", &fPosAbs);
    fTreeS3->Branch("PosX_Sec", &fPosX_3);
    fTreeS3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeS3->Branch("PosY_Sec", &fPosY_3);
    fTreeS3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeS3->Branch("PosZ_Sec", &fPosZ_3);
    fTreeS3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeS3->Branch("EnergySecond_abs", &fEnergySe);
    fTreeS3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeS3->Branch("PosX_Th", &fPosX_4);
    fTreeS3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeS3->Branch("PosY_Th", &fPosY_4);
    fTreeS3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeS3->Branch("PosZ_Th", &fPosZ_4);
    fTreeS3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeS3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeS3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeS3->Branch("PosX_Fo", &fPosX_5);
    fTreeS3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeS3->Branch("PosY_Fo", &fPosY_5);
    fTreeS3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeS3->Branch("PosZ_Fo", &fPosZ_5);
    fTreeS3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeS3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeS3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeS3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeS3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeS3->Branch("Energy_Abs", &fEnergy_2);
    fTreeS3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeS3->Branch("EnDiff", &fEnDiff);
    fTreeS3->Branch("EnergySum", &fEnergy_3);
    fTreeS3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeS3->Branch("Multiplicity", &fS);
    fTreeS3->Branch("DiffPosition", &fDiffPosX);
    fTreeS3->Branch("DiffEnergy", &fDiffEnergy);
    fTreeS3->Branch("AngularDistribution", &fTheta);
    fTreeS3->Branch("ECII", &fECII);
    fTreeS3->SetCircular(2000000);  
  
    fTreeS4 = new TTree("TreeS4", "TreeS4");
    fTreeS4->Branch("EventNumber", &fEventNumber);
    fTreeS4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeS4->Branch("Pos_eX", &fPos_eX);
    fTreeS4->Branch("Pos_eY", &fPos_eY);
    fTreeS4->Branch("Pos_eZ", &fPos_eZ);
    fTreeS4->Branch("Pos_pX", &fPos_pX);
    fTreeS4->Branch("Pos_pY", &fPos_pY);
    fTreeS4->Branch("Pos_pZ", &fPos_pZ);
    fTreeS4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeS4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeS4->Branch("PosX_Scat", &fPosX_1);
    fTreeS4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeS4->Branch("PosY_Scat", &fPosY_1);
    fTreeS4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeS4->Branch("PosZ_Scat", &fPosZ_1);
    fTreeS4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeS4->Branch("Pos_Scat", &fPosScat);
    fTreeS4->Branch("Energy_Scat", &fEnergy_1);
    fTreeS4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeS4->Branch("PosX_Abs", &fPosX_2);
    fTreeS4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeS4->Branch("PosY_Abs", &fPosY_2);
    fTreeS4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeS4->Branch("PosZ_Abs", &fPosZ_2);
    fTreeS4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeS4->Branch("Pos_Abs", &fPosAbs);
    fTreeS4->Branch("PosX_Sec", &fPosX_3);
    fTreeS4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeS4->Branch("PosY_Sec", &fPosY_3);
    fTreeS4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeS4->Branch("PosZ_Sec", &fPosZ_3);
    fTreeS4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeS4->Branch("EnergySecond_abs", &fEnergySe);
    fTreeS4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeS4->Branch("PosX_Th", &fPosX_4);
    fTreeS4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeS4->Branch("PosY_Th", &fPosY_4);
    fTreeS4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeS4->Branch("PosZ_Th", &fPosZ_4);
    fTreeS4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeS4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeS4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeS4->Branch("PosX_Fo", &fPosX_5);
    fTreeS4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeS4->Branch("PosY_Fo", &fPosY_5);
    fTreeS4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeS4->Branch("PosZ_Fo", &fPosZ_5);
    fTreeS4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeS4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeS4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeS4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeS4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeS4->Branch("Energy_Abs", &fEnergy_2);
    fTreeS4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeS4->Branch("EnDiff", &fEnDiff);
    fTreeS4->Branch("EnergySum", &fEnergy_3);
    fTreeS4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeS4->Branch("Multiplicity", &fS);
    fTreeS4->Branch("DiffPosition", &fDiffPosX);
    fTreeS4->Branch("DiffEnergy", &fDiffEnergy);
    fTreeS4->Branch("AngularDistribution", &fTheta);
    fTreeS4->Branch("ECII", &fECII);
    fTreeS4->SetCircular(2000000); 
    
    fTreeS5 = new TTree("TreeS5", "TreeS5");
    fTreeS5->Branch("EventNumber", &fEventNumber);
    fTreeS5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeS5->Branch("Pos_eX", &fPos_eX);
    fTreeS5->Branch("Pos_eY", &fPos_eY);
    fTreeS5->Branch("Pos_eZ", &fPos_eZ);
    fTreeS5->Branch("Pos_pX", &fPos_pX);
    fTreeS5->Branch("Pos_pY", &fPos_pY);
    fTreeS5->Branch("Pos_pZ", &fPos_pZ);
    fTreeS5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeS5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeS5->Branch("PosX_Scat", &fPosX_1);
    fTreeS5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeS5->Branch("PosY_Scat", &fPosY_1);
    fTreeS5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeS5->Branch("PosZ_Scat", &fPosZ_1);
    fTreeS5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeS5->Branch("Pos_Scat", &fPosScat);
    fTreeS5->Branch("Energy_Scat", &fEnergy_1);
    fTreeS5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeS5->Branch("PosX_Abs", &fPosX_2);
    fTreeS5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeS5->Branch("PosY_Abs", &fPosY_2);
    fTreeS5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeS5->Branch("PosZ_Abs", &fPosZ_2);
    fTreeS5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeS5->Branch("Pos_Abs", &fPosAbs);
    fTreeS5->Branch("PosX_Sec", &fPosX_3);
    fTreeS5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeS5->Branch("PosY_Sec", &fPosY_3);
    fTreeS5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeS5->Branch("PosZ_Sec", &fPosZ_3);
    fTreeS5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeS5->Branch("EnergySecond_abs", &fEnergySe);
    fTreeS5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeS5->Branch("PosX_Th", &fPosX_4);
    fTreeS5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeS5->Branch("PosY_Th", &fPosY_4);
    fTreeS5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeS5->Branch("PosZ_Th", &fPosZ_4);
    fTreeS5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeS5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeS5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeS5->Branch("PosX_Fo", &fPosX_5);
    fTreeS5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeS5->Branch("PosY_Fo", &fPosY_5);
    fTreeS5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeS5->Branch("PosZ_Fo", &fPosZ_5);
    fTreeS5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeS5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeS5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeS5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeS5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeS5->Branch("Energy_Abs", &fEnergy_2);
    fTreeS5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeS5->Branch("EnDiff", &fEnDiff);
    fTreeS5->Branch("EnergySum", &fEnergy_3);
    fTreeS5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeS5->Branch("Multiplicity", &fS);
    fTreeS5->Branch("DiffPosition", &fDiffPosX);
    fTreeS5->Branch("DiffEnergy", &fDiffEnergy);
    fTreeS5->Branch("AngularDistribution", &fTheta);
    fTreeS5->Branch("ECII", &fECII);
    fTreeS5->SetCircular(2000000); 
/////////////////////////////////////////////////////
/// Total Background Trees for training phase  

    fTreeB2 = new TTree("TreeB2", "TreeB2");
    fTreeB2->Branch("EventNumber", &fEventNumber);
    fTreeB2->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeB2->Branch("Pos_eX", &fPos_eX);
    fTreeB2->Branch("Pos_eY", &fPos_eY);
    fTreeB2->Branch("Pos_eZ", &fPos_eZ);
    fTreeB2->Branch("Pos_pX", &fPos_pX);
    fTreeB2->Branch("Pos_pY", &fPos_pY);
    fTreeB2->Branch("Pos_pZ", &fPos_pZ);
    fTreeB2->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeB2->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeB2->Branch("PosX_Scat", &fPosX_1);
    fTreeB2->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeB2->Branch("PosY_Scat", &fPosY_1);
    fTreeB2->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeB2->Branch("PosZ_Scat", &fPosZ_1);
    fTreeB2->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeB2->Branch("Pos_Scat", &fPosScat);
    fTreeB2->Branch("Energy_Scat", &fEnergy_1);
    fTreeB2->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeB2->Branch("PosX_Abs", &fPosX_2);
    fTreeB2->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeB2->Branch("PosY_Abs", &fPosY_2);
    fTreeB2->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeB2->Branch("PosZ_Abs", &fPosZ_2);
    fTreeB2->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeB2->Branch("Pos_Abs", &fPosAbs);
    fTreeB2->Branch("PosX_Sec", &fPosX_3);
    fTreeB2->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeB2->Branch("PosY_Sec", &fPosY_3);
    fTreeB2->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeB2->Branch("PosZ_Sec", &fPosZ_3);
    fTreeB2->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeB2->Branch("EnergySecond_abs", &fEnergySe);
    fTreeB2->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeB2->Branch("PosX_Th", &fPosX_4);
    fTreeB2->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeB2->Branch("PosY_Th", &fPosY_4);
    fTreeB2->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeB2->Branch("PosZ_Th", &fPosZ_4);
    fTreeB2->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeB2->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeB2->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeB2->Branch("PosX_Fo", &fPosX_5);
    fTreeB2->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeB2->Branch("PosY_Fo", &fPosY_5);
    fTreeB2->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeB2->Branch("PosZ_Fo", &fPosZ_5);
    fTreeB2->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeB2->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeB2->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeB2->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeB2->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeB2->Branch("Energy_Abs", &fEnergy_2);
    fTreeB2->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeB2->Branch("EnDiff", &fEnDiff);
    fTreeB2->Branch("EnergySum", &fEnergy_3);
    fTreeB2->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeB2->Branch("Multiplicity", &fS);
    fTreeB2->Branch("DiffPosition", &fDiffPosX);
    fTreeB2->Branch("DiffEnergy", &fDiffEnergy);
    fTreeB2->Branch("AngularDistribution", &fTheta);
    fTreeB2->Branch("ECII", &fECII);
    fTreeB2->SetCircular(2000000); 
    
    fTreeB3 = new TTree("TreeB3", "TreeB3");
    fTreeB3->Branch("EventNumber", &fEventNumber);
    fTreeB3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeB3->Branch("Pos_eX", &fPos_eX);
    fTreeB3->Branch("Pos_eY", &fPos_eY);
    fTreeB3->Branch("Pos_eZ", &fPos_eZ);
    fTreeB3->Branch("Pos_pX", &fPos_pX);
    fTreeB3->Branch("Pos_pY", &fPos_pY);
    fTreeB3->Branch("Pos_pZ", &fPos_pZ);
    fTreeB3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeB3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeB3->Branch("PosX_Scat", &fPosX_1);
    fTreeB3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeB3->Branch("PosY_Scat", &fPosY_1);
    fTreeB3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeB3->Branch("PosZ_Scat", &fPosZ_1);
    fTreeB3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeB3->Branch("Pos_Scat", &fPosScat);
    fTreeB3->Branch("Energy_Scat", &fEnergy_1);
    fTreeB3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeB3->Branch("PosX_Abs", &fPosX_2);
    fTreeB3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeB3->Branch("PosY_Abs", &fPosY_2);
    fTreeB3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeB3->Branch("PosZ_Abs", &fPosZ_2);
    fTreeB3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeB3->Branch("Pos_Abs", &fPosAbs);
    fTreeB3->Branch("PosX_Sec", &fPosX_3);
    fTreeB3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeB3->Branch("PosY_Sec", &fPosY_3);
    fTreeB3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeB3->Branch("PosZ_Sec", &fPosZ_3);
    fTreeB3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeB3->Branch("EnergySecond_abs", &fEnergySe);
    fTreeB3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeB3->Branch("PosX_Th", &fPosX_4);
    fTreeB3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeB3->Branch("PosY_Th", &fPosY_4);
    fTreeB3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeB3->Branch("PosZ_Th", &fPosZ_4);
    fTreeB3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeB3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeB3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeB3->Branch("PosX_Fo", &fPosX_5);
    fTreeB3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeB3->Branch("PosY_Fo", &fPosY_5);
    fTreeB3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeB3->Branch("PosZ_Fo", &fPosZ_5);
    fTreeB3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeB3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeB3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeB3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeB3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeB3->Branch("Energy_Abs", &fEnergy_2);
    fTreeB3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeB3->Branch("EnDiff", &fEnDiff);
    fTreeB3->Branch("EnergySum", &fEnergy_3);
    fTreeB3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeB3->Branch("Multiplicity", &fS);
    fTreeB3->Branch("DiffPosition", &fDiffPosX);
    fTreeB3->Branch("DiffEnergy", &fDiffEnergy);
    fTreeB3->Branch("AngularDistribution", &fTheta);
    fTreeB3->Branch("ECII", &fECII);
    fTreeB3->SetCircular(2000000);
    
    fTreeB4 = new TTree("TreeB4", "TreeB4");
    fTreeB4->Branch("EventNumber", &fEventNumber);
    fTreeB4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeB4->Branch("Pos_eX", &fPos_eX);
    fTreeB4->Branch("Pos_eY", &fPos_eY);
    fTreeB4->Branch("Pos_eZ", &fPos_eZ);
    fTreeB4->Branch("Pos_pX", &fPos_pX);
    fTreeB4->Branch("Pos_pY", &fPos_pY);
    fTreeB4->Branch("Pos_pZ", &fPos_pZ);
    fTreeB4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeB4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeB4->Branch("PosX_Scat", &fPosX_1);
    fTreeB4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeB4->Branch("PosY_Scat", &fPosY_1);
    fTreeB4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeB4->Branch("PosZ_Scat", &fPosZ_1);
    fTreeB4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeB4->Branch("Pos_Scat", &fPosScat);
    fTreeB4->Branch("Energy_Scat", &fEnergy_1);
    fTreeB4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeB4->Branch("PosX_Abs", &fPosX_2);
    fTreeB4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeB4->Branch("PosY_Abs", &fPosY_2);
    fTreeB4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeB4->Branch("PosZ_Abs", &fPosZ_2);
    fTreeB4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeB4->Branch("Pos_Abs", &fPosAbs);
    fTreeB4->Branch("PosX_Sec", &fPosX_3);
    fTreeB4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeB4->Branch("PosY_Sec", &fPosY_3);
    fTreeB4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeB4->Branch("PosZ_Sec", &fPosZ_3);
    fTreeB4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeB4->Branch("EnergySecond_abs", &fEnergySe);
    fTreeB4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeB4->Branch("PosX_Th", &fPosX_4);
    fTreeB4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeB4->Branch("PosY_Th", &fPosY_4);
    fTreeB4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeB4->Branch("PosZ_Th", &fPosZ_4);
    fTreeB4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeB4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeB4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeB4->Branch("PosX_Fo", &fPosX_5);
    fTreeB4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeB4->Branch("PosY_Fo", &fPosY_5);
    fTreeB4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeB4->Branch("PosZ_Fo", &fPosZ_5);
    fTreeB4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeB4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeB4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeB4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeB4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeB4->Branch("Energy_Abs", &fEnergy_2);
    fTreeB4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeB4->Branch("EnDiff", &fEnDiff);
    fTreeB4->Branch("EnergySum", &fEnergy_3);
    fTreeB4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeB4->Branch("Multiplicity", &fS);
    fTreeB4->Branch("DiffPosition", &fDiffPosX);
    fTreeB4->Branch("DiffEnergy", &fDiffEnergy);
    fTreeB4->Branch("AngularDistribution", &fTheta);
    fTreeB4->Branch("ECII", &fECII);
    fTreeB4->SetCircular(2000000); 
    
    fTreeB5 = new TTree("TreeB5", "TreeB5");
    fTreeB5->Branch("EventNumber", &fEventNumber);
    fTreeB5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeB5->Branch("Pos_eX", &fPos_eX);
    fTreeB5->Branch("Pos_eY", &fPos_eY);
    fTreeB5->Branch("Pos_eZ", &fPos_eZ);
    fTreeB5->Branch("Pos_pX", &fPos_pX);
    fTreeB5->Branch("Pos_pY", &fPos_pY);
    fTreeB5->Branch("Pos_pZ", &fPos_pZ);
    fTreeB5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeB5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeB5->Branch("PosX_Scat", &fPosX_1);
    fTreeB5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeB5->Branch("PosY_Scat", &fPosY_1);
    fTreeB5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeB5->Branch("PosZ_Scat", &fPosZ_1);
    fTreeB5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeB5->Branch("Pos_Scat", &fPosScat);
    fTreeB5->Branch("Energy_Scat", &fEnergy_1);
    fTreeB5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeB5->Branch("PosX_Abs", &fPosX_2);
    fTreeB5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeB5->Branch("PosY_Abs", &fPosY_2);
    fTreeB5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeB5->Branch("PosZ_Abs", &fPosZ_2);
    fTreeB5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeB5->Branch("Pos_Abs", &fPosAbs);
    fTreeB5->Branch("PosX_Sec", &fPosX_3);
    fTreeB5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeB5->Branch("PosY_Sec", &fPosY_3);
    fTreeB5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeB5->Branch("PosZ_Sec", &fPosZ_3);
    fTreeB5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeB5->Branch("EnergySecond_abs", &fEnergySe);
    fTreeB5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeB5->Branch("PosX_Th", &fPosX_4);
    fTreeB5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeB5->Branch("PosY_Th", &fPosY_4);
    fTreeB5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeB5->Branch("PosZ_Th", &fPosZ_4);
    fTreeB5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeB5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeB5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeB5->Branch("PosX_Fo", &fPosX_5);
    fTreeB5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeB5->Branch("PosY_Fo", &fPosY_5);
    fTreeB5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeB5->Branch("PosZ_Fo", &fPosZ_5);
    fTreeB5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeB5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeB5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeB5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeB5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeB5->Branch("Energy_Abs", &fEnergy_2);
    fTreeB5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeB5->Branch("EnDiff", &fEnDiff);
    fTreeB5->Branch("EnergySum", &fEnergy_3);
    fTreeB5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeB5->Branch("Multiplicity", &fS);
    fTreeB5->Branch("DiffPosition", &fDiffPosX);
    fTreeB5->Branch("DiffEnergy", &fDiffEnergy);
    fTreeB5->Branch("AngularDistribution", &fTheta);
    fTreeB5->Branch("ECII", &fECII);
    fTreeB5->SetCircular(2000000);
//////////////////////////////////////////////////////////////
/// Bad Compton events trees
    
    fTreeBB2 = new TTree("TreeBB2", "TreeBB2");
    fTreeBB2->Branch("EventNumber", &fEventNumber);
    fTreeBB2->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBB2->Branch("Pos_eX", &fPos_eX);
    fTreeBB2->Branch("Pos_eY", &fPos_eY);
    fTreeBB2->Branch("Pos_eZ", &fPos_eZ);
    fTreeBB2->Branch("Pos_pX", &fPos_pX);
    fTreeBB2->Branch("Pos_pY", &fPos_pY);
    fTreeBB2->Branch("Pos_pZ", &fPos_pZ);
    fTreeBB2->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBB2->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBB2->Branch("PosX_Scat", &fPosX_1);
    fTreeBB2->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBB2->Branch("PosY_Scat", &fPosY_1);
    fTreeBB2->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBB2->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBB2->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBB2->Branch("Pos_Scat", &fPosScat);
    fTreeBB2->Branch("Energy_Scat", &fEnergy_1);
    fTreeBB2->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBB2->Branch("PosX_Abs", &fPosX_2);
    fTreeBB2->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBB2->Branch("PosY_Abs", &fPosY_2);
    fTreeBB2->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBB2->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBB2->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBB2->Branch("Pos_Abs", &fPosAbs);
    fTreeBB2->Branch("PosX_Sec", &fPosX_3);
    fTreeBB2->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBB2->Branch("PosY_Sec", &fPosY_3);
    fTreeBB2->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBB2->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBB2->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBB2->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBB2->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBB2->Branch("PosX_Th", &fPosX_4);
    fTreeBB2->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBB2->Branch("PosY_Th", &fPosY_4);
    fTreeBB2->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBB2->Branch("PosZ_Th", &fPosZ_4);
    fTreeBB2->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBB2->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBB2->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBB2->Branch("PosX_Fo", &fPosX_5);
    fTreeBB2->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBB2->Branch("PosY_Fo", &fPosY_5);
    fTreeBB2->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBB2->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBB2->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBB2->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBB2->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBB2->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBB2->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBB2->Branch("Energy_Abs", &fEnergy_2);
    fTreeBB2->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBB2->Branch("EnDiff", &fEnDiff);
    fTreeBB2->Branch("EnergySum", &fEnergy_3);
    fTreeBB2->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBB2->Branch("Multiplicity", &fS);
    fTreeBB2->Branch("DiffPosition", &fDiffPosX);
    fTreeBB2->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBB2->Branch("AngularDistribution", &fTheta);
    fTreeBB2->Branch("ECII", &fECII);
    fTreeBB2->SetCircular(2000000); 
  
    
    fTreeBB3 = new TTree("TreeBB3", "TreeBB3");
    fTreeBB3->Branch("EventNumber", &fEventNumber);
    fTreeBB3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBB3->Branch("Pos_eX", &fPos_eX);
    fTreeBB3->Branch("Pos_eY", &fPos_eY);
    fTreeBB3->Branch("Pos_eZ", &fPos_eZ);
    fTreeBB3->Branch("Pos_pX", &fPos_pX);
    fTreeBB3->Branch("Pos_pY", &fPos_pY);
    fTreeBB3->Branch("Pos_pZ", &fPos_pZ);
    fTreeBB3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBB3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBB3->Branch("PosX_Scat", &fPosX_1);
    fTreeBB3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBB3->Branch("PosY_Scat", &fPosY_1);
    fTreeBB3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBB3->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBB3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBB3->Branch("Pos_Scat", &fPosScat);
    fTreeBB3->Branch("Energy_Scat", &fEnergy_1);
    fTreeBB3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBB3->Branch("PosX_Abs", &fPosX_2);
    fTreeBB3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBB3->Branch("PosY_Abs", &fPosY_2);
    fTreeBB3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBB3->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBB3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBB3->Branch("Pos_Abs", &fPosAbs);
    fTreeBB3->Branch("PosX_Sec", &fPosX_3);
    fTreeBB3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBB3->Branch("PosY_Sec", &fPosY_3);
    fTreeBB3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBB3->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBB3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBB3->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBB3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBB3->Branch("PosX_Th", &fPosX_4);
    fTreeBB3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBB3->Branch("PosY_Th", &fPosY_4);
    fTreeBB3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBB3->Branch("PosZ_Th", &fPosZ_4);
    fTreeBB3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBB3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBB3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBB3->Branch("PosX_Fo", &fPosX_5);
    fTreeBB3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBB3->Branch("PosY_Fo", &fPosY_5);
    fTreeBB3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBB3->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBB3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBB3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBB3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBB3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBB3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBB3->Branch("Energy_Abs", &fEnergy_2);
    fTreeBB3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBB3->Branch("EnDiff", &fEnDiff);
    fTreeBB3->Branch("EnergySum", &fEnergy_3);
    fTreeBB3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBB3->Branch("Multiplicity", &fS);
    fTreeBB3->Branch("DiffPosition", &fDiffPosX);
    fTreeBB3->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBB3->Branch("AngularDistribution", &fTheta);
    fTreeBB3->Branch("ECII", &fECII);
    fTreeBB3->SetCircular(2000000);
   
    
    fTreeBB4 = new TTree("TreeBB4", "TreeBB4");
    fTreeBB4->Branch("EventNumber", &fEventNumber);
    fTreeBB4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBB4->Branch("Pos_eX", &fPos_eX);
    fTreeBB4->Branch("Pos_eY", &fPos_eY);
    fTreeBB4->Branch("Pos_eZ", &fPos_eZ);
    fTreeBB4->Branch("Pos_pX", &fPos_pX);
    fTreeBB4->Branch("Pos_pY", &fPos_pY);
    fTreeBB4->Branch("Pos_pZ", &fPos_pZ);
    fTreeBB4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBB4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBB4->Branch("PosX_Scat", &fPosX_1);
    fTreeBB4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBB4->Branch("PosY_Scat", &fPosY_1);
    fTreeBB4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBB4->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBB4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBB4->Branch("Pos_Scat", &fPosScat);
    fTreeBB4->Branch("Energy_Scat", &fEnergy_1);
    fTreeBB4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBB4->Branch("PosX_Abs", &fPosX_2);
    fTreeBB4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBB4->Branch("PosY_Abs", &fPosY_2);
    fTreeBB4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBB4->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBB4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBB4->Branch("Pos_Abs", &fPosAbs);
    fTreeBB4->Branch("PosX_Sec", &fPosX_3);
    fTreeBB4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBB4->Branch("PosY_Sec", &fPosY_3);
    fTreeBB4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBB4->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBB4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBB4->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBB4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBB4->Branch("PosX_Th", &fPosX_4);
    fTreeBB4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBB4->Branch("PosY_Th", &fPosY_4);
    fTreeBB4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBB4->Branch("PosZ_Th", &fPosZ_4);
    fTreeBB4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBB4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBB4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBB4->Branch("PosX_Fo", &fPosX_5);
    fTreeBB4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBB4->Branch("PosY_Fo", &fPosY_5);
    fTreeBB4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBB4->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBB4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBB4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBB4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBB4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBB4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBB4->Branch("Energy_Abs", &fEnergy_2);
    fTreeBB4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBB4->Branch("EnDiff", &fEnDiff);
    fTreeBB4->Branch("EnergySum", &fEnergy_3);
    fTreeBB4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBB4->Branch("Multiplicity", &fS);
    fTreeBB4->Branch("DiffPosition", &fDiffPosX);
    fTreeBB4->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBB4->Branch("AngularDistribution", &fTheta);
    fTreeBB4->Branch("ECII", &fECII);
    fTreeBB4->SetCircular(2000000);
    
    fTreeBB5 = new TTree("TreeBB5", "TreeBB5");
    fTreeBB5->Branch("EventNumber", &fEventNumber);
    fTreeBB5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBB5->Branch("Pos_eX", &fPos_eX);
    fTreeBB5->Branch("Pos_eY", &fPos_eY);
    fTreeBB5->Branch("Pos_eZ", &fPos_eZ);
    fTreeBB5->Branch("Pos_pX", &fPos_pX);
    fTreeBB5->Branch("Pos_pY", &fPos_pY);
    fTreeBB5->Branch("Pos_pZ", &fPos_pZ);
    fTreeBB5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBB5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBB5->Branch("PosX_Scat", &fPosX_1);
    fTreeBB5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBB5->Branch("PosY_Scat", &fPosY_1);
    fTreeBB5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBB5->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBB5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBB5->Branch("Pos_Scat", &fPosScat);
    fTreeBB5->Branch("Energy_Scat", &fEnergy_1);
    fTreeBB5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBB5->Branch("PosX_Abs", &fPosX_2);
    fTreeBB5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBB5->Branch("PosY_Abs", &fPosY_2);
    fTreeBB5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBB5->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBB5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBB5->Branch("Pos_Abs", &fPosAbs);
    fTreeBB5->Branch("PosX_Sec", &fPosX_3);
    fTreeBB5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBB5->Branch("PosY_Sec", &fPosY_3);
    fTreeBB5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBB5->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBB5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBB5->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBB5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBB5->Branch("PosX_Th", &fPosX_4);
    fTreeBB5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBB5->Branch("PosY_Th", &fPosY_4);
    fTreeBB5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBB5->Branch("PosZ_Th", &fPosZ_4);
    fTreeBB5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBB5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBB5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBB5->Branch("PosX_Fo", &fPosX_5);
    fTreeBB5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBB5->Branch("PosY_Fo", &fPosY_5);
    fTreeBB5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBB5->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBB5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBB5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBB5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBB5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBB5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBB5->Branch("Energy_Abs", &fEnergy_2);
    fTreeBB5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBB5->Branch("EnDiff", &fEnDiff);
    fTreeBB5->Branch("EnergySum", &fEnergy_3);
    fTreeBB5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBB5->Branch("Multiplicity", &fS);
    fTreeBB5->Branch("DiffPosition", &fDiffPosX);
    fTreeBB5->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBB5->Branch("AngularDistribution", &fTheta);
    fTreeBB5->Branch("ECII", &fECII);
    fTreeBB5->SetCircular(2000000);
/////////////////////////////////////////////////////////////////
/// Duplicates trees
    
    fTreedB3 = new TTree("TreedB3", "TreedB3");
    fTreedB3->Branch("EventNumber", &fEventNumber);
    fTreedB3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreedB3->Branch("Pos_eX", &fPos_eX);
    fTreedB3->Branch("Pos_eY", &fPos_eY);
    fTreedB3->Branch("Pos_eZ", &fPos_eZ);
    fTreedB3->Branch("Pos_pX", &fPos_pX);
    fTreedB3->Branch("Pos_pY", &fPos_pY);
    fTreedB3->Branch("Pos_pZ", &fPos_pZ);
    fTreedB3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreedB3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreedB3->Branch("PosX_Scat", &fPosX_1);
    fTreedB3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreedB3->Branch("PosY_Scat", &fPosY_1);
    fTreedB3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreedB3->Branch("PosZ_Scat", &fPosZ_1);
    fTreedB3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreedB3->Branch("Pos_Scat", &fPosScat);
    fTreedB3->Branch("Energy_Scat", &fEnergy_1);
    fTreedB3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreedB3->Branch("PosX_Abs", &fPosX_2);
    fTreedB3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreedB3->Branch("PosY_Abs", &fPosY_2);
    fTreedB3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreedB3->Branch("PosZ_Abs", &fPosZ_2);
    fTreedB3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreedB3->Branch("Pos_Abs", &fPosAbs);
    fTreedB3->Branch("PosX_Sec", &fPosX_3);
    fTreedB3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreedB3->Branch("PosY_Sec", &fPosY_3);
    fTreedB3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreedB3->Branch("PosZ_Sec", &fPosZ_3);
    fTreedB3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreedB3->Branch("EnergySecond_abs", &fEnergySe);
    fTreedB3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreedB3->Branch("PosX_Th", &fPosX_4);
    fTreedB3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreedB3->Branch("PosY_Th", &fPosY_4);
    fTreedB3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreedB3->Branch("PosZ_Th", &fPosZ_4);
    fTreedB3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreedB3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreedB3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreedB3->Branch("PosX_Fo", &fPosX_5);
    fTreedB3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreedB3->Branch("PosY_Fo", &fPosY_5);
    fTreedB3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreedB3->Branch("PosZ_Fo", &fPosZ_5);
    fTreedB3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreedB3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreedB3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreedB3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreedB3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreedB3->Branch("Energy_Abs", &fEnergy_2);
    fTreedB3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreedB3->Branch("EnDiff", &fEnDiff);
    fTreedB3->Branch("EnergySum", &fEnergy_3);
    fTreedB3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreedB3->Branch("Multiplicity", &fS);
    fTreedB3->Branch("DiffPosition", &fDiffPosX);
    fTreedB3->Branch("DiffEnergy", &fDiffEnergy);
    fTreedB3->Branch("AngularDistribution", &fTheta);
    fTreedB3->Branch("ECII", &fECII);
    fTreedB3->SetCircular(2000000);
  
    fTreedB4 = new TTree("TreedB4", "TreedB4");
    fTreedB4->Branch("EventNumber", &fEventNumber);
    fTreedB4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreedB4->Branch("Pos_eX", &fPos_eX);
    fTreedB4->Branch("Pos_eY", &fPos_eY);
    fTreedB4->Branch("Pos_eZ", &fPos_eZ);
    fTreedB4->Branch("Pos_pX", &fPos_pX);
    fTreedB4->Branch("Pos_pY", &fPos_pY);
    fTreedB4->Branch("Pos_pZ", &fPos_pZ);
    fTreedB4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreedB4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreedB4->Branch("PosX_Scat", &fPosX_1);
    fTreedB4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreedB4->Branch("PosY_Scat", &fPosY_1);
    fTreedB4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreedB4->Branch("PosZ_Scat", &fPosZ_1);
    fTreedB4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreedB4->Branch("Pos_Scat", &fPosScat);
    fTreedB4->Branch("Energy_Scat", &fEnergy_1);
    fTreedB4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreedB4->Branch("PosX_Abs", &fPosX_2);
    fTreedB4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreedB4->Branch("PosY_Abs", &fPosY_2);
    fTreedB4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreedB4->Branch("PosZ_Abs", &fPosZ_2);
    fTreedB4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreedB4->Branch("Pos_Abs", &fPosAbs);
    fTreedB4->Branch("PosX_Sec", &fPosX_3);
    fTreedB4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreedB4->Branch("PosY_Sec", &fPosY_3);
    fTreedB4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreedB4->Branch("PosZ_Sec", &fPosZ_3);
    fTreedB4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreedB4->Branch("EnergySecond_abs", &fEnergySe);
    fTreedB4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreedB4->Branch("PosX_Th", &fPosX_4);
    fTreedB4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreedB4->Branch("PosY_Th", &fPosY_4);
    fTreedB4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreedB4->Branch("PosZ_Th", &fPosZ_4);
    fTreedB4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreedB4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreedB4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreedB4->Branch("PosX_Fo", &fPosX_5);
    fTreedB4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreedB4->Branch("PosY_Fo", &fPosY_5);
    fTreedB4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreedB4->Branch("PosZ_Fo", &fPosZ_5);
    fTreedB4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreedB4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreedB4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreedB4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreedB4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreedB4->Branch("Energy_Abs", &fEnergy_2);
    fTreedB4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreedB4->Branch("EnDiff", &fEnDiff);
    fTreedB4->Branch("EnergySum", &fEnergy_3);
    fTreedB4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreedB4->Branch("Multiplicity", &fS);
    fTreedB4->Branch("DiffPosition", &fDiffPosX);
    fTreedB4->Branch("DiffEnergy", &fDiffEnergy);
    fTreedB4->Branch("AngularDistribution", &fTheta);
    fTreedB4->Branch("ECII", &fECII);
    fTreedB4->SetCircular(2000000);

    fTreedB5 = new TTree("TreedB5", "TreedB5");
    fTreedB5->Branch("EventNumber", &fEventNumber);
    fTreedB5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreedB5->Branch("Pos_eX", &fPos_eX);
    fTreedB5->Branch("Pos_eY", &fPos_eY);
    fTreedB5->Branch("Pos_eZ", &fPos_eZ);
    fTreedB5->Branch("Pos_pX", &fPos_pX);
    fTreedB5->Branch("Pos_pY", &fPos_pY);
    fTreedB5->Branch("Pos_pZ", &fPos_pZ);
    fTreedB5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreedB5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreedB5->Branch("PosX_Scat", &fPosX_1);
    fTreedB5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreedB5->Branch("PosY_Scat", &fPosY_1);
    fTreedB5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreedB5->Branch("PosZ_Scat", &fPosZ_1);
    fTreedB5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreedB5->Branch("Pos_Scat", &fPosScat);
    fTreedB5->Branch("Energy_Scat", &fEnergy_1);
    fTreedB5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreedB5->Branch("PosX_Abs", &fPosX_2);
    fTreedB5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreedB5->Branch("PosY_Abs", &fPosY_2);
    fTreedB5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreedB5->Branch("PosZ_Abs", &fPosZ_2);
    fTreedB5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreedB5->Branch("Pos_Abs", &fPosAbs);
    fTreedB5->Branch("PosX_Sec", &fPosX_3);
    fTreedB5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreedB5->Branch("PosY_Sec", &fPosY_3);
    fTreedB5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreedB5->Branch("PosZ_Sec", &fPosZ_3);
    fTreedB5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreedB5->Branch("EnergySecond_abs", &fEnergySe);
    fTreedB5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreedB5->Branch("PosX_Th", &fPosX_4);
    fTreedB5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreedB5->Branch("PosY_Th", &fPosY_4);
    fTreedB5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreedB5->Branch("PosZ_Th", &fPosZ_4);
    fTreedB5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreedB5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreedB5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreedB5->Branch("PosX_Fo", &fPosX_5);
    fTreedB5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreedB5->Branch("PosY_Fo", &fPosY_5);
    fTreedB5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreedB5->Branch("PosZ_Fo", &fPosZ_5);
    fTreedB5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreedB5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreedB5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreedB5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreedB5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreedB5->Branch("Energy_Abs", &fEnergy_2);
    fTreedB5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreedB5->Branch("EnDiff", &fEnDiff);
    fTreedB5->Branch("EnergySum", &fEnergy_3);
    fTreedB5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreedB5->Branch("Multiplicity", &fS);
    fTreedB5->Branch("DiffPosition", &fDiffPosX);
    fTreedB5->Branch("DiffEnergy", &fDiffEnergy);
    fTreedB5->Branch("AngularDistribution", &fTheta);
    fTreedB5->Branch("ECII", &fECII);
    fTreedB5->SetCircular(2000000);
////////////////////////////////////////////////////////////////
/// Non-Compton trees
  
    fTreeRB2 = new TTree("TreeRB2", "TreeRB2");
    fTreeRB2->Branch("EventNumber", &fEventNumber);
    fTreeRB2->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeRB2->Branch("Pos_eX", &fPos_eX);
    fTreeRB2->Branch("Pos_eY", &fPos_eY);
    fTreeRB2->Branch("Pos_eZ", &fPos_eZ);
    fTreeRB2->Branch("Pos_pX", &fPos_pX);
    fTreeRB2->Branch("Pos_pY", &fPos_pY);
    fTreeRB2->Branch("Pos_pZ", &fPos_pZ);
    fTreeRB2->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeRB2->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeRB2->Branch("PosX_Scat", &fPosX_1);
    fTreeRB2->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeRB2->Branch("PosY_Scat", &fPosY_1);
    fTreeRB2->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeRB2->Branch("PosZ_Scat", &fPosZ_1);
    fTreeRB2->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeRB2->Branch("Pos_Scat", &fPosScat);
    fTreeRB2->Branch("Energy_Scat", &fEnergy_1);
    fTreeRB2->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeRB2->Branch("PosX_Abs", &fPosX_2);
    fTreeRB2->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeRB2->Branch("PosY_Abs", &fPosY_2);
    fTreeRB2->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeRB2->Branch("PosZ_Abs", &fPosZ_2);
    fTreeRB2->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeRB2->Branch("Pos_Abs", &fPosAbs);
    fTreeRB2->Branch("PosX_Sec", &fPosX_3);
    fTreeRB2->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeRB2->Branch("PosY_Sec", &fPosY_3);
    fTreeRB2->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeRB2->Branch("PosZ_Sec", &fPosZ_3);
    fTreeRB2->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeRB2->Branch("EnergySecond_abs", &fEnergySe);
    fTreeRB2->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeRB2->Branch("PosX_Th", &fPosX_4);
    fTreeRB2->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeRB2->Branch("PosY_Th", &fPosY_4);
    fTreeRB2->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeRB2->Branch("PosZ_Th", &fPosZ_4);
    fTreeRB2->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeRB2->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeRB2->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeRB2->Branch("PosX_Fo", &fPosX_5);
    fTreeRB2->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeRB2->Branch("PosY_Fo", &fPosY_5);
    fTreeRB2->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeRB2->Branch("PosZ_Fo", &fPosZ_5);
    fTreeRB2->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeRB2->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeRB2->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeRB2->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeRB2->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeRB2->Branch("Energy_Abs", &fEnergy_2);
    fTreeRB2->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeRB2->Branch("EnDiff", &fEnDiff);
    fTreeRB2->Branch("EnergySum", &fEnergy_3);
    fTreeRB2->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeRB2->Branch("Multiplicity", &fS);
    fTreeRB2->Branch("DiffPosition", &fDiffPosX);
    fTreeRB2->Branch("DiffEnergy", &fDiffEnergy);
    fTreeRB2->Branch("AngularDistribution", &fTheta);
    fTreeRB2->Branch("ECII", &fECII);
    fTreeRB2->SetCircular(2000000); 
  
    fTreeRB3 = new TTree("TreeRB3", "TreeRB3");
    fTreeRB3->Branch("EventNumber", &fEventNumber);
    fTreeRB3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeRB3->Branch("Pos_eX", &fPos_eX);
    fTreeRB3->Branch("Pos_eY", &fPos_eY);
    fTreeRB3->Branch("Pos_eZ", &fPos_eZ);
    fTreeRB3->Branch("Pos_pX", &fPos_pX);
    fTreeRB3->Branch("Pos_pY", &fPos_pY);
    fTreeRB3->Branch("Pos_pZ", &fPos_pZ);
    fTreeRB3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeRB3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeRB3->Branch("PosX_Scat", &fPosX_1);
    fTreeRB3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeRB3->Branch("PosY_Scat", &fPosY_1);
    fTreeRB3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeRB3->Branch("PosZ_Scat", &fPosZ_1);
    fTreeRB3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeRB3->Branch("Pos_Scat", &fPosScat);
    fTreeRB3->Branch("Energy_Scat", &fEnergy_1);
    fTreeRB3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeRB3->Branch("PosX_Abs", &fPosX_2);
    fTreeRB3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeRB3->Branch("PosY_Abs", &fPosY_2);
    fTreeRB3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeRB3->Branch("PosZ_Abs", &fPosZ_2);
    fTreeRB3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeRB3->Branch("Pos_Abs", &fPosAbs);
    fTreeRB3->Branch("PosX_Sec", &fPosX_3);
    fTreeRB3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeRB3->Branch("PosY_Sec", &fPosY_3);
    fTreeRB3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeRB3->Branch("PosZ_Sec", &fPosZ_3);
    fTreeRB3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeRB3->Branch("EnergySecond_abs", &fEnergySe);
    fTreeRB3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeRB3->Branch("PosX_Th", &fPosX_4);
    fTreeRB3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeRB3->Branch("PosY_Th", &fPosY_4);
    fTreeRB3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeRB3->Branch("PosZ_Th", &fPosZ_4);
    fTreeRB3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeRB3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeRB3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeRB3->Branch("PosX_Fo", &fPosX_5);
    fTreeRB3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeRB3->Branch("PosY_Fo", &fPosY_5);
    fTreeRB3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeRB3->Branch("PosZ_Fo", &fPosZ_5);
    fTreeRB3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeRB3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeRB3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeRB3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeRB3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeRB3->Branch("Energy_Abs", &fEnergy_2);
    fTreeRB3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeRB3->Branch("EnDiff", &fEnDiff);
    fTreeRB3->Branch("EnergySum", &fEnergy_3);
    fTreeRB3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeRB3->Branch("Multiplicity", &fS);
    fTreeRB3->Branch("DiffPosition", &fDiffPosX);
    fTreeRB3->Branch("DiffEnergy", &fDiffEnergy);
    fTreeRB3->Branch("AngularDistribution", &fTheta);
    fTreeRB3->Branch("ECII", &fECII);
    fTreeRB3->SetCircular(2000000); 
  
    fTreeRB4 = new TTree("TreeRB4", "TreeRB4");
    fTreeRB4->Branch("EventNumber", &fEventNumber);
    fTreeRB4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeRB4->Branch("Pos_eX", &fPos_eX);
    fTreeRB4->Branch("Pos_eY", &fPos_eY);
    fTreeRB4->Branch("Pos_eZ", &fPos_eZ);
    fTreeRB4->Branch("Pos_pX", &fPos_pX);
    fTreeRB4->Branch("Pos_pY", &fPos_pY);
    fTreeRB4->Branch("Pos_pZ", &fPos_pZ);
    fTreeRB4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeRB4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeRB4->Branch("PosX_Scat", &fPosX_1);
    fTreeRB4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeRB4->Branch("PosY_Scat", &fPosY_1);
    fTreeRB4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeRB4->Branch("PosZ_Scat", &fPosZ_1);
    fTreeRB4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeRB4->Branch("Pos_Scat", &fPosScat);
    fTreeRB4->Branch("Energy_Scat", &fEnergy_1);
    fTreeRB4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeRB4->Branch("PosX_Abs", &fPosX_2);
    fTreeRB4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeRB4->Branch("PosY_Abs", &fPosY_2);
    fTreeRB4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeRB4->Branch("PosZ_Abs", &fPosZ_2);
    fTreeRB4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeRB4->Branch("Pos_Abs", &fPosAbs);
    fTreeRB4->Branch("PosX_Sec", &fPosX_3);
    fTreeRB4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeRB4->Branch("PosY_Sec", &fPosY_3);
    fTreeRB4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeRB4->Branch("PosZ_Sec", &fPosZ_3);
    fTreeRB4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeRB4->Branch("EnergySecond_abs", &fEnergySe);
    fTreeRB4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeRB4->Branch("PosX_Th", &fPosX_4);
    fTreeRB4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeRB4->Branch("PosY_Th", &fPosY_4);
    fTreeRB4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeRB4->Branch("PosZ_Th", &fPosZ_4);
    fTreeRB4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeRB4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeRB4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeRB4->Branch("PosX_Fo", &fPosX_5);
    fTreeRB4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeRB4->Branch("PosY_Fo", &fPosY_5);
    fTreeRB4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeRB4->Branch("PosZ_Fo", &fPosZ_5);
    fTreeRB4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeRB4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeRB4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeRB4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeRB4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeRB4->Branch("Energy_Abs", &fEnergy_2);
    fTreeRB4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeRB4->Branch("EnDiff", &fEnDiff);
    fTreeRB4->Branch("EnergySum", &fEnergy_3);
    fTreeRB4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeRB4->Branch("Multiplicity", &fS);
    fTreeRB4->Branch("DiffPosition", &fDiffPosX);
    fTreeRB4->Branch("DiffEnergy", &fDiffEnergy);
    fTreeRB4->Branch("AngularDistribution", &fTheta);
    fTreeRB4->Branch("ECII", &fECII);
    fTreeRB4->SetCircular(2000000); 
    
    fTreeRB5 = new TTree("TreeRB5", "TreeRB5");
    fTreeRB5->Branch("EventNumber", &fEventNumber);
    fTreeRB5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeRB5->Branch("Pos_eX", &fPos_eX);
    fTreeRB5->Branch("Pos_eY", &fPos_eY);
    fTreeRB5->Branch("Pos_eZ", &fPos_eZ);
    fTreeRB5->Branch("Pos_pX", &fPos_pX);
    fTreeRB5->Branch("Pos_pY", &fPos_pY);
    fTreeRB5->Branch("Pos_pZ", &fPos_pZ);
    fTreeRB5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeRB5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeRB5->Branch("PosX_Scat", &fPosX_1);
    fTreeRB5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeRB5->Branch("PosY_Scat", &fPosY_1);
    fTreeRB5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeRB5->Branch("PosZ_Scat", &fPosZ_1);
    fTreeRB5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeRB5->Branch("Pos_Scat", &fPosScat);
    fTreeRB5->Branch("Energy_Scat", &fEnergy_1);
    fTreeRB5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeRB5->Branch("PosX_Abs", &fPosX_2);
    fTreeRB5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeRB5->Branch("PosY_Abs", &fPosY_2);
    fTreeRB5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeRB5->Branch("PosZ_Abs", &fPosZ_2);
    fTreeRB5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeRB5->Branch("Pos_Abs", &fPosAbs);
    fTreeRB5->Branch("PosX_Sec", &fPosX_3);
    fTreeRB5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeRB5->Branch("PosY_Sec", &fPosY_3);
    fTreeRB5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeRB5->Branch("PosZ_Sec", &fPosZ_3);
    fTreeRB5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeRB5->Branch("EnergySecond_abs", &fEnergySe);
    fTreeRB5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeRB5->Branch("PosX_Th", &fPosX_4);
    fTreeRB5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeRB5->Branch("PosY_Th", &fPosY_4);
    fTreeRB5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeRB5->Branch("PosZ_Th", &fPosZ_4);
    fTreeRB5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeRB5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeRB5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeRB5->Branch("PosX_Fo", &fPosX_5);
    fTreeRB5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeRB5->Branch("PosY_Fo", &fPosY_5);
    fTreeRB5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeRB5->Branch("PosZ_Fo", &fPosZ_5);
    fTreeRB5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeRB5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeRB5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeRB5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeRB5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeRB5->Branch("Energy_Abs", &fEnergy_2);
    fTreeRB5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeRB5->Branch("EnDiff", &fEnDiff);
    fTreeRB5->Branch("EnergySum", &fEnergy_3);
    fTreeRB5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeRB5->Branch("Multiplicity", &fS);
    fTreeRB5->Branch("DiffPosition", &fDiffPosX);
    fTreeRB5->Branch("DiffEnergy", &fDiffEnergy);
    fTreeRB5->Branch("AngularDistribution", &fTheta);
    fTreeRB5->Branch("ECII", &fECII);
    fTreeRB5->SetCircular(2000000); 
/////////////////////////////////////////////////////////
/// Back-scattering events trees
    
    fTreeBS2 = new TTree("TreeBS2", "TreeBS2");
    fTreeBS2->Branch("EventNumber", &fEventNumber);
    fTreeBS2->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBS2->Branch("Pos_eX", &fPos_eX);
    fTreeBS2->Branch("Pos_eY", &fPos_eY);
    fTreeBS2->Branch("Pos_eZ", &fPos_eZ);
    fTreeBS2->Branch("Pos_pX", &fPos_pX);
    fTreeBS2->Branch("Pos_pY", &fPos_pY);
    fTreeBS2->Branch("Pos_pZ", &fPos_pZ);
    fTreeBS2->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBS2->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBS2->Branch("PosX_Scat", &fPosX_1);
    fTreeBS2->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBS2->Branch("PosY_Scat", &fPosY_1);
    fTreeBS2->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBS2->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBS2->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBS2->Branch("Pos_Scat", &fPosScat);
    fTreeBS2->Branch("Energy_Scat", &fEnergy_1);
    fTreeBS2->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBS2->Branch("PosX_Abs", &fPosX_2);
    fTreeBS2->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBS2->Branch("PosY_Abs", &fPosY_2);
    fTreeBS2->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBS2->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBS2->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBS2->Branch("Pos_Abs", &fPosAbs);
    fTreeBS2->Branch("PosX_Sec", &fPosX_3);
    fTreeBS2->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBS2->Branch("PosY_Sec", &fPosY_3);
    fTreeBS2->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBS2->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBS2->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBS2->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBS2->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBS2->Branch("PosX_Th", &fPosX_4);
    fTreeBS2->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBS2->Branch("PosY_Th", &fPosY_4);
    fTreeBS2->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBS2->Branch("PosZ_Th", &fPosZ_4);
    fTreeBS2->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBS2->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBS2->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBS2->Branch("PosX_Fo", &fPosX_5);
    fTreeBS2->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBS2->Branch("PosY_Fo", &fPosY_5);
    fTreeBS2->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBS2->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBS2->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBS2->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBS2->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBS2->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBS2->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBS2->Branch("Energy_Abs", &fEnergy_2);
    fTreeBS2->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBS2->Branch("EnDiff", &fEnDiff);
    fTreeBS2->Branch("EnergySum", &fEnergy_3);
    fTreeBS2->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBS2->Branch("Multiplicity", &fS);
    fTreeBS2->Branch("DiffPosition", &fDiffPosX);
    fTreeBS2->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBS2->Branch("AngularDistribution", &fTheta);
    fTreeBS2->Branch("ECII", &fECII);
    fTreeBS2->SetCircular(2000000); 
  
    fTreeBS3 = new TTree("TreeBS3", "TreeBS3");
    fTreeBS3->Branch("EventNumber", &fEventNumber);
    fTreeBS3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBS3->Branch("Pos_eX", &fPos_eX);
    fTreeBS3->Branch("Pos_eY", &fPos_eY);
    fTreeBS3->Branch("Pos_eZ", &fPos_eZ);
    fTreeBS3->Branch("Pos_pX", &fPos_pX);
    fTreeBS3->Branch("Pos_pY", &fPos_pY);
    fTreeBS3->Branch("Pos_pZ", &fPos_pZ);
    fTreeBS3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBS3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBS3->Branch("PosX_Scat", &fPosX_1);
    fTreeBS3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBS3->Branch("PosY_Scat", &fPosY_1);
    fTreeBS3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBS3->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBS3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBS3->Branch("Pos_Scat", &fPosScat);
    fTreeBS3->Branch("Energy_Scat", &fEnergy_1);
    fTreeBS3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBS3->Branch("PosX_Abs", &fPosX_2);
    fTreeBS3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBS3->Branch("PosY_Abs", &fPosY_2);
    fTreeBS3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBS3->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBS3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBS3->Branch("Pos_Abs", &fPosAbs);
    fTreeBS3->Branch("PosX_Sec", &fPosX_3);
    fTreeBS3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBS3->Branch("PosY_Sec", &fPosY_3);
    fTreeBS3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBS3->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBS3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBS3->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBS3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBS3->Branch("PosX_Th", &fPosX_4);
    fTreeBS3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBS3->Branch("PosY_Th", &fPosY_4);
    fTreeBS3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBS3->Branch("PosZ_Th", &fPosZ_4);
    fTreeBS3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBS3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBS3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBS3->Branch("PosX_Fo", &fPosX_5);
    fTreeBS3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBS3->Branch("PosY_Fo", &fPosY_5);
    fTreeBS3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBS3->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBS3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBS3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBS3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBS3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBS3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBS3->Branch("Energy_Abs", &fEnergy_2);
    fTreeBS3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBS3->Branch("EnDiff", &fEnDiff);
    fTreeBS3->Branch("EnergySum", &fEnergy_3);
    fTreeBS3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBS3->Branch("Multiplicity", &fS);
    fTreeBS3->Branch("DiffPosition", &fDiffPosX);
    fTreeBS3->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBS3->Branch("AngularDistribution", &fTheta);
    fTreeBS3->Branch("ECII", &fECII);
    fTreeBS3->SetCircular(2000000); 
  
    fTreeBS4 = new TTree("TreeBS4", "TreeBS4");
    fTreeBS4->Branch("EventNumber", &fEventNumber);
    fTreeBS4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBS4->Branch("Pos_eX", &fPos_eX);
    fTreeBS4->Branch("Pos_eY", &fPos_eY);
    fTreeBS4->Branch("Pos_eZ", &fPos_eZ);
    fTreeBS4->Branch("Pos_pX", &fPos_pX);
    fTreeBS4->Branch("Pos_pY", &fPos_pY);
    fTreeBS4->Branch("Pos_pZ", &fPos_pZ);
    fTreeBS4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBS4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBS4->Branch("PosX_Scat", &fPosX_1);
    fTreeBS4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBS4->Branch("PosY_Scat", &fPosY_1);
    fTreeBS4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBS4->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBS4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBS4->Branch("Pos_Scat", &fPosScat);
    fTreeBS4->Branch("Energy_Scat", &fEnergy_1);
    fTreeBS4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBS4->Branch("PosX_Abs", &fPosX_2);
    fTreeBS4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBS4->Branch("PosY_Abs", &fPosY_2);
    fTreeBS4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBS4->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBS4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBS4->Branch("Pos_Abs", &fPosAbs);
    fTreeBS4->Branch("PosX_Sec", &fPosX_3);
    fTreeBS4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBS4->Branch("PosY_Sec", &fPosY_3);
    fTreeBS4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBS4->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBS4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBS4->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBS4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBS4->Branch("PosX_Th", &fPosX_4);
    fTreeBS4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBS4->Branch("PosY_Th", &fPosY_4);
    fTreeBS4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBS4->Branch("PosZ_Th", &fPosZ_4);
    fTreeBS4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBS4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBS4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBS4->Branch("PosX_Fo", &fPosX_5);
    fTreeBS4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBS4->Branch("PosY_Fo", &fPosY_5);
    fTreeBS4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBS4->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBS4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBS4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBS4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBS4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBS4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBS4->Branch("Energy_Abs", &fEnergy_2);
    fTreeBS4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBS4->Branch("EnDiff", &fEnDiff);
    fTreeBS4->Branch("EnergySum", &fEnergy_3);
    fTreeBS4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBS4->Branch("Multiplicity", &fS);
    fTreeBS4->Branch("DiffPosition", &fDiffPosX);
    fTreeBS4->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBS4->Branch("AngularDistribution", &fTheta);
    fTreeBS4->Branch("ECII", &fECII);
    fTreeBS4->SetCircular(2000000); 
    
    
    fTreeBS5 = new TTree("TreeBS5", "TreeBS5");
    fTreeBS5->Branch("EventNumber", &fEventNumber);
    fTreeBS5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeBS5->Branch("Pos_eX", &fPos_eX);
    fTreeBS5->Branch("Pos_eY", &fPos_eY);
    fTreeBS5->Branch("Pos_eZ", &fPos_eZ);
    fTreeBS5->Branch("Pos_pX", &fPos_pX);
    fTreeBS5->Branch("Pos_pY", &fPos_pY);
    fTreeBS5->Branch("Pos_pZ", &fPos_pZ);
    fTreeBS5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeBS5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeBS5->Branch("PosX_Scat", &fPosX_1);
    fTreeBS5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeBS5->Branch("PosY_Scat", &fPosY_1);
    fTreeBS5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeBS5->Branch("PosZ_Scat", &fPosZ_1);
    fTreeBS5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeBS5->Branch("Pos_Scat", &fPosScat);
    fTreeBS5->Branch("Energy_Scat", &fEnergy_1);
    fTreeBS5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeBS5->Branch("PosX_Abs", &fPosX_2);
    fTreeBS5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeBS5->Branch("PosY_Abs", &fPosY_2);
    fTreeBS5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeBS5->Branch("PosZ_Abs", &fPosZ_2);
    fTreeBS5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeBS5->Branch("Pos_Abs", &fPosAbs);
    fTreeBS5->Branch("PosX_Sec", &fPosX_3);
    fTreeBS5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeBS5->Branch("PosY_Sec", &fPosY_3);
    fTreeBS5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeBS5->Branch("PosZ_Sec", &fPosZ_3);
    fTreeBS5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeBS5->Branch("EnergySecond_abs", &fEnergySe);
    fTreeBS5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeBS5->Branch("PosX_Th", &fPosX_4);
    fTreeBS5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeBS5->Branch("PosY_Th", &fPosY_4);
    fTreeBS5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeBS5->Branch("PosZ_Th", &fPosZ_4);
    fTreeBS5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeBS5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeBS5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeBS5->Branch("PosX_Fo", &fPosX_5);
    fTreeBS5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeBS5->Branch("PosY_Fo", &fPosY_5);
    fTreeBS5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeBS5->Branch("PosZ_Fo", &fPosZ_5);
    fTreeBS5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeBS5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeBS5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeBS5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeBS5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeBS5->Branch("Energy_Abs", &fEnergy_2);
    fTreeBS5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeBS5->Branch("EnDiff", &fEnDiff);
    fTreeBS5->Branch("EnergySum", &fEnergy_3);
    fTreeBS5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeBS5->Branch("Multiplicity", &fS);
    fTreeBS5->Branch("DiffPosition", &fDiffPosX);
    fTreeBS5->Branch("DiffEnergy", &fDiffEnergy);
    fTreeBS5->Branch("AngularDistribution", &fTheta);
    fTreeBS5->Branch("ECII", &fECII);
    fTreeBS5->SetCircular(2000000);
    
///////////////////////////////////////////////////////////
//// Total background and signal trees of each event class for the analysis phase
    
    fTreeSB2 = new TTree("TreeSB2", "TreeSB2");
    fTreeSB2->Branch("EventNumber", &fEventNumber);
    fTreeSB2->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeSB2->Branch("Pos_eX", &fPos_eX);
    fTreeSB2->Branch("Pos_eY", &fPos_eY);
    fTreeSB2->Branch("Pos_eZ", &fPos_eZ);
    fTreeSB2->Branch("Pos_pX", &fPos_pX);
    fTreeSB2->Branch("Pos_pY", &fPos_pY);
    fTreeSB2->Branch("Pos_pZ", &fPos_pZ);
    fTreeSB2->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeSB2->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeSB2->Branch("PosX_Scat", &fPosX_1);
    fTreeSB2->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeSB2->Branch("PosY_Scat", &fPosY_1);
    fTreeSB2->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeSB2->Branch("PosZ_Scat", &fPosZ_1);
    fTreeSB2->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeSB2->Branch("Pos_Scat", &fPosScat);
    fTreeSB2->Branch("Energy_Scat", &fEnergy_1);
    fTreeSB2->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeSB2->Branch("PosX_Abs", &fPosX_2);
    fTreeSB2->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeSB2->Branch("PosY_Abs", &fPosY_2);
    fTreeSB2->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeSB2->Branch("PosZ_Abs", &fPosZ_2);
    fTreeSB2->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeSB2->Branch("Pos_Abs", &fPosAbs);
    fTreeSB2->Branch("PosX_Sec", &fPosX_3);
    fTreeSB2->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeSB2->Branch("PosY_Sec", &fPosY_3);
    fTreeSB2->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeSB2->Branch("PosZ_Sec", &fPosZ_3);
    fTreeSB2->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeSB2->Branch("EnergySecond_abs", &fEnergySe);
    fTreeSB2->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeSB2->Branch("PosX_Th", &fPosX_4);
    fTreeSB2->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeSB2->Branch("PosY_Th", &fPosY_4);
    fTreeSB2->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeSB2->Branch("PosZ_Th", &fPosZ_4);
    fTreeSB2->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeSB2->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeSB2->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeSB2->Branch("PosX_Fo", &fPosX_5);
    fTreeSB2->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeSB2->Branch("PosY_Fo", &fPosY_5);
    fTreeSB2->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeSB2->Branch("PosZ_Fo", &fPosZ_5);
    fTreeSB2->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeSB2->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeSB2->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeSB2->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeSB2->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeSB2->Branch("Energy_Abs", &fEnergy_2);
    fTreeSB2->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeSB2->Branch("EnDiff", &fEnDiff);
    fTreeSB2->Branch("EnergySum", &fEnergy_3);
    fTreeSB2->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeSB2->Branch("Multiplicity", &fS);
    fTreeSB2->Branch("DiffPosition", &fDiffPosX);
    fTreeSB2->Branch("DiffEnergy", &fDiffEnergy);
    fTreeSB2->Branch("AngularDistribution", &fTheta);
    fTreeSB2->Branch("ECII", &fECII);
    fTreeSB2->SetCircular(2000000); 
    
    
    fTreeSB3 = new TTree("TreeSB3", "TreeSB3");
    fTreeSB3->Branch("EventNumber", &fEventNumber);
    fTreeSB3->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeSB3->Branch("Pos_eX", &fPos_eX);
    fTreeSB3->Branch("Pos_eY", &fPos_eY);
    fTreeSB3->Branch("Pos_eZ", &fPos_eZ);
    fTreeSB3->Branch("Pos_pX", &fPos_pX);
    fTreeSB3->Branch("Pos_pY", &fPos_pY);
    fTreeSB3->Branch("Pos_pZ", &fPos_pZ);
    fTreeSB3->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeSB3->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeSB3->Branch("PosX_Scat", &fPosX_1);
    fTreeSB3->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeSB3->Branch("PosY_Scat", &fPosY_1);
    fTreeSB3->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeSB3->Branch("PosZ_Scat", &fPosZ_1);
    fTreeSB3->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeSB3->Branch("Pos_Scat", &fPosScat);
    fTreeSB3->Branch("Energy_Scat", &fEnergy_1);
    fTreeSB3->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeSB3->Branch("PosX_Abs", &fPosX_2);
    fTreeSB3->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeSB3->Branch("PosY_Abs", &fPosY_2);
    fTreeSB3->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeSB3->Branch("PosZ_Abs", &fPosZ_2);
    fTreeSB3->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeSB3->Branch("Pos_Abs", &fPosAbs);
    fTreeSB3->Branch("PosX_Sec", &fPosX_3);
    fTreeSB3->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeSB3->Branch("PosY_Sec", &fPosY_3);
    fTreeSB3->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeSB3->Branch("PosZ_Sec", &fPosZ_3);
    fTreeSB3->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeSB3->Branch("EnergySecond_abs", &fEnergySe);
    fTreeSB3->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeSB3->Branch("PosX_Th", &fPosX_4);
    fTreeSB3->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeSB3->Branch("PosY_Th", &fPosY_4);
    fTreeSB3->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeSB3->Branch("PosZ_Th", &fPosZ_4);
    fTreeSB3->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeSB3->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeSB3->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeSB3->Branch("PosX_Fo", &fPosX_5);
    fTreeSB3->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeSB3->Branch("PosY_Fo", &fPosY_5);
    fTreeSB3->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeSB3->Branch("PosZ_Fo", &fPosZ_5);
    fTreeSB3->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeSB3->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeSB3->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeSB3->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeSB3->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeSB3->Branch("Energy_Abs", &fEnergy_2);
    fTreeSB3->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeSB3->Branch("EnDiff", &fEnDiff);
    fTreeSB3->Branch("EnergySum", &fEnergy_3);
    fTreeSB3->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeSB3->Branch("Multiplicity", &fS);
    fTreeSB3->Branch("DiffPosition", &fDiffPosX);
    fTreeSB3->Branch("DiffEnergy", &fDiffEnergy);
    fTreeSB3->Branch("AngularDistribution", &fTheta);
    fTreeSB3->Branch("ECII", &fECII);
    fTreeSB3->SetCircular(2000000); 
    
    fTreeSB4 = new TTree("TreeSB4", "TreeSB4");
    fTreeSB4->Branch("EventNumber", &fEventNumber);
    fTreeSB4->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeSB4->Branch("Pos_eX", &fPos_eX);
    fTreeSB4->Branch("Pos_eY", &fPos_eY);
    fTreeSB4->Branch("Pos_eZ", &fPos_eZ);
    fTreeSB4->Branch("Pos_pX", &fPos_pX);
    fTreeSB4->Branch("Pos_pY", &fPos_pY);
    fTreeSB4->Branch("Pos_pZ", &fPos_pZ);
    fTreeSB4->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeSB4->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeSB4->Branch("PosX_Scat", &fPosX_1);
    fTreeSB4->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeSB4->Branch("PosY_Scat", &fPosY_1);
    fTreeSB4->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeSB4->Branch("PosZ_Scat", &fPosZ_1);
    fTreeSB4->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeSB4->Branch("Pos_Scat", &fPosScat);
    fTreeSB4->Branch("Energy_Scat", &fEnergy_1);
    fTreeSB4->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeSB4->Branch("PosX_Abs", &fPosX_2);
    fTreeSB4->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeSB4->Branch("PosY_Abs", &fPosY_2);
    fTreeSB4->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeSB4->Branch("PosZ_Abs", &fPosZ_2);
    fTreeSB4->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeSB4->Branch("Pos_Abs", &fPosAbs);
    fTreeSB4->Branch("PosX_Sec", &fPosX_3);
    fTreeSB4->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeSB4->Branch("PosY_Sec", &fPosY_3);
    fTreeSB4->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeSB4->Branch("PosZ_Sec", &fPosZ_3);
    fTreeSB4->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeSB4->Branch("EnergySecond_abs", &fEnergySe);
    fTreeSB4->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeSB4->Branch("PosX_Th", &fPosX_4);
    fTreeSB4->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeSB4->Branch("PosY_Th", &fPosY_4);
    fTreeSB4->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeSB4->Branch("PosZ_Th", &fPosZ_4);
    fTreeSB4->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeSB4->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeSB4->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeSB4->Branch("PosX_Fo", &fPosX_5);
    fTreeSB4->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeSB4->Branch("PosY_Fo", &fPosY_5);
    fTreeSB4->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeSB4->Branch("PosZ_Fo", &fPosZ_5);
    fTreeSB4->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeSB4->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeSB4->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeSB4->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeSB4->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeSB4->Branch("Energy_Abs", &fEnergy_2);
    fTreeSB4->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeSB4->Branch("EnDiff", &fEnDiff);
    fTreeSB4->Branch("EnergySum", &fEnergy_3);
    fTreeSB4->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeSB4->Branch("Multiplicity", &fS);
    fTreeSB4->Branch("DiffPosition", &fDiffPosX);
    fTreeSB4->Branch("DiffEnergy", &fDiffEnergy);
    fTreeSB4->Branch("AngularDistribution", &fTheta);
    fTreeSB4->Branch("ECII", &fECII);
    fTreeSB4->SetCircular(2000000); 
    
    fTreeSB5 = new TTree("TreeSB5", "TreeSB5");
    fTreeSB5->Branch("EventNumber", &fEventNumber);
    fTreeSB5->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeSB5->Branch("Pos_eX", &fPos_eX);
    fTreeSB5->Branch("Pos_eY", &fPos_eY);
    fTreeSB5->Branch("Pos_eZ", &fPos_eZ);
    fTreeSB5->Branch("Pos_pX", &fPos_pX);
    fTreeSB5->Branch("Pos_pY", &fPos_pY);
    fTreeSB5->Branch("Pos_pZ", &fPos_pZ);
    fTreeSB5->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeSB5->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeSB5->Branch("PosX_Scat", &fPosX_1);
    fTreeSB5->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeSB5->Branch("PosY_Scat", &fPosY_1);
    fTreeSB5->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeSB5->Branch("PosZ_Scat", &fPosZ_1);
    fTreeSB5->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeSB5->Branch("Pos_Scat", &fPosScat);
    fTreeSB5->Branch("Energy_Scat", &fEnergy_1);
    fTreeSB5->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeSB5->Branch("PosX_Abs", &fPosX_2);
    fTreeSB5->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeSB5->Branch("PosY_Abs", &fPosY_2);
    fTreeSB5->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeSB5->Branch("PosZ_Abs", &fPosZ_2);
    fTreeSB5->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeSB5->Branch("Pos_Abs", &fPosAbs);
    fTreeSB5->Branch("PosX_Sec", &fPosX_3);
    fTreeSB5->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeSB5->Branch("PosY_Sec", &fPosY_3);
    fTreeSB5->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeSB5->Branch("PosZ_Sec", &fPosZ_3);
    fTreeSB5->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeSB5->Branch("EnergySecond_abs", &fEnergySe);
    fTreeSB5->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeSB5->Branch("PosX_Th", &fPosX_4);
    fTreeSB5->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeSB5->Branch("PosY_Th", &fPosY_4);
    fTreeSB5->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeSB5->Branch("PosZ_Th", &fPosZ_4);
    fTreeSB5->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeSB5->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeSB5->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeSB5->Branch("PosX_Fo", &fPosX_5);
    fTreeSB5->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeSB5->Branch("PosY_Fo", &fPosY_5);
    fTreeSB5->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeSB5->Branch("PosZ_Fo", &fPosZ_5);
    fTreeSB5->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeSB5->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeSB5->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeSB5->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeSB5->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeSB5->Branch("Energy_Abs", &fEnergy_2);
    fTreeSB5->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeSB5->Branch("EnDiff", &fEnDiff);
    fTreeSB5->Branch("EnergySum", &fEnergy_3);
    fTreeSB5->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeSB5->Branch("Multiplicity", &fS);
    fTreeSB5->Branch("DiffPosition", &fDiffPosX);
    fTreeSB5->Branch("DiffEnergy", &fDiffEnergy);
    fTreeSB5->Branch("AngularDistribution", &fTheta);
    fTreeSB5->Branch("ECII", &fECII);
    fTreeSB5->SetCircular(2000000); 
///////////////////////////////////////////////////////////
///Total background and signal events
    
    fTreeSB = new TTree("TreeSB", "TreeSB");
    fTreeSB->Branch("EventNumber", &fEventNumber);
    fTreeSB->Branch("PrimaryEnergy", &fPriEnergy);
    fTreeSB->Branch("Pos_eX", &fPos_eX);
    fTreeSB->Branch("Pos_eY", &fPos_eY);
    fTreeSB->Branch("Pos_eZ", &fPos_eZ);
    fTreeSB->Branch("Pos_pX", &fPos_pX);
    fTreeSB->Branch("Pos_pY", &fPos_pY);
    fTreeSB->Branch("Pos_pZ", &fPos_pZ);
    fTreeSB->Branch("RealEnergy_e", &fRealEnergy_e);
    fTreeSB->Branch("RealEnergy_p", &fRealEnergy_p);
    fTreeSB->Branch("PosX_Scat", &fPosX_1);
    fTreeSB->Branch("PosX_ScatUnc", &fPosX_1unc);
    fTreeSB->Branch("PosY_Scat", &fPosY_1);
    fTreeSB->Branch("PosY_ScatUnc", &fPosY_1unc);
    fTreeSB->Branch("PosZ_Scat", &fPosZ_1);
    fTreeSB->Branch("PosZ_ScatUnc", &fPosZ_1unc);
    fTreeSB->Branch("Pos_Scat", &fPosScat);
    fTreeSB->Branch("Energy_Scat", &fEnergy_1);
    fTreeSB->Branch("Energy_ScatUnc", &fEnergy_1unc);
    fTreeSB->Branch("PosX_Abs", &fPosX_2);
    fTreeSB->Branch("PosX_AbsUnc", &fPosX_2unc);
    fTreeSB->Branch("PosY_Abs", &fPosY_2);
    fTreeSB->Branch("PosY_AbsUnc", &fPosY_2unc);
    fTreeSB->Branch("PosZ_Abs", &fPosZ_2);
    fTreeSB->Branch("PosZ_AbsUnc", &fPosZ_2unc);
    fTreeSB->Branch("Pos_Abs", &fPosAbs);
    fTreeSB->Branch("PosX_Sec", &fPosX_3);
    fTreeSB->Branch("PosX_SecUnc", &fPosX_3unc);
    fTreeSB->Branch("PosY_Sec", &fPosY_3);
    fTreeSB->Branch("PosY_SecUnc", &fPosY_3unc);
    fTreeSB->Branch("PosZ_Sec", &fPosZ_3);
    fTreeSB->Branch("PosZ_SecUnc", &fPosZ_3unc);
    fTreeSB->Branch("EnergySecond_abs", &fEnergySe);
    fTreeSB->Branch("EnergySecond_absUnc", &fEnergySeunc);
    fTreeSB->Branch("PosX_Th", &fPosX_4);
    fTreeSB->Branch("PosX_ThUnc", &fPosX_4unc);
    fTreeSB->Branch("PosY_Th", &fPosY_4);
    fTreeSB->Branch("PosY_ThUnc", &fPosY_4unc);
    fTreeSB->Branch("PosZ_Th", &fPosZ_4);
    fTreeSB->Branch("PosZ_ThUnc", &fPosZ_4unc);
    fTreeSB->Branch("EnergyThird_abs", &fEnergyTh);
    fTreeSB->Branch("EnergyThird_absUnc", &fEnergyThunc);
    fTreeSB->Branch("PosX_Fo", &fPosX_5);
    fTreeSB->Branch("PosX_FoUnc", &fPosX_5unc);
    fTreeSB->Branch("PosY_Fo", &fPosY_5);
    fTreeSB->Branch("PosY_FoUnc", &fPosY_5unc);
    fTreeSB->Branch("PosZ_Fo", &fPosZ_5);
    fTreeSB->Branch("PosZ_FoUnc", &fPosZ_5unc);
    fTreeSB->Branch("EnergyFourth_abs", &fEnergyFo);
    fTreeSB->Branch("EnergyFourth_absUnc", &fEnergyFounc);
    fTreeSB->Branch("EnergyCluster_abs", &fEnergyC);
    fTreeSB->Branch("EnergyCluster_absUnc", &fEnergyCunc);
    fTreeSB->Branch("Energy_Abs", &fEnergy_2);
    fTreeSB->Branch("Energy_AbsUnc", &fEnergy_2unc);
    fTreeSB->Branch("EnDiff", &fEnDiff);
    fTreeSB->Branch("EnergySum", &fEnergy_3);
    fTreeSB->Branch("EnergySumUnc", &fEnergy_3unc);
    fTreeSB->Branch("Multiplicity", &fS);
    fTreeSB->Branch("DiffPosition", &fDiffPosX);
    fTreeSB->Branch("DiffEnergy", &fDiffEnergy);
    fTreeSB->Branch("AngularDistribution", &fTheta);
    fTreeSB->Branch("ECII", &fECII);
    fTreeSB->SetCircular(2000000); 
 
  
}
//--------------------
/// Default constructor.
EIComp::EIComp() {
    
    cout << "##### Warning in EIMVA constructor!" << endl;
    cout << "You are using default constructor!" << endl;
    Clear();
}
//----------------------------------------
/// Default destructor.
EIComp::~EIComp() {
    
    if ( fOutputFile &&  fTree_stat && fTreeS2 && fTreeS3 && fTreeS4 && fTreeS5 && fTreeB2  && fTreeBB2 && fTreeB3  && fTreeBB3  && fTreedB3 && fTreeB4 && fTreeBB4  && fTreedB4 && fTreeB5 && fTreeBB5  && fTreedB5 && fTreeRB2 &&  fTreeRB3 && fTreeRB4 && fTreeRB5 && fTreeBS2 && fTreeBS3 && fTreeBS4 && fTreeBS5 && fTreeSB2 && fTreeSB3 && fTreeSB4 && fTreeSB5 && fTreeSB) {
        
        fTree_stat->Write();
        fTreeS2->Write();
        fTreeS3->Write();
        fTreeS4->Write();
        fTreeS5->Write();
        fTreeB2->Write();
        fTreeBB2->Write();
        fTreeB3->Write();
        fTreeBB3->Write();
        fTreedB3->Write();
        fTreeB4->Write();
        fTreeBB4->Write();
        fTreedB4->Write();
        fTreeB5->Write();
        fTreeBB5->Write();
        fTreedB5->Write();
        fTreeRB2->Write();
        fTreeRB3->Write();
        fTreeRB4->Write();
        fTreeRB5->Write();
        fTreeBS2->Write();
        fTreeBS3->Write();
        fTreeBS4->Write();
        fTreeBS5->Write();
        fTreeSB2->Write();
        fTreeSB3->Write();
        fTreeSB4->Write();
        fTreeSB5->Write();
        fTreeSB->Write();

        fOutputFile->Close();
    }

}
//------------------------------------------
/// Based on the given input simulation file creates suitable
/// InputReader object - for Geant4 input.
Bool_t EIComp::SetInputReader(void) {
    
 
    TString fullName = "../source/results/" + fInputName;
  
    TFile* file = new TFile(fullName, "READ");
    if (!file->IsOpen()) {
        
        cout << "##### Error in EIMVA::SetInputReader!" << endl;
        cout << "Could not open requested file" << endl;
        return false;
    }
    
    if (file->Get("Setup") &&
             file->Get("Events")) {
        
        fEvents = (TTree*)file->Get("Events");
        fNentries = fEvents->GetEntries(); 
        
        file->Close();
        fReader = new InputReaderGeant(fullName);
  
    } else {
        
        cout << "##### Error in EIMVA::SetInputReader()!" << endl;
        cout << "Unknown data format" << endl;
        return false;
    }

    if (fVerbose) { fReader->Print(); }

    return true;
}
//------------------------------------------
/// Based on the given info. from Geant4 (clusters positions and energies)
/// the function identify true Compton events from background events
Bool_t EIComp::Identify(void) {
    
    
    TCanvas *can = new TCanvas("can","can",10,10,1800,1800); 
    
    fReco = new TH1F("RecoEnergy_p", "RecoEnergy_p", 20, 0, 5);
    fReco->GetXaxis()->SetTitle("RecoEnergy_p");
    fReco->GetYaxis()->SetTitle("Event");  
    fRe0 = new TH1F("EnergyRe1","EnergyRe1", 20, 0, 5);
    fRe0->GetXaxis()->SetTitle("EnergyRe1Clus");
    fRe0->GetYaxis()->SetTitle("Event"); 
  
    TH1F *Pri = new TH1F("Primary Energy", "Primary Energy of Prompt gamma", 400, 0, 8);
    Pri->GetXaxis()->SetTitle("Primary Energy(MeV)");
    Pri->GetYaxis()->SetTitle("Count");
  
    TH1F *Pri1 = new TH1F("PriEnergy_NarrowWindow", "PriEnergy_NarrowWindow", 210, 3.7, 6.7);
    Pri1->GetXaxis()->SetTitle("Energy(MeV)");
    Pri1->GetYaxis()->SetTitle("Event");
    
    TH1F *Prirb = new TH1F("PriEnergy_RB", "PriEnergy_RB", 210, 3.7, 6.7);
    Prirb->GetXaxis()->SetTitle("Energy(MeV)");
    Prirb->GetYaxis()->SetTitle("Event");
    
    TH1F *Pribs = new TH1F("PriEnergy_BS", "PriEnergy_BS", 210, 3.7, 6.7);
    Pribs->GetXaxis()->SetTitle("Energy(MeV)");
    Pribs->GetYaxis()->SetTitle("Event");
  
    TH1F *Sum = new TH1F("SumPriEnergy", "SumPriEnergy", 100, 0, 8);
    Sum->GetXaxis()->SetTitle("SumEnergy(MeV)");
    Sum->GetYaxis()->SetTitle("Event");
    
    TH2F *ZPE = new TH2F("Position along the beam vs. Primary Energy", "Positions along the beam (x-axis) vs. Primary Energy of Prompt gamma", 400, 0 , 8, 285, -185, 100);
    ZPE->GetXaxis()->SetTitle("Primary Energy(MeV)");
    ZPE->GetYaxis()->SetTitle("Positions along the beam x-axis(mm)");
  
    TCanvas *c1 = new TCanvas("c1","c1",1800,1800);
  
    TH2F *ucy = new TH2F("Uncertainty.Y()_Abs.","Uncertainty.Y() in the Absorber", 100,-50,50,100,0,90);
    ucy->GetXaxis()->SetTitle("PosY_Abs");
    ucy->GetYaxis()->SetTitle("Uncertainty.Y");
  
    TH2F *dys = new TH2F("(YReal-YCluster)_Scat.","(YReal-YCluster) in the Scatterer", 100,-50,50,100,-50,50);
    dys->GetXaxis()->SetTitle("RealPosY_Scat(mm)");
    dys->GetYaxis()->SetTitle("(YReal-YCluster)");
  
    TH2F *dyst = new TH2F("(YReal-YCluster)_Scat.T","(YReal-YCluster) in the Scatterer(True)", 100,-50,50,100,-50,50);
    dyst->GetXaxis()->SetTitle("RealPosY_Scat(mm)");
    dyst->GetYaxis()->SetTitle("(YReal-YCluster)");
  
    TH2F *dya = new TH2F("(YReal-YCluster)_Abs.","(YReal-YCluster) in the Absorber", 100,-50,50,100,-50,50);
    dya->GetXaxis()->SetTitle("RealPosY_Abs(mm)");
    dya->GetYaxis()->SetTitle("(YReal-YCluster)");
  
    TH2F *dyat = new TH2F("(YReal-YCluster)_Abs.T","(YReal-YCluster) in the Absorber(True)", 100,-50,50,100,-50,50);
    dyat->GetXaxis()->SetTitle("RealPosY_Abs(mm)");
    dyat->GetYaxis()->SetTitle("(YReal-YCluster)");
  
    TH1F *yst = new TH1F("positionY_scat(True)","RealpositionY_scat", 100,-50,50);
    yst->GetXaxis()->SetTitle("PosY_scat(mm)");
    yst->GetYaxis()->SetTitle("count");
  
    TH1F *ysf = new TH1F("positionY_scat(False)","RealpositionY_scat", 100,-50,50);
    ysf->GetXaxis()->SetTitle("PosY_scat(mm)");
    ysf->GetYaxis()->SetTitle("count");
  
    TH1F *yat = new TH1F("positionY_abs(True)","RealpositionY_abs", 100,-60,60);
    yat->GetXaxis()->SetTitle("PosY_abs(mm)");
    yat->GetYaxis()->SetTitle("count");
  
    TH1F *yaf = new TH1F("positionY_abs(False)","RealpositionY_abs", 100,-60,60);
    yaf->GetXaxis()->SetTitle("PosY_abs(mm)");
    yaf->GetYaxis()->SetTitle("count");
  
    TH1F *est = new TH1F("energy_scat(True)","Realenergy_scat", 100,0,6);
    est->GetXaxis()->SetTitle("Energy_scat(MeV)");
    est->GetYaxis()->SetTitle("count");
  
    TH1F *esf = new TH1F("energy_scat(False)","Realenergy_scat", 100,0,6);
    esf->GetXaxis()->SetTitle("Energy_scat(MeV)");
    esf->GetYaxis()->SetTitle("count");
  
    TH1F *eat = new TH1F("energy_abs(True)","Realenergy_abs", 100,0,6);
    eat->GetXaxis()->SetTitle("Energy_abs(MeV)");
    eat->GetYaxis()->SetTitle("count");
  
    TH1F *eaf = new TH1F("energy_abs(False)","Realenergy_abs", 100,0,6);
    eaf->GetXaxis()->SetTitle("Energy_abs(MeV)");
    eaf->GetYaxis()->SetTitle("count");
  
    fRecoPos = new TH1F("PosAbsReco", "PosAbsReco", 400, 380, 420);
    fRecoPos->GetXaxis()->SetTitle("PosReco_x");
    fRecoPos->GetYaxis()->SetTitle("Event");  
    
    fRe0Pos = new TH1F("PosAbsClus","PosAbsClus", 400, 380, 420);
    fRe0Pos->GetXaxis()->SetTitle("PosClus_x");
    fRe0Pos->GetYaxis()->SetTitle("Event");
    
    TH1F *diffpos = new TH1F("diffpos","diffpos", 100,-20,20);
    diffpos->GetXaxis()->SetTitle("DiffPos_x");
    diffpos->GetYaxis()->SetTitle("count");
    
    TH1F *diffene = new TH1F("diffenergy","diffenergy", 100,-6,6);
    diffene->GetXaxis()->SetTitle("#DeltaE_{Absorber}");
    diffene->GetYaxis()->SetTitle("count");
  
    TH2F *TESt = new TH2F("ES vs. TH(True)", "Deposited energy in scatterer vs. Second scattering angle (True)", 100, -1 , 1, 100, 0, 4);
    TESt->GetXaxis()->SetTitle("Cos#theta(Rad)");
    TESt->GetYaxis()->SetTitle("Energy_{s}(MeV)");
  
    TH2F *TESf = new TH2F("ES vs. TH(False)", "Deposited energy in scatterer vs. Second scattering angle (False)", 100, -1 , 1, 100, 0, 4);
    TESf->GetXaxis()->SetTitle("Cos#theta(Rad)");
    TESf->GetYaxis()->SetTitle("Energy_{s}(MeV)");
  
    TH2F *TEAt = new TH2F("EA vs. TH(True)", "Deposited energy in absorber vs. Second scattering angle (True)", 100, -1 , 1, 100, 0, 6);
    TEAt->GetXaxis()->SetTitle("Cos#theta(Rad)");
    TEAt->GetYaxis()->SetTitle("Energy_{a}(MeV)");
  
    TH2F *TEAf = new TH2F("EA vs. TH(False)", "Deposited energy in absorber vs. Second scattering angle (False)", 100, -1 , 1, 100, 0, 6);
    TEAf->GetXaxis()->SetTitle("Cos#theta(Rad)");
    TEAf->GetYaxis()->SetTitle("Energy_{a}(MeV)");
  
    TH2F *ESAt = new TH2F("EA vs. ES(True)", "Deposited energy in absorber vs. Deposited energy in scatterer (True)", 100, 0 , 4, 100, 0, 6);
    ESAt->GetXaxis()->SetTitle("Energy_{s}(MeV)");
    ESAt->GetYaxis()->SetTitle("Energy_{a}(MeV)");
  
    TH2F *ESAf = new TH2F("EA vs. ES(False)", "Deposited energy in absorber vs. Deposited energy in scatterer (False)", 100, 0 , 4, 100, 0, 6);
    ESAf->GetXaxis()->SetTitle("Energy_{s}(MeV)");
    ESAf->GetYaxis()->SetTitle("Energy_{a}(MeV)");
  
    TH1F *ESt = new TH1F("EST","Deposited Energy in Scatterer (True)", 100,0,4);
    ESt->GetXaxis()->SetTitle("Energy(MeV)");
    ESt->GetYaxis()->SetTitle("count");
  
    TH1F *ESf = new TH1F("ESF","Deposited Energy in Scatterer (False)", 100,0,4);
    ESf->GetXaxis()->SetTitle("Energy(MeV)");
    ESf->GetYaxis()->SetTitle("count");
  
    TH1F *EAt = new TH1F("EAT","Deposited Energy in Absorber (True)", 100,0,6);
    EAt->GetXaxis()->SetTitle("Energy(MeV)");
    EAt->GetYaxis()->SetTitle("count");
  
    TH1F *EAf = new TH1F("EAF","Deposited Energy in Absorber (False)", 100,0,6);
    EAf->GetXaxis()->SetTitle("Energy(MeV)");
    EAf->GetYaxis()->SetTitle("count");
  
  
    TH1F *tt = new TH1F("SSA (True)", "Second Scattring Angle (True Compton Events)", 100, -1, 1);
    tt->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tt->GetYaxis()->SetTitle("count");
  
    TH1F *tt12 = new TH1F("Cos#theta_{12} (True)", "Second Scattring Angle (True Compton Events)", 100, -1, 1);
    tt12->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tt12->GetYaxis()->SetTitle("count");
  
    TH1F *tt13 = new TH1F("Cos#theta_{13} (True)", "Second Scattring Angle (True Compton Events)", 100, -1, 1);
    tt13->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tt13->GetYaxis()->SetTitle("count");
  
    TH1F *tf = new TH1F("SSA (False)", "Second Scattring Angle (False Compton Events)", 100, -1, 1);
    tf->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tf->GetYaxis()->SetTitle("count");
  
    TH1F *tf21 = new TH1F("Cos#theta_{21} (False)", "Second Scattring Angle (False Compton Events)", 100, -1, 1);
    tf21->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tf21->GetYaxis()->SetTitle("count");
   
    TH1F *tf31 = new TH1F("Cos#theta_{31} (False)", "Second Scattring Angle (False Compton Events)", 100, -1, 1);
    tf31->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tf31->GetYaxis()->SetTitle("count");
  
    TH1F *tf23 = new TH1F("Cos#theta_{23} (False)", "Second Scattring Angle (False Compton Events)", 100, -1, 1);
    tf23->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tf23->GetYaxis()->SetTitle("count");
  
    TH1F *tf32 = new TH1F("Cos#theta_{32} (False)", "Second Scattring Angle (False Compton Events)", 100, -1, 1);
    tf32->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tf32->GetYaxis()->SetTitle("count");
  
    TH1F *tc = new TH1F("SSA (CI)", "Second Scattring Angle (Correctly Identified Events)", 100, -1, 1);
    tc->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tc->GetYaxis()->SetTitle("count");
    
  
    TH1F *tw = new TH1F("SSA (WI)", "Second Scattring Angle (Wrongly Identified as True)", 100, -1, 1);
    tw->GetXaxis()->SetTitle("Cos#theta(Rad)");
    tw->GetYaxis()->SetTitle("count");
    
    TH1F *diffene1 = new TH1F("The Difference of deposited energies (True events)","The Difference of deposited energies (True events)", 100,-6,6);
    diffene1->GetXaxis()->SetTitle("#DeltaE_{2 modules}");
    diffene1->GetYaxis()->SetTitle("count");
  
    TH1F *diffene2 = new TH1F("The Difference of deposited energies (Bad events)","The Difference of deposited energies (Bad events)", 100,-6,6);
    diffene2->GetXaxis()->SetTitle("#DeltaE_{2 modules}");
    diffene2->GetYaxis()->SetTitle("count");
  
    TH1F *hE = new TH1F("TotalEnergyClus", "TotalEnergyClus", 1000, 0, 20);
    hE->GetXaxis()->SetTitle("TotalEnergyClus");
    hE->GetYaxis()->SetTitle("Event");

//////////////////////////////////////////////////////////////////////////////
  
    TH2F *angendifft = new TH2F("EnergyDiff. vs. AngularDist.(4 cluster)T", "EnergyDiff. vs. AngularDist.(True)", 100, 0 , 4, 100, -6, 6);
    angendifft->GetXaxis()->SetTitle("AngularDist.(Rad)");
    angendifft->GetYaxis()->SetTitle("EnergyDiff.(MeV)");
  
    TH2F *angendifff = new TH2F("EnergyDiff. vs. AngularDist.(4 cluster)F", "EnergyDiff. vs. AngularDist.(False)", 100, 0 , 4, 100, -6, 6);
    angendifff->GetXaxis()->SetTitle("AngularDist.(Rad)");
    angendifff->GetYaxis()->SetTitle("EnergyDiff.(MeV)");
  
    TH3F *angent = new TH3F("EnergyDiff. vs. AngularDist. vs. EnClus.(T)", "EnergyDiff. vs. AngularDist. vs. EnClus.(True)", 100, 0 , 4, 100, -6, 6, 100, 0, 6);
    angent->GetXaxis()->SetTitle("AngularDist.(Rad)");
    angent->GetYaxis()->SetTitle("EnergyDiff.(MeV)");
    angent->GetZaxis()->SetTitle("EnergyClus._Abs(MeV)");
  
    TH3F *angenf = new TH3F("EnergyDiff. vs. AngularDist. vs. EnClus.(F)", "EnergyDiff. vs. AngularDist. vs. EnClus.(False)", 100, 0 , 4, 100, -6, 6, 100, 0, 6);
    angenf->GetXaxis()->SetTitle("AngularDist.(Rad)");
    angenf->GetYaxis()->SetTitle("EnergyDiff.(MeV)");
    angenf->GetZaxis()->SetTitle("EnergyClus._Abs(MeV)");
  
    TH2F *endct = new TH2F("EnergyDiff. vs. EnClus.(T)", "EnergyDiff. vs. EnClus.(True)", 100, 0, 6, 100, -6, 6);
    endct->GetYaxis()->SetTitle("EnergyDiff.(MeV)");
    endct->GetXaxis()->SetTitle("EnergyClus._Abs(MeV)");
  
    TH2F *endcf = new TH2F("EnergyDiff. vs. EnClus.(F)", "EnergyDiff. vs. EnClus.(False)", 100, 0, 6, 100, -6, 6);
    endcf->GetYaxis()->SetTitle("EnergyDiff.(MeV)");
    endcf->GetXaxis()->SetTitle("EnergyClus._Abs(MeV)");
  
    TH2F *angenct = new TH2F("EnClus. vs. AngularDist.(T)", "EnClus. vs. AngularDist. (True)", 100, 0, 4, 100, 0, 6);
    angenct->GetYaxis()->SetTitle("EnergyClus._Abs(MeV)");
    angenct->GetXaxis()->SetTitle("AngularDist.(Rad)");
  
    TH2F *angencf = new TH2F("EnClus. vs. AngularDist.(F)", "EnClus. vs. AngularDist. (False)", 100, 0, 4, 100, 0, 6);
    angencf->GetYaxis()->SetTitle("EnergyClus._Abs(MeV)");
    angencf->GetXaxis()->SetTitle("AngularDist.(Rad)");
  
    TH2F *angpost = new TH2F("PosXDiff. vs. AngularDist.(T)", "PosXDiff vs. AngularDist. (True)", 100, 0, 4, 100, 150, 250);
    angpost->GetYaxis()->SetTitle("PositionXDiff.(mm)");
    angpost->GetXaxis()->SetTitle("AngularDist.(Rad)");
  
    TH2F *angposf = new TH2F("PosXDiff. vs. AngularDist.(F)", "PosXDiff vs. AngularDist. (False)", 100, 0, 4, 100, 150, 250);
    angposf->GetYaxis()->SetTitle("PositionXDiff.(mm)");
    angposf->GetXaxis()->SetTitle("AngularDist.(Rad)");
  
    TH2F *ensat = new TH2F("EnClus_scat vs. EnClus_abs(T)", "EnergyCluster_scat. vs. EnergyCluster_abs.(T)", 100, 0, 6, 100, 0, 3);
    ensat->GetYaxis()->SetTitle("EnergyClus_Scat(MeV)");
    ensat->GetXaxis()->SetTitle("EnergyClus_Abs(MeV)");
  
    TH2F *ensaf = new TH2F("EnClus_scat vs. EnClus_abs(F)", "EnergyCluster_scat. vs. EnergyCluster_abs.(F)", 100, 0, 6, 100, 0, 3);
    ensaf->GetYaxis()->SetTitle("EnergyClus_Scat(MeV)");
    ensaf->GetXaxis()->SetTitle("EnergyClus_Abs(MeV)");
  
 
 
  
    TVector3 S1A1, A1A2, S1A2, A2A1, S1A3, A1A3, A3A1, A2A3, A3A2, S1A4, A1A4, A4A1, A2A4, A4A2, A3A4, A4A3;
 
    bool status;
    int counter1 = 0;
    int counter = 0;
    Int_t count3 = 0, count4 = 0, count5 = 0, count6 = 0, count7 = 0;
  
    Int_t count1 = 0, count2 = 0, count22 = 0;
  
  
    Int_t count33 = 0, count31 = 0, count32 = 0, count34 = 0, count35 = 0;
    Int_t countdup33 = 0, countdup31 = 0, countdup32 = 0, countdup34 = 0, countdup35 = 0, countdup36 = 0, countdup37 = 0, countdup38 = 0, countdup39 = 0, countdup310 = 0, countdup311 = 0, countdup312 = 0;
  
    Int_t countb21 = 0, countb22 = 0, countb23 = 0, countb24 = 0, countb25 = 0, countb26 = 0;
    Int_t countb31 = 0, countb32 = 0, countb33 = 0 , countb34 = 0 , countb35 = 0 , countb36 = 0, countb37 = 0, countb38 = 0, countb39 = 0, countb310 = 0, countb311 = 0;
  
  
  
    Int_t count44 = 0, count41 = 0, count42 = 0, count43 = 0, count45 = 0, count46 = 0, count47 = 0, count48 = 0,count49 = 0, count410 = 0;
    
    Int_t count54 = 0, count51 = 0, count52 = 0, count53 = 0;
  
    Int_t countdup4 = 0, countdup411 = 0, countdup412 = 0, countdup4211 = 0, countdup4222 = 0, countdup4311 = 0, countdup4322 = 0;
    Int_t countdup41 = 0, countdup42 = 0, countdup43 = 0, countdup44 = 0, countdup45 = 0, countdup46 = 0, countdup47 = 0;
    Int_t countdup48 = 0, countdup49 = 0, countdup410 = 0, countdup413 = 0, countdup414 = 0, countdup415 = 0, countdup416 = 0;
    Int_t countdup417 = 0, countdup418 = 0, countdup419 = 0, countdup420 = 0, countdup421 = 0, countdup422 = 0, countdup423 = 0;
    Int_t countdup424 = 0, countdup425 = 0, countdup426 = 0, countdup427 = 0, countdup428 = 0, countdup429 = 0, countdup430 = 0;
    Int_t countdup431 = 0, countdup432 = 0, countdup433 = 0, countdup434 = 0, countdup435 = 0, countdup436 = 0, countdup437 = 0;
    Int_t countdup438 = 0, countdup439 = 0, countdup440 = 0;
    Int_t countdup441 = 0, countdup442 = 0, countdup443 = 0, countdup444 = 0, countdup445 = 0, countdup446 = 0, countdup447 = 0;
    Int_t countdup448 = 0, countdup449 = 0, countdup450 = 0, countdup451 = 0, countdup452 = 0, countdup453 = 0, countdup454 = 0;
    Int_t countdup455 = 0, countdup456 = 0, countdup457 = 0, countdup458 = 0, countdup459 = 0, countdup460 = 0, countdup461 = 0;
    Int_t countdup462 = 0, countdup463 = 0, countdup464 = 0, countdup465 = 0, countdup466 = 0, countdup467 = 0, countdup468 = 0;
  
    Int_t countb41 = 0, countb42 = 0, countb43 = 0 , countb44 = 0 , countb45 = 0, countb46 = 0 , countb47 = 0, countb48 = 0;
    Int_t countb49 = 0, countb410 = 0, countb411 = 0 , countb412 = 0 , countb413 = 0, countb414 = 0 , countb415 = 0, countb416 = 0;
    Int_t countb417 = 0, countb418 = 0, countb419 = 0 , countb420 = 0, countb421 = 0 ; 
    
    Int_t countb51 = 0, countb52 = 0, countb53 = 0 , countb54 = 0 , countb55 = 0, countb56 = 0 , countb57 = 0, countb58 = 0;
    Int_t countb59 = 0, countb510 = 0, countb511 = 0 , countb512 = 0 , countb513 = 0, countb514 = 0 , countb515 = 0, countb516 = 0;
    Int_t countb517 = 0, countb518 = 0, countb519 = 0 , countb520 = 0, countb521 = 0 ; 
  
    Int_t countr2 = 0, countes2 = 0,countr21 = 0, countr22 = 0, countr3 = 0, countr4 = 0, countr5 = 0, countrall = 0;
    Int_t count_reco1 = 0, count_reco2 = 0;
    Int_t countnan = 0, countback1 = 0, countback2 = 0, countback3 = 0, countback4 = 0, countback5 = 0, countback6 = 0, countback7 = 0, countbackall = 0, countback = 0;
    
    Int_t countnanR2 = 0, countnan2 = 0, countnanR3 = 0, countnan3 = 0, countnanR4 = 0, countnan4 = 0, countnan5 = 0, countnanR5 = 0;
    
    Int_t countE01 = 0, countE02 = 0, countE03 = 0, countE04 = 0, countE05 = 0, countE06 = 0, countE07 = 0, countE08 = 0, countE09 = 0, countE010 = 0, countE011 = 0, countE012 = 0, countE013 = 0, countE014 = 0, countE015 = 0, countE016 = 0, countE017 = 0, countE018 = 0, countE019 = 0, countE020 = 0, countE022 = 0, countE023 = 0, countE024 = 0, countE025 = 0;
    
    Int_t countE021 = 0, countE051 = 0, countE052 = 0, countE0101 = 0, countE0102 = 0, countE0103 = 0, countE0171 = 0, countE0172 = 0, countE0173 = 0, countE0174 = 0;
    
    Int_t countE061 = 0, countE0 = 0, countE1 = 0, countE2 = 0;
    
    Int_t countE_e = 0, countEes2 = 0, countEes3 = 0;
  
    Int_t countrs1 = 0, countrs11 = 0, countrs12 = 0, countrs13 = 0 , countrs14 = 0;
  
    Int_t countrs2 = 0, countrs21 = 0, countrs22 = 0, countrs23 = 0, countrs24 = 0, countrs25 = 0, countrs26 = 0 , countrs27 = 0, countrs28 = 0, countrs29 = 0, countrs210 = 0, countrs211=0,countrs212=0,countrs213=0,countrs214=0,countrs215=0,countrs216=0,countrs217=0,countrs218=0 ;
  
    Int_t counteout = 0;
    Int_t countrs3 = 0, countes3 = 0;
  
    Int_t countrs31 = 0, countrs32 = 0, countrs33= 0, countrs34=0, countrs35= 0, countrs36=0, countrs37= 0, countrs38= 0, countrs39= 0, countrs310= 0, countrs311= 0, countrs312= 0, countrs313= 0, countrs314= 0, countrs315= 0, countrs316= 0, countrs317= 0, countrs318= 0, countrs319= 0, countrs320= 0, countrs321= 0, countrs322 = 0, countrs323 = 0, countrs324 = 0, countrs325= 0, countrs326 = 0, countrs327 = 0, countrs328= 0, countrs329=0,countrs330=0, countrs331=0,countrs332=0,countrs333=0;
  
    Int_t countrs4 = 0, countes4 = 0;
    Int_t countrs41 = 0, countrs42 = 0, countrs43= 0, countrs44=0, countrs45= 0, countrs46=0, countrs47= 0, countrs48= 0, countrs49= 0, countrs410= 0, countrs411= 0;
    
    Int_t countrs5 = 0;
    
    Int_t countrsb2 = 0, countrsb3 = 0, countrsb4 = 0, countrsb5 = 0;
    
    Int_t countback11 = 0, countback12 = 0, countback13 = 0, countback14 = 0, countback15 = 0;
  
    Int_t count2pp1 = 0, count2pp2 = 0, count2pp3 = 0, count3pp1 = 0, count3pp2 = 0, count3pp3 = 0,count3pp4 = 0, count3pp5 = 0,count4pp1 = 0, count4pp2 = 0, count4pp3 = 0,count4pp4 = 0;
  
    Int_t countdisc1 = 0, countdisc2 = 0, countdisc3 = 0, countdisc4 = 0 , countdisc5 = 0;
  
    Int_t discarded2 = 0, discarded3 = 0, discarded4 = 0, discarded5 = 0;
    
    Int_t discardedb2 = 0, discardedb3 = 0, discardedb4 = 0, discardedb5 = 0;
  
    Int_t othercluster = 0, othercluster1 = 0, otherclusterPS = 0, otherclusterPA = 0;
  
    Int_t countPriEnBackground = 0, countQR = 0, countnotaccept = 0, countCompTruth = 0;
    
    Int_t countPriScat = 0, countPriAbs = 0;
    
    Int_t countPA2 = 0, countPA3 = 0, countPA4 = 0, countPA5 = 0, countPA6 = 0, countPA7 = 0, countPA8 = 0, countPA9 = 0, countPA10 = 0, countPA11 = 0;
    Int_t countBPA2 = 0, countBPA3 = 0, countBPA4 = 0, countBPA5 = 0;
    Int_t countPS2 = 0, countPS3 = 0, countPS4 = 0, countPS5 = 0, countPS6 = 0, countPS7 = 0, countPS8 = 0, countPS9 = 0, countPS10 = 0, countPS11 = 0;
    Int_t countBPS2 = 0, countBPS3 = 0, countBPS4 = 0, countBPS5 = 0;
    
    vector<PhysicVar> *energy;
  
    Double_t Scatthick_z, Scatthick_x, Scatthick_y, Absthick_z, Absthick_x, Absthick_y;
    Int_t s, es, ps;
    Double_t EnergyScat, EnergyAbs, TotalEnergy, TotalEnergyReco, TotalEnergyReal;
    Double_t EnUncerScat, EnUncerAbs, TotalUncer;  
    Int_t I;
    vector<PhysicVec> *pointReco;
    TVector3 *Scatposition, *Absposition;
    Double_t PosX_e,PosY_e,PosZ_e,PosX_p,PosY_p,PosZ_p;
    TVector3 *Pos_e, *Pos_p;
  
    Double_t RecoEne_e, RecoEne_p;
    Double_t EnUncer_e, EnUncer_p;
    Double_t energy1, energy2;
  

    Double_t PriEn;
    TVector3 *SourcePos;
///////////////////////////////////////////
    
//    TVector3 *point1, *point2;
    
///////////////// new version of file//////////////////////
  
    vector<TVector3> *point1, *point2;

    vector<TVector3> *RePos_p = new vector<TVector3>;
    vector<TVector3> *RePos_e = new vector<TVector3>;
  
    Int_t countnosecondinteract = 0;
  
    vector<int>* ReInt_e;
    vector<int>* ReInt_p;
  
////////////////////////////////////////////////////
/// To index signal and background events
/// - event number, event class number, type of event, signal/background probability 
/// the last one will be filled in the analysis by classifiers
/// And only the last one will be used in the analysis
/// the first three are used to check the event topology     
    fECII = new TLorentzVector();
///////////////////////////////////////////////////    
    const double me = 0.510999; // MeV/c2
    
   
    for (Int_t i = fStart; i < fStop; i++) {
        
        
        
        if (fVerbose) cout << "EI::Identify(...) event " << i << endl << endl;
        
        counter1++;
      
        status = fReader->LoadEvent(i);
      //cout << status << endl;
        if (status == false) {
            

            counter++;
         //cout << counter << endl;
            continue;
      
        }

        energy1 = fReader->GetEnergyLoss();
        energy2 = fReader->GetEnergyScattered();
    
        point1 = fReader->GetElectronPosition();
        point2 = fReader->GetPhotonPosition();
        
/////////////////////////new version of file ////////////////////// 
        
        ReInt_e = fReader->GetRealInteractionE();
        ReInt_p = fReader->GetRealInteractionP();
    
        es = fReader->GetRealPosESize();
        ps = fReader->GetRealPosPSize();
        
//////////////////////////////////////////////////////
        
        PriEn = fReader->GetEP();
       
        SourcePos = fReader->GetPositionPrimary();
    
        energy = fReader->GetRecoClusterEnergy();
        pointReco = fReader->GetRecoClusterPosition();
        s = fReader->GetRecoClusterPosSize();
       
        I = fReader->GetIdentified();
    
        Pos_e = fReader->GetPositionScatteringReco();
        Pos_p = fReader->GetPositionAbsorptionReco();
        RecoEne_e = fReader->GetEnergyLossReco();
        EnUncer_e = fReader->GetEnergyLossRecoUncer();
        RecoEne_p = fReader->GetEnergyScatteredReco();
        EnUncer_p = fReader->GetEnergyScatteredRecoUncer();
      
        Scatthick_z = fReader->GetScatThickz();
        Scatthick_y = fReader->GetScatThicky();
        Scatthick_x = fReader->GetScatThickx();
        Absthick_z = fReader->GetAbsThickz();
        Absthick_y = fReader->GetAbsThicky();
        Absthick_x = fReader->GetAbsThickx();
        Scatposition = fReader->GetScattererPosition();
        Absposition = fReader->GetAbsorberPosition();
    

        bool cut_real=true;
        bool cut_true=true;
        

////////////// Real information /////////////////
       
        fPosScatReal = point1; 
        fPosAbsReal = point2;
        fRealEnergy_e = energy1;
        fRealEnergy_p = energy2;
       
        fEnergy = energy;
        fPoint = pointReco;
       
        Pri->Fill(PriEn);
        ZPE->Fill(PriEn,SourcePos->Z());

        
/////////////////// new version of file ///////////////////////

        for(int m = 0; m < ReInt_p->size(); m++) {
            
            
            if(ReInt_p->at(m) > 0 &&  ReInt_p->at(m) < 10) {

                //cout<< " valueP : "<< ReInt_p->at(m) <<" , " <<"real_pX : " << fPosAbsReal->at(m).X() << " , " << "size : " << ReInt_p->size() << endl;
                
                RePos_p->push_back(fPosAbsReal->at(m));
                
            
            }
            
            
        }
        
        for(int m = 0; m < ReInt_e->size(); m++) {
            
            if( ReInt_e->at(m) >= 10 && ReInt_e->at(m) <= 19) {
                
                //cout<< " valueE : "<< ReInt_e->at(m) <<" , " <<"real_eX : " << fPosScatReal->at(m).X() << " , " << "size : " << ReInt_e->size() << endl;
                RePos_e->push_back(fPosScatReal->at(m));
            
            }
            
            
        }
        
        if(RePos_p->size() < 2 || RePos_e->size() < 1) {
            
/////////////////////////////////////////////////////////// Real Background like Zero Energy (Non-Compton) ////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
            //cout << " PriEn : " << PriEn << endl;
            Prirb->Fill(PriEn);
            countnosecondinteract++;
            //cout<<"----------- removed event no : "<<i << "------------------"<< endl;
            //cout<< "photon position :" << RePos_p->at(0).X() << ", " << RePos_p->at(1).X() << ", " << "photon energy : " << energy2 << endl;
            //cout<< "electron position :" << RePos_e->at(0).X() << ", " << "electron energy : " << energy1 << endl;
            
            if (s==2) {
               
                        
                      
               if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z())) {
                   
                      
                //cout<< "event No. : " << i << " Clus Position : " << pointReco->at(0).position.X() << pointReco->at(0).position.Y() << pointReco->at(0).position.Z() << " , " << pointReco->at(1).position.X() << pointReco->at(1).position.Y() << pointReco->at(1).position.Z() << endl;
                  countnanR2++;
                  continue;
               }

               if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
                     
/*                             
                   if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)  || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15)|| pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                         discarded2++;
                         continue;
                   }
 */  


                   if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                       
                       discarded2++;
                         continue;
                   }
                   if(pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                       discarded2++;
                       continue;
                   }
                   if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                         discarded2++;
                         continue;
                   }
                  
                   countE01++;
                   fPriEnergy = PriEn;
                   fRealEnergy_e = fRealEnergy_e;
                   fRealEnergy_p = fRealEnergy_p;
                   fPosX_2 = pointReco->at(0).position.X();
                   fPosY_2 = pointReco->at(0).position.Y();
                   fPosZ_2 = pointReco->at(0).position.Z();
                   fPosX_2unc = pointReco->at(0).uncertainty.X();
                   fPosY_2unc = pointReco->at(0).uncertainty.Y();
                   fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                   fPosX_3 = 0;
                   fPosY_3 = 0;
                   fPosZ_3 = 0;
                   fPosX_3unc = 0;
                   fPosY_3unc = 0;
                   fPosZ_3unc = 0;
                   fPosX_4 = 0;
                   fPosY_4 = 0;
                   fPosZ_4 = 0;
                   fPosX_4unc = 0;
                   fPosY_4unc = 0;
                   fPosZ_4unc = 0;
                   fPosX_5 = 0;
                   fPosY_5 = 0;
                   fPosZ_5 = 0;
                   fPosX_5unc = 0;
                   fPosY_5unc = 0;
                   fPosZ_5unc = 0;
                   fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                   fEnergy_2 = energy->at(0).value;
                   fEnergy_2unc = energy->at(0).uncertainty;
                   fEnergyC = energy->at(0).value;
                   fEnergyCunc = energy->at(0).uncertainty;
                   fEnergySe = 0;
                   fEnergySeunc = 0;
                   fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                        
                   fPosX_1 = pointReco->at(1).position.X();
                   fPosY_1 = pointReco->at(1).position.Y();
                   fPosZ_1 = pointReco->at(1).position.Z();
                   fPosX_1unc = pointReco->at(1).uncertainty.X();
                   fPosY_1unc = pointReco->at(1).uncertainty.Y();
                   fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                   fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                   fEnergy_1 = energy->at(1).value;
                   fEnergy_1unc = energy->at(1).uncertainty;
                   fEnergy_3 = fEnergy_1 + fEnergy_2;
                   fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                   fDiffEnergy = energy->at(0).value - energy->at(1).value;
                   fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                   fTheta = 0;
                   fECII->SetXYZT(i, s, 1, 0);
                   fS = s;
                   fEnDiff = fPriEnergy - fEnergy_1; 
                   
                   fTreeRB2->Fill();
                   fTreeB2->Fill();
                   fTreeSB2->Fill();
                   fTreeSB->Fill();
                     
               }
               countrs2++;
                       
           } else if (s==3) {
               
     
                      
               if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z())) {
                   
                
                          
                        
                      
                //cout<< "event No. : " << i << " Clus Position : " << pointReco->at(0).position.X() << pointReco->at(0).position.Y() << pointReco->at(0).position.Z() << " , " << pointReco->at(1).position.X() << pointReco->at(1).position.Y() << pointReco->at(1).position.Z() << endl;
                   countnanR3++;
                   continue;
               }
                         
                      
                         
               if (pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                
                   
/*                        
                   if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                    
                       
                    discarded3++;
                    continue;
                   }  
  */ 

                   if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                       discarded3++;
                        continue;
                   }
                   if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                       discarded3++;
                        continue;
                   }
                   if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                       discarded3++;
                        continue;
                   }
                       
                   if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                    
                       
                    discarded3++;
                    continue;
                   } 

  
                countE03++;
                          
                S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                A1A2 = S1A2 - S1A1;
                                            
                A2A1 = -A1A2;
                                                
                Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                Double_t M1 = S1A1.Mag();
                Double_t M2 = S1A2.Mag();
                Double_t L1 = A1A2.Mag();
                Double_t L2 = A2A1.Mag();
                                            
                Double_t cost12 = dot1/(M1*L1);
                Double_t cost21 = dot2/(M2*L2);
                fPriEnergy = PriEn; 

                fRealEnergy_e = fRealEnergy_e;
                fRealEnergy_p = fRealEnergy_p;
                fPosX_1 = pointReco->at(2).position.X();
                fPosY_1 = pointReco->at(2).position.Y();
                fPosZ_1 = pointReco->at(2).position.Z();
                fPosX_1unc = pointReco->at(2).uncertainty.X();
                fPosY_1unc = pointReco->at(2).uncertainty.Y();
                fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                fEnergy_1 = energy->at(2).value;
                fEnergy_1unc =  energy->at(2).uncertainty;
                   
                fPosX_2 = pointReco->at(1).position.X();
                fPosY_2 = pointReco->at(1).position.Y();
                fPosZ_2 = pointReco->at(1).position.Z();
                fPosX_2unc = pointReco->at(1).uncertainty.X();
                fPosY_2unc = pointReco->at(1).uncertainty.Y();
                fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                fPosX_3 = pointReco->at(0).position.X();
                fPosY_3 = pointReco->at(0).position.Y();
                fPosZ_3 = pointReco->at(0).position.Z();
                fPosX_3unc = pointReco->at(0).uncertainty.X();
                fPosY_3unc = pointReco->at(0).uncertainty.Y();
                fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                fPosX_4 = 0;
                fPosY_4 = 0;
                fPosZ_4 = 0;
                fPosX_4unc = 0;
                fPosY_4unc = 0;
                fPosZ_4unc = 0;
                fPosX_5 = 0;
                fPosY_5 = 0;
                fPosZ_5 = 0;
                fPosX_5unc = 0;
                fPosY_5unc = 0;
                fPosZ_5unc = 0;
                fEnergyC = energy->at(1).value;
                fEnergyCunc =  energy->at(1).uncertainty;
                fEnergySe = energy->at(0).value;
                fEnergySeunc =  energy->at(0).uncertainty;
                fEnergyTh = 0;
                fEnergyThunc = 0;
                fEnergyFo = 0;
                fEnergyFounc = 0;
                fEnergy_2 = energy->at(1).value + energy->at(0).value;
                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                fEnergy_3 = fEnergy_1 + fEnergy_2;
                fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                fTheta = cost12;      
                fDiffEnergy = energy->at(1).value - energy->at(2).value;
                fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                fS = s;
                fECII->SetXYZT(i, s, 1, 0);
                fEnDiff = fPriEnergy - fEnergy_1;
                fTreeRB3->Fill();
                fTreeB3->Fill();
                fTreeSB3->Fill();
                fTreeSB->Fill();

               /////////////////////////////////////////////////////////////////////////////////////////////
                countE04++;
                fPriEnergy = PriEn;

                fRealEnergy_e = fRealEnergy_e;
                fRealEnergy_p = fRealEnergy_p;
                fPosX_1 = pointReco->at(2).position.X();
                fPosY_1 = pointReco->at(2).position.Y();
                fPosZ_1 = pointReco->at(2).position.Z();
                fPosX_1unc = pointReco->at(2).uncertainty.X();
                fPosY_1unc = pointReco->at(2).uncertainty.Y();
                fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                fEnergy_1 = energy->at(2).value;
                fEnergy_1unc =  energy->at(2).uncertainty;
                   
                fPosX_2 = pointReco->at(0).position.X();
                fPosY_2 = pointReco->at(0).position.Y();
                fPosZ_2 = pointReco->at(0).position.Z();
                fPosX_2unc = pointReco->at(0).uncertainty.X();
                fPosY_2unc = pointReco->at(0).uncertainty.Y();
                fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                fPosX_3 = pointReco->at(1).position.X();
                fPosY_3 = pointReco->at(1).position.Y();
                fPosZ_3 = pointReco->at(1).position.Z();
                fPosX_3unc = pointReco->at(1).uncertainty.X();
                fPosY_3unc = pointReco->at(1).uncertainty.Y();
                fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                fPosX_4 = 0;
                fPosY_4 = 0;
                fPosZ_4 = 0;
                fPosX_4unc = 0;
                fPosY_4unc = 0;
                fPosZ_4unc = 0;
                fPosX_5 = 0;
                fPosY_5 = 0;
                fPosZ_5 = 0;
                fPosX_5unc = 0;
                fPosY_5unc = 0;
                fPosZ_5unc = 0;
                fEnergyC = energy->at(0).value;
                fEnergyCunc =  energy->at(0).uncertainty;
                fEnergySe = energy->at(1).value;
                fEnergySeunc =  energy->at(1).uncertainty;
                fEnergyTh = 0;
                fEnergyThunc = 0;
                fEnergyFo = 0;
                fEnergyFounc = 0;
                fEnergy_2 = energy->at(1).value + energy->at(0).value;
                fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                fEnergy_3 = fEnergy_1 + fEnergy_2;
                fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                fTheta = cost21;       
                fDiffEnergy = energy->at(0).value - energy->at(2).value;
                fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                fS = s;
                fECII->SetXYZT(i, s, 2, 0);
                fEnDiff = fPriEnergy - fEnergy_1;
                fTreeRB3->Fill();
                fTreeB3->Fill();
                fTreeSB3->Fill();
                fTreeSB->Fill();
                  
               }
               countrs3++;
            
           } else if (s==4) {
               
               
                    
               if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z())) {
                   
                      
                //cout<< "event No. : " << i << " Clus Position : " << pointReco->at(0).position.X() << pointReco->at(0).position.Y() << pointReco->at(0).position.Z() << " , " << pointReco->at(1).position.X() << pointReco->at(1).position.Y() << pointReco->at(1).position.Z() << endl;
                   countnanR4++;
                   continue;
               }
               
               if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                    if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15)|| pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                        discarded4++;
                        continue;
                    } 
 */

                    if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                        discarded4++;
                        continue;
                    }
                    if(pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                        discarded4++;
                        continue;
                    }
                    if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                        discarded4++;
                        continue;
                    }
                    if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                        discarded4++;
                        continue;
                    }
                    if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                        discarded4++;
                        continue;
                    } 
                   
                    
                    
                
                    S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                    S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                    S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                    A1A2 = S1A2 - S1A1;
                                                
                    A2A1 = -A1A2;
                                                
                    A1A3 = S1A3 - S1A1;
                                                
                    A3A1 = -A1A3;
                                                
                    A2A3 = S1A3 -S1A2;
                                                
                    A3A2 = -A2A3;
                                                
                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                    Double_t M1 = S1A1.Mag();
                    Double_t M2 = S1A2.Mag();
                    Double_t L1 = A1A2.Mag();
                    Double_t cost12 = dot1/(M1*L1);
                    Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                                                
                    Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L3 = A2A3.Mag();
                                                
                    Double_t cost23 = dot5/(M2*L3);
                    Double_t cost32 = dot6/(M3*L3);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13);
                    Double_t T2 = (1 + cost21 )*(1 + cost23);
                    Double_t T3 = (1 + cost31 )*(1 + cost32);

                    countE07++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(0).position.X();
                    fPosY_2 = pointReco->at(0).position.Y();
                    fPosZ_2 = pointReco->at(0).position.Z();
                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(2).position.X();
                    fPosY_3 = pointReco->at(2).position.Y();
                    fPosZ_3 = pointReco->at(2).position.Z();
                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                    fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                    fEnergyC = energy->at(0).value;
                    fEnergyCunc =  energy->at(0).uncertainty;
                    fEnergySe = energy->at(2).value;
                    fEnergySeunc =  energy->at(2).uncertainty;
                    fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                    
                    fPosX_1 = pointReco->at(3).position.X();
                    fPosY_1 = pointReco->at(3).position.Y();
                    fPosZ_1 = pointReco->at(3).position.Z();
                    fPosX_1unc = pointReco->at(3).uncertainty.X();
                    fPosY_1unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(3).value;
                    fEnergy_1unc =  energy->at(3).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty);
                    fDiffEnergy = energy->at(0).value - energy->at(3).value;
                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                    fTheta = (1 + cost31 )*(1 + cost32);
                    fS = s; 
                    fECII->SetXYZT(i, s, 1, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB4->Fill();
                    fTreeB4->Fill(); 
                    fTreeSB4->Fill();
                    fTreeSB->Fill();

                    countE08++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(1).position.X();
                    fPosY_2 = pointReco->at(1).position.Y();
                    fPosZ_2 = pointReco->at(1).position.Z();
                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(0).position.X();
                    fPosY_3 = pointReco->at(0).position.Y();
                    fPosZ_3 = pointReco->at(0).position.Z();
                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                    fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                    fEnergyC = energy->at(1).value;
                    fEnergyCunc =  energy->at(1).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                    
                    fPosX_1 = pointReco->at(3).position.X();
                    fPosY_1 = pointReco->at(3).position.Y();
                    fPosZ_1 = pointReco->at(3).position.Z();
                    fPosX_1unc = pointReco->at(3).uncertainty.X();
                    fPosY_1unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(3).value;
                    fEnergy_1unc =  energy->at(3).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty);
                    fDiffEnergy = energy->at(1).value - energy->at(3).value;
                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                    fTheta = (1 + cost21 )*(1 + cost23);
                    fS = s; 
                    fECII->SetXYZT(i, s, 2, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB4->Fill();
                    fTreeB4->Fill();
                    fTreeSB4->Fill();
                    fTreeSB->Fill();
                                  
                    countE09++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(2).position.X();
                    fPosY_2 = pointReco->at(2).position.Y();
                    fPosZ_2 = pointReco->at(2).position.Z();
                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(1).position.X();
                    fPosY_3 = pointReco->at(1).position.Y();
                    fPosZ_3 = pointReco->at(1).position.Z();
                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                    fEnergyC = energy->at(2).value;
                    fEnergyCunc =  energy->at(2).uncertainty;
                    fEnergySe = energy->at(1).value;
                    fEnergySeunc =  energy->at(1).uncertainty;
                    fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                    
                    fPosX_1 = pointReco->at(3).position.X();
                    fPosY_1 = pointReco->at(3).position.Y();
                    fPosZ_1 = pointReco->at(3).position.Z();
                    fPosX_1unc = pointReco->at(3).uncertainty.X();
                    fPosY_1unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(3).value;
                    fEnergy_1unc =  energy->at(3).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty);
                    fDiffEnergy = energy->at(2).value - energy->at(3).value;
                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                    fTheta = (1 + cost12 )*(1 + cost13);
                    fS = s; 
                    fECII->SetXYZT(i, s, 3, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB4->Fill();
                    fTreeB4->Fill();
                    fTreeSB4->Fill();
                    fTreeSB->Fill();
               }
          
               countrs4++;
               
           } else if (s==5) {
               
                    
               if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z()) || isnan(pointReco->at(4).position.X()) || isinf(pointReco->at(4).position.X()) || isnan(pointReco->at(4).position.Y()) || isinf(pointReco->at(4).position.Y()) || isnan(pointReco->at(4).position.Z()) || isinf(pointReco->at(4).position.Z())) {
                   
                      
                //cout<< "event No. : " << i << " Clus Position : " << pointReco->at(0).position.X() << pointReco->at(0).position.Y() << pointReco->at(0).position.Z() << " , " << pointReco->at(1).position.X() << pointReco->at(1).position.Y() << pointReco->at(1).position.Z() << endl;
                   countnanR5++;
                   continue;
               }
               
               if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(3).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                   
                    
/*                          
                   if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)  || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15)  || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) || pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                        discarded5++;
                        continue;
                   } 
*/ 

                   if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                       discarded5++;
                        continue;
                       
                   }
                   if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                       discarded5++;
                        continue;
                   }
                   if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                       discarded5++;
                        continue;
                   }
                   if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                       discarded5++;
                        continue;
                   }
                   if (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) {
                       discarded5++;
                        continue;
                   }
                   
                   if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                        discarded5++;
                        continue;
                   } 
                   
                   
                   
                
                   S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                   S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                   S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                   S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                    A1A2 = S1A2 - S1A1;
                                                
                    A2A1 = -A1A2;
                                                
                    A1A3 = S1A3 - S1A1;
                                                
                    A3A1 = -A1A3;
                    
                    A1A4 = S1A4 - S1A1;
                                                
                    A4A1 = -A1A4;
                                                
                    A2A3 = S1A3 -S1A2;
                                                
                    A3A2 = -A2A3;
                    
                    A2A4 = S1A4 -S1A2;
                                                
                    A4A2 = -A2A4;
                    
                    A3A4 = S1A4 -S1A3;
                                                
                    A4A3 = -A3A4;
                                                
                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                    Double_t M1 = S1A1.Mag();
                    Double_t M2 = S1A2.Mag();
                    Double_t L1 = A1A2.Mag();
                    Double_t cost12 = dot1/(M1*L1);
                    Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                    
                    Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                    Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                    Double_t M4 = S1A4.Mag();
                    Double_t L3 = A1A4.Mag();
                                           
                    Double_t cost14 = dot5/(M1*L3);
                    Double_t cost41 = dot6/(M4*L3);
                                                
                    Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L4 = A2A3.Mag();
                                                
                    Double_t cost23 = dot7/(M2*L4);
                    Double_t cost32 = dot8/(M3*L4);
                    
                    Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                    Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                    Double_t L5 = A2A4.Mag();
                                                
                    Double_t cost24 = dot9/(M2*L5);
                    Double_t cost42 = dot10/(M4*L5);
                    
                    Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                    Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                    Double_t L6 = A3A4.Mag();
                                                
                    Double_t cost34 = dot11/(M3*L6);
                    Double_t cost43 = dot12/(M4*L6);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                    Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                    Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                    Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);

                    countE013++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(0).position.X();
                    fPosY_2 = pointReco->at(0).position.Y();
                    fPosZ_2 = pointReco->at(0).position.Z();
                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(3).position.X();
                    fPosY_3 = pointReco->at(3).position.Y();
                    fPosZ_3 = pointReco->at(3).position.Z();
                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                    fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = pointReco->at(1).position.X();
                    fPosY_5 = pointReco->at(1).position.Y();
                    fPosZ_5 = pointReco->at(1).position.Z();
                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(0).value;
                    fEnergyCunc =  energy->at(0).uncertainty;
                    fEnergySe = energy->at(3).value;
                    fEnergySeunc =  energy->at(3).uncertainty;
                    fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = energy->at(1).value;
                    fEnergyFounc =  energy->at(1).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                    fTheta = T4;
                    fS = s; 
                    fECII->SetXYZT(i, s, 1, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB5->Fill();
                    fTreeB5->Fill(); 
                    fTreeSB5->Fill();
                    fTreeSB->Fill();

                    countE014++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(1).position.X();
                    fPosY_2 = pointReco->at(1).position.Y();
                    fPosZ_2 = pointReco->at(1).position.Z();
                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(0).position.X();
                    fPosY_3 = pointReco->at(0).position.Y();
                    fPosZ_3 = pointReco->at(0).position.Z();
                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(2).position.X();
                    fPosY_5 = pointReco->at(2).position.Y();
                    fPosZ_5 = pointReco->at(2).position.Z();
                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(1).value;
                    fEnergyCunc =  energy->at(1).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(2).value;
                    fEnergyFounc =  energy->at(2).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                    fTheta = T3;
                    fS = s; 
                    fECII->SetXYZT(i, s, 2, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB5->Fill();
                    fTreeB5->Fill();
                    fTreeSB5->Fill();
                    fTreeSB->Fill();
                                  
                    countE015++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(2).position.X();
                    fPosY_2 = pointReco->at(2).position.Y();
                    fPosZ_2 = pointReco->at(2).position.Z();
                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(1).position.X();
                    fPosY_3 = pointReco->at(1).position.Y();
                    fPosZ_3 = pointReco->at(1).position.Z();
                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(2).value;
                    fEnergyCunc =  energy->at(2).uncertainty;
                    fEnergySe = energy->at(1).value;
                    fEnergySeunc =  energy->at(1).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                    fTheta = T2;
                    fS = s; 
                    fECII->SetXYZT(i, s, 3, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB5->Fill();
                    fTreeB5->Fill();
                    fTreeSB5->Fill();
                    fTreeSB->Fill();
                    
                    countE016++;
                    fPriEnergy = PriEn;

                    fRealEnergy_e = fRealEnergy_e;
                    fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(3).position.X();
                    fPosY_2 = pointReco->at(3).position.Y();
                    fPosZ_2 = pointReco->at(3).position.Z();
                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(2).position.X();
                    fPosY_3 = pointReco->at(2).position.Y();
                    fPosZ_3 = pointReco->at(2).position.Z();
                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                    fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(3).value;
                    fEnergyCunc =  energy->at(3).uncertainty;
                    fEnergySe = energy->at(2).value;
                    fEnergySeunc =  energy->at(2).uncertainty;
                    fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                    fTheta = T1;
                    fS = s; 
                    fECII->SetXYZT(i, s, 4, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeRB5->Fill();
                    fTreeB5->Fill();
                    fTreeSB5->Fill();
                    fTreeSB->Fill();
               }
               countrs5++;
               
           } else {
               
               
               othercluster1++; 
             //cout<< "other cluster number events" << endl;   
           }
            
            //continue;
            //RePos_e->clear();
            //RePos_p->clear();

        } else {
            
            
                  
///////////////old version of file- to debug some part of the file (PMMA180MeV0mmBPType3_...2019.root)////////////////////// 
/*
        if (fRealEnergy_e == 0) {
            
           
            fPosScatReal->SetXYZ(0,0,0);
            fPosAbsReal->SetXYZ(0,0,0);
           
        }
           
                  
                  
        if (isnan(fPosScatReal->X()) || isinf(fPosScatReal->X()) || isnan(fPosScatReal->Y()) || isinf(fPosScatReal->Y())|| isnan(fPosScatReal->Z()) || isinf(fPosScatReal->Z()) || isnan(fPosAbsReal->X()) || isinf(fPosAbsReal->X()) || isnan(fPosAbsReal->Y()) || isinf(fPosAbsReal->Y()) || isnan(fPosAbsReal->Z()) || isinf(fPosAbsReal->Z())) {
                  
                  countnan++;
                        
                  continue;
         }
*/         
////////////////////////////////////////////////////////////////////////////

            if (isnan(RePos_p->at(0).X()) || isinf(RePos_p->at(0).X()) || isnan(RePos_p->at(0).Y()) || isinf(RePos_p->at(0).Y())|| isnan(RePos_p->at(0).Z()) || isinf(RePos_p->at(0).Z()) || isnan(RePos_p->at(1).X()) || isinf(RePos_p->at(1).X()) || isnan(RePos_p->at(1).Y()) || isinf(RePos_p->at(1).Y())|| isnan(RePos_p->at(1).Z()) || isinf(RePos_p->at(1).Z())|| isnan(RePos_e->at(0).X()) || isinf(RePos_e->at(0).X()) || isnan(RePos_e->at(0).Y()) || isinf(RePos_e->at(0).Y()) || isnan(RePos_e->at(0).Z()) || isinf(RePos_e->at(0).Z())) {
               

               countnan++;
                        
               continue;
            }
           
       
///////////////////////////////// old version of file /////////////////////////////

//       if (fPosScatReal->X() >= (Scatposition->X() - (Scatthick_x/2)) && fPosScatReal->X() <= (Scatposition->X() + (Scatthick_x/2)) && fPosAbsReal->X() >= (Absposition->X() - (Absthick_x/2)) && fPosAbsReal->X() <= (Absposition->X() + (Absthick_x/2))) {
  

////////////////////////////////////////////////////// new version of file ///////////////////////

            if (RePos_p->at(0).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_p->at(0).X() <= (Scatposition->X() + (Scatthick_x/2)) && RePos_e->at(0).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_e->at(0).X() <= (Scatposition->X() + (Scatthick_x/2)) && RePos_p->at(1).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_p->at(1).X() <= (Absposition->X() + (Absthick_x/2))) {
                
              
              //cout << " PriEn1 : " << PriEn << endl;
                Pri1->Fill(PriEn);
           //Sum->Fill(energy1+energy2);
                countQR++;
   
                if (s==2) {
                    
                    if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z())) {
                      
                   
                //cout<< "event No. : " << i << " Clus Position : " << pointReco->at(0).position.X() << pointReco->at(0).position.Y() << pointReco->at(0).position.Z() << " , " << pointReco->at(1).position.X() << pointReco->at(1).position.Y() << pointReco->at(1).position.Z() << endl;
                      countnan2++;
                      continue;
                    }
              
                    if (pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                        
                      
                   
/* 
                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                          
                       
                          countdisc1++;
                          continue;
                        }
 */ 

                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)){
                            countdisc1++;
                            continue;
                        }
                        if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                            countdisc1++;
                            continue;
                        }
                        if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                          
                       
                          countdisc1++;
                          continue;
                        }


 
                        if (abs(RePos_e->at(0).X() - pointReco->at(1).position.X()) <= 2.6 && abs(RePos_e->at(0).Y() - pointReco->at(1).position.Y()) <= 10 && abs(RePos_e->at(0).Z() - pointReco->at(1).position.Z()) <= 2.6) {
//                        if (abs(RePos_e->at(0).X() - pointReco->at(1).position.X()) <= pointReco->at(1).uncertainty.X() && abs(RePos_e->at(0).Y() - pointReco->at(1).position.Y()) <= abs(pointReco->at(1).uncertainty.Y()) && abs(RePos_e->at(0).Z() - pointReco->at(1).position.Z()) <= pointReco->at(1).uncertainty.Z()) {   
                            
    //                       if (abs(fPosScatReal->X() - pointReco->at(1).position.X()) < pointReco->at(1).uncertainty.X() && abs(fPosScatReal->Y() - pointReco->at(1).position.Y()) < pointReco->at(1).uncertainty.Y() && abs(fPosScatReal->Z() - pointReco->at(1).position.Z()) < pointReco->at(1).uncertainty.Z()) {   
                           
                            if (abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  2.6) {
//                            if (abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  pointReco->at(0).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  abs(pointReco->at(0).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  pointReco->at(0).uncertainty.Z()) {    
                               
                               
    //                           if (abs(fPosAbsReal->X() - pointReco->at(0).position.X()) <  pointReco->at(0).uncertainty.X() && abs(fPosAbsReal->Y() - pointReco->at(0).position.Y()) <  pointReco->at(0).uncertainty.Y() && abs(fPosAbsReal->Z() - pointReco->at(0).position.Z()) <  pointReco->at(0).uncertainty.Z()) {
                               
                             
                                if(abs(fRealEnergy_e - energy->at(1).value) <=  0.12 * fRealEnergy_e) {
//                                if(abs(fRealEnergy_e - energy->at(1).value) <=  energy->at(1).uncertainty) {
                                   
    //                                   countes2++;
                                   
                                    if (abs(fRealEnergy_p - energy->at(0).value) <=  0.12 * fRealEnergy_p) {
//                                    if (abs(fRealEnergy_p - energy->at(0).value) <=  energy->at(0).uncertainty) {     
                             

                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(1).position.X();
                                        fPosY_1 = pointReco->at(1).position.Y();
                                        fPosZ_1 = pointReco->at(1).position.Z();
                                        fPosX_1unc = pointReco->at(1).uncertainty.X();
                                        fPosY_1unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(1).value;
                                        fEnergy_1unc =  energy->at(1).uncertainty;

                                       fPosX_2 = pointReco->at(0).position.X();
                                       fPosY_2 = pointReco->at(0).position.Y();
                                       fPosZ_2 = pointReco->at(0).position.Z();
                                       fPosX_2unc = pointReco->at(0).uncertainty.X();
                                       fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                       fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                       fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                       fPosX_3 = 0;
                                       fPosY_3 = 0;
                                       fPosZ_3 = 0;
                                       fPosX_3unc = 0;
                                       fPosY_3unc = 0;
                                       fPosZ_3unc = 0;
                                       fPosX_4 = 0;
                                       fPosY_4 = 0;
                                       fPosZ_4 = 0;
                                       fPosX_4unc = 0;
                                       fPosY_4unc = 0;
                                       fPosZ_4unc = 0;
                                       fPosX_5 = 0;
                                       fPosY_5 = 0;
                                       fPosZ_5 = 0;
                                       fPosX_5unc = 0;
                                       fPosY_5unc = 0;
                                       fPosZ_5unc = 0;
                                       fEnergy_2 = energy->at(0).value;
                                       fEnergy_2unc =  energy->at(0).uncertainty;
                                       fEnergy_3 = fEnergy_1 + fEnergy_2;
                                       fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);  
                                       fEnergyC = energy->at(0).value;
                                       fEnergyCunc =  energy->at(0).uncertainty;
                                       fEnergySe = 0;
                                       fEnergySeunc = 0;
                                       fEnergyTh = 0;
                                       fEnergyThunc = 0;
                                       fEnergyFo = 0;
                                       fEnergyFounc = 0;
                               
                                       fDiffEnergy = energy->at(0).value - energy->at(1).value;
                                       fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                                       count1++;
                                       fS = s;
                                       fTheta = 0;
                                       fECII->SetXYZT(i, s, 10, 0);
                                       fEnDiff = fPriEnergy - fEnergy_1;
                                       fTreeS2->Fill();
                                       fTreeSB2->Fill();
                                       fTreeSB->Fill();
                                       
                                    } else {
                                        
                                       
                                        fPriEnergy = PriEn; 
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                       fPosX_1 = pointReco->at(1).position.X();
                                       fPosY_1 = pointReco->at(1).position.Y();
                                       fPosZ_1 = pointReco->at(1).position.Z();
                                       fPosX_1unc = pointReco->at(1).uncertainty.X();
                                       fPosY_1unc = pointReco->at(1).uncertainty.Y();
                                       fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                                       fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                       fEnergy_1 = energy->at(1).value;
                                       fEnergy_1unc = energy->at(1).uncertainty;

                                       fPosX_2 = pointReco->at(0).position.X();
                                       fPosY_2 = pointReco->at(0).position.Y();
                                       fPosZ_2 = pointReco->at(0).position.Z();
                                       fPosX_2unc = pointReco->at(0).uncertainty.X();
                                       fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                       fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                       fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                       fPosX_3 = 0;
                                       fPosY_3 = 0;
                                       fPosZ_3 = 0;
                                       fPosX_3unc = 0;
                                       fPosY_3unc = 0;
                                       fPosZ_3unc = 0;
                                       fPosX_4 = 0;
                                       fPosY_4 = 0;
                                       fPosZ_4 = 0;
                                       fPosX_4unc = 0;
                                       fPosY_4unc = 0;
                                       fPosZ_4unc = 0;
                                       fPosX_5 = 0;
                                       fPosY_5 = 0;
                                       fPosZ_5 = 0;
                                       fPosX_5unc = 0;
                                       fPosY_5unc = 0;
                                       fPosZ_5unc = 0;
                                       fEnergy_2 = energy->at(0).value;
                                       fEnergy_2unc = energy->at(0).uncertainty;
                                       fEnergy_3 = fEnergy_1 + fEnergy_2;
                                       fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);  
                                       fEnergyC = energy->at(0).value;
                                       fEnergyCunc =  energy->at(0).uncertainty;
                                       fEnergySe = 0;
                                       fEnergySeunc = 0;
                                       fEnergyTh = 0;
                                       fEnergyThunc = 0;
                                       fEnergyFo = 0;
                                       fEnergyFounc = 0;
                               
                                       fDiffEnergy = energy->at(0).value - energy->at(1).value;
                                       
                                       fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                                       countb21++;
                                       fS = s;
                                       fTheta = 0;
                                       fECII->SetXYZT(i, s, 0, 0);
                                       fEnDiff = fPriEnergy - fEnergy_1;
                                       fTreeBB2->Fill();
                                       fTreeB2->Fill();
                                       fTreeSB2->Fill();
                                       fTreeSB->Fill();
                                    }
                                } else {
                                    
                                   
                                    fPriEnergy = PriEn; 
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(1).position.X();
                                    fPosY_1 = pointReco->at(1).position.Y();
                                    fPosZ_1 = pointReco->at(1).position.Z();
                                    fPosX_1unc = pointReco->at(1).uncertainty.X();
                                    fPosY_1unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(1).value;
                                    fEnergy_1unc =  energy->at(1).uncertainty;

                                    fPosX_2 = pointReco->at(0).position.X();
                                    fPosY_2 = pointReco->at(0).position.Y();
                                       fPosZ_2 = pointReco->at(0).position.Z();
                                       fPosX_2unc = pointReco->at(0).uncertainty.X();
                                       fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                       fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                       fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                       fPosX_3 = 0;
                                       fPosY_3 = 0;
                                       fPosZ_3 = 0;
                                       fPosX_3unc = 0;
                                       fPosY_3unc = 0;
                                       fPosZ_3unc = 0;
                                       fPosX_4 = 0;
                                       fPosY_4 = 0;
                                       fPosZ_4 = 0;
                                       fPosX_4unc = 0;
                                       fPosY_4unc = 0;
                                       fPosZ_4unc = 0;
                                       fPosX_5 = 0;
                                       fPosY_5 = 0;
                                       fPosZ_5 = 0;
                                       fPosX_5unc = 0;
                                       fPosY_5unc = 0;
                                       fPosZ_5unc = 0;
                                       fEnergy_2 = energy->at(0).value;
                                       fEnergy_2unc =  energy->at(0).uncertainty;
                                       fEnergy_3 = fEnergy_1 + fEnergy_2;
                                       fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);  
                                       fEnergyC = energy->at(0).value;
                                       fEnergyCunc =  energy->at(0).uncertainty;
                                       fEnergySe = 0;
                                       fEnergySeunc = 0;
                                       fEnergyTh = 0;
                                       fEnergyThunc = 0;
                                       fEnergyFo = 0;
                                       fEnergyFounc = 0;
                               
                                       fDiffEnergy = energy->at(0).value - energy->at(1).value;
                                        
                                       fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                                       countb22++;
                                       fS = s;
                                       fTheta = 0;
                                       fECII->SetXYZT(i, s, 0, 0);
                                       fEnDiff = fPriEnergy - fEnergy_1;
                                       fTreeBB2->Fill();
                                       fTreeB2->Fill();
                                       fTreeSB2->Fill();
                                       fTreeSB->Fill();
                                }
                                
                            } else {
                                 
                                countb23++;
                                fPriEnergy = PriEn; 
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(1).position.X();
                                fPosY_1 = pointReco->at(1).position.Y();
                                fPosZ_1 = pointReco->at(1).position.Z();
                                fPosX_1unc = pointReco->at(1).uncertainty.X();
                                fPosY_1unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(1).value;
                                fEnergy_1unc =  energy->at(1).uncertainty;

                               fPosX_2 = pointReco->at(0).position.X();
                               fPosY_2 = pointReco->at(0).position.Y();
                               fPosZ_2 = pointReco->at(0).position.Z();
                               fPosX_2unc = pointReco->at(0).uncertainty.X();
                               fPosY_2unc = pointReco->at(0).uncertainty.Y();
                               fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                               fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fPosX_3 = 0;
                                       fPosY_3 = 0;
                                       fPosZ_3 = 0;
                                       fPosX_3unc = 0;
                                       fPosY_3unc = 0;
                                       fPosZ_3unc = 0;
                               fPosX_4 = 0;
                                       fPosY_4 = 0;
                                       fPosZ_4 = 0;
                                       fPosX_4unc = 0;
                                       fPosY_4unc = 0;
                                       fPosZ_4unc = 0;
                                       fPosX_5 = 0;
                                       fPosY_5 = 0;
                                       fPosZ_5 = 0;
                                       fPosX_5unc = 0;
                                       fPosY_5unc = 0;
                                       fPosZ_5unc = 0;
                               fEnergy_2 = energy->at(0).value;
                               fEnergy_2unc =  energy->at(0).uncertainty;
                               fEnergy_3 = fEnergy_1 + fEnergy_2;
                               fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);  
                               fEnergyC = energy->at(0).value;
                               fEnergyCunc =  energy->at(0).uncertainty;
                               fEnergySe = 0;
                               fEnergySeunc = 0;
                               fEnergyTh = 0;
                                       fEnergyThunc = 0;
                                       fEnergyFo = 0;
                                       fEnergyFounc = 0;
                               fDiffEnergy = energy->at(0).value - energy->at(1).value;
                          
                               fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                              fS = s;
                              fTheta = 0;
                              fECII->SetXYZT(i, s, 0, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreeBB2->Fill();
                              fTreeB2->Fill();
                              fTreeSB2->Fill();
                              fTreeSB->Fill();
                            }
                            
                        } else {
                            

                            countb24++;
                            fPriEnergy = PriEn;
                            fPos_eX = RePos_e->at(0).X();
                            fPos_eY = RePos_e->at(0).Y();
                            fPos_eZ = RePos_e->at(0).Z();
                            fPos_pX = RePos_p->at(1).X();
                            fPos_pY = RePos_p->at(1).Y();
                            fPos_pZ = RePos_p->at(1).Z();
                            fRealEnergy_e = fRealEnergy_e;
                            fRealEnergy_p = fRealEnergy_p;
                               fPosX_1 = pointReco->at(1).position.X();
                               fPosY_1 = pointReco->at(1).position.Y();
                               fPosZ_1 = pointReco->at(1).position.Z();
                               fPosX_1unc = pointReco->at(1).uncertainty.X();
                               fPosY_1unc = pointReco->at(1).uncertainty.Y();
                               fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                               fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                               fEnergy_1 = energy->at(1).value;
                               fEnergy_1unc =  energy->at(1).uncertainty;

                               fPosX_2 = pointReco->at(0).position.X();
                               fPosY_2 = pointReco->at(0).position.Y();
                               fPosZ_2 = pointReco->at(0).position.Z();
                               fPosX_2unc = pointReco->at(0).uncertainty.X();
                               fPosY_2unc = pointReco->at(0).uncertainty.Y();
                               fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                               fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fPosX_3 = 0;
                                       fPosY_3 = 0;
                                       fPosZ_3 = 0;
                                       fPosX_3unc = 0;
                                       fPosY_3unc = 0;
                                       fPosZ_3unc = 0;
                               fPosX_4 = 0;
                                       fPosY_4 = 0;
                                       fPosZ_4 = 0;
                                       fPosX_4unc = 0;
                                       fPosY_4unc = 0;
                                       fPosZ_4unc = 0;
                                       fPosX_5 = 0;
                                       fPosY_5 = 0;
                                       fPosZ_5 = 0;
                                       fPosX_5unc = 0;
                                       fPosY_5unc = 0;
                                       fPosZ_5unc = 0;        
                               fEnergy_2 = energy->at(0).value;
                               fEnergy_2unc =  energy->at(0).uncertainty;
                               fEnergy_3 = fEnergy_1 + fEnergy_2;
                               fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);  
                               fEnergyC = energy->at(0).value;
                               fEnergyCunc =  energy->at(0).uncertainty;
                               fEnergySe = 0;
                               fEnergySeunc = 0;
                               fEnergyTh = 0;
                                       fEnergyThunc = 0;
                                       fEnergyFo = 0;
                                       fEnergyFounc = 0;
                               fDiffEnergy = energy->at(0).value - energy->at(1).value;
                           
                               fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                           fS = s;
                           fTheta = 0;
                           fECII->SetXYZT(i, s, 0, 0);
                           fEnDiff = fPriEnergy - fEnergy_1;
                           fTreeBB2->Fill();
                           fTreeB2->Fill();
                           fTreeSB2->Fill();
                           fTreeSB->Fill();
                        }
                        
                    } else {
                        
                   
                          
                          //cout << "--background---one reason of decrease of total real number when adding other multiplicity numbers----"<<endl; 
                          //cout << "RealPosition1 :" <<" (x,y,z) = "<< "(" << fPosScatReal->X()<< "," << fPosScatReal->Y() << "," << fPosScatReal->Z() << ")" << endl;
                          //cout << "RealPosition2 :" <<" (x,y,z) = "<< "(" << fPosAbsReal->X()<< "," << fPosAbsReal->Y() << "," << fPosAbsReal->Z() << ")" << endl;
                          //cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl;
                          //cout << "Position2 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl;
                          //cout << "Energy 1: " << energy->at(1).value << endl;
                          //cout << "Energy 2: " << energy->at(0).value << endl;
                          //cout << "Energy : " << energy->at(1).value + energy->at(0).value << endl;
                                 

                        countb26++;

                        continue;
                    }
                  
                    countr2++;
             //RePos_p->clear();
             //RePos_e->clear();
                    
                } else if (s==3) {
                    

                    if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) ||  isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z())) {
       
             
                        countnan3++;
                        continue;
                    }
                      
              
              
                    if (pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
/*                  
                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                            countdisc2++;
                            continue;
                        }
 */

                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                            countdisc2++;
                            continue;
                            
                        }
                        if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                            countdisc2++;
                            continue;
                        }
                        if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                            countdisc2++;
                            continue;
                        }
                        if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                            countdisc2++;
                            continue;
                        }
                        
                        
                                 //if(pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2))) {
//                   cout << "Position21 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl; 
//                   cout << "Position22 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl; 
//                   cout << "--------------------------cat-3----------------------------------" << endl;


                        if (abs(RePos_e->at(0).X() - pointReco->at(2).position.X()) <= 2.6 && abs(RePos_e->at(0).Y() - pointReco->at(2).position.Y()) <= 10 && abs(RePos_e->at(0).Z() - pointReco->at(2).position.Z()) <= 2.6) {
//                        if (abs(RePos_e->at(0).X() - pointReco->at(2).position.X()) <= pointReco->at(2).uncertainty.X() && abs(RePos_e->at(0).Y() - pointReco->at(2).position.Y()) <= abs(pointReco->at(2).uncertainty.Y()) && abs(RePos_e->at(0).Z() - pointReco->at(2).position.Z()) <= pointReco->at(2).uncertainty.Z()) {   
      //                       if (abs(fPosScatReal->X() - pointReco->at(2).position.X()) < pointReco->at(2).uncertainty.X() && abs(fPosScatReal->Y() - pointReco->at(2).position.Y()) < pointReco->at(2).uncertainty.Y() && abs(fPosScatReal->Z() - pointReco->at(2).position.Z()) < pointReco->at(2).uncertainty.Z()) {
                           
 
                                        
                            if ((abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  2.6) || (abs(RePos_p->at(1).X() - pointReco->at(1).position.X()) <= 2.6 && abs(RePos_p->at(1).Y() - pointReco->at(1).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(1).position.Z()) <= 2.6)) {
//                            if ((abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  pointReco->at(0).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  abs(pointReco->at(0).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  pointReco->at(0).uncertainty.Z()) || (abs(RePos_p->at(1).X() - pointReco->at(1).position.X()) <= pointReco->at(1).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(1).position.Y()) <=  abs(pointReco->at(1).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(1).position.Z()) <= pointReco->at(1).uncertainty.Z())) {
     //                          if ((abs(fPosAbsReal->X() - pointReco->at(0).position.X()) <  pointReco->at(0).uncertainty.X() && abs(fPosAbsReal->Y() - pointReco->at(0).position.Y()) <  pointReco->at(0).uncertainty.Y() && abs(fPosAbsReal->Z() - pointReco->at(0).position.Z()) <  pointReco->at(0).uncertainty.Z()) || (abs(fPosAbsReal->X() - pointReco->at(1).position.X()) < pointReco->at(1).uncertainty.X() && abs(fPosAbsReal->Y() - pointReco->at(1).position.Y()) <  pointReco->at(1).uncertainty.Y() && abs(fPosAbsReal->Z() - pointReco->at(1).position.Z()) < pointReco->at(1).uncertainty.Z())) {    
                              
                          
                                if(abs(fRealEnergy_e - energy->at(2).value) <=  0.12 * fRealEnergy_e) {
//                                if(abs(fRealEnergy_e - energy->at(2).value) <=  energy->at(2).uncertainty) {    
                                    
                           
                              
                                    if(abs(fRealEnergy_p - (energy->at(0).value + energy->at(1).value)) <=  0.12 * fRealEnergy_p) {
//                                    if(abs(fRealEnergy_p - (energy->at(0).value + energy->at(1).value)) <=  energy->at(0).uncertainty + energy->at(1).uncertainty) {   
                                        
     
       
                                        Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                        Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                              
    //                              Double_t A = abs(fPosAbsReal->X() - pointReco->at(0).position.X());
    //                              Double_t B = abs(fPosAbsReal->X() - pointReco->at(1).position.X());
                              
  
                                                
                                        S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                                        S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                                        A1A2 = S1A2 - S1A1;
                                                
                                        A2A1 = -A1A2;
                                                
                                        Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                        Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                        Double_t M1 = S1A1.Mag();
                                        Double_t M2 = S1A2.Mag();
                                        Double_t L1 = A1A2.Mag();
                                        Double_t L2 = A2A1.Mag();
                                                
                                        Double_t cost12 = dot1/(M1*L1);
                                        Double_t cost21 = dot2/(M2*L2);
                          
                                        
                                        if (B < A) {
                                            
                                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(2).position.X();
                                            fPosY_1 = pointReco->at(2).position.Y();
                                            fPosZ_1 = pointReco->at(2).position.Z();
                                            fPosX_1unc = pointReco->at(2).uncertainty.X();
                                            fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fEnergy_1 = energy->at(2).value;
                                            fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                            fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                            fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2); 
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                            fTheta = cost12;
                                            count31++;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                  
                              /*
                                                point1->Print();
                                                point2->Print();
                                                cout << " realEn_e : " << energy1 << endl;
                                                cout << " realEn_p : " << energy2 << endl;
                                                cout << "---------------Real3-3-1--------------" << endl <<endl; 
                                                cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(2).position.X() << "," << pointReco->at(2).position.Y() << "," << pointReco->at(2).position.Z() << ")" << endl;
                                                cout << "Position21 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl; 
                             
                                                cout << "Energy1 : " <<  energy->at(2).value<< endl;
                                                cout << "Energy2 : " << energy->at(0).value << " + " << energy->at(1).value << " = " << fEnergy_2 << endl;
                                                cout<< "-------------------------------------------------------------" << endl;*/
                                                
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(2).position.X();
                                            fPosY_1 = pointReco->at(2).position.Y();
                                            fPosZ_1 = pointReco->at(2).position.Z();
                                            fPosX_1unc = pointReco->at(2).uncertainty.X();
                                            fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fEnergy_1 = energy->at(2).value;
                                            fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                            fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                            fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                            fTheta = cost21;
                                            countb31++;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 3, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB3->Fill();
                                            fTreeB3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                  
                                               
                                        } else {
                                            

                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(2).position.X();
                                            fPosY_1 = pointReco->at(2).position.Y();
                                            fPosZ_1 = pointReco->at(2).position.Z();
                                            fPosX_1unc = pointReco->at(2).uncertainty.X();
                                            fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fEnergy_1 = energy->at(2).value;
                                            fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                            fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                            fTheta = cost21;
                                            count32++;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                   
                                                
                                                
                              /*
                                                point1->Print();
                                                point2->Print();
                                                cout << " realEn_e : " << energy1 << endl;
                                                cout << " realEn_p : " << energy2 << endl;
                                                cout << "---------------Real3-3-2--------------" << endl <<endl; 
                                                cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(2).position.X() << "," << pointReco->at(2).position.Y() << "," << pointReco->at(2).position.Z() << ")" << endl;
                                                cout << "Position22 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl; 
                             
                                                cout << "Energy1 : " <<  energy->at(2).value<< endl;
                                                cout << "Energy2 : " << energy->at(0).value << " + " << energy->at(1).value << " = " << fEnergy_2 << endl;
                                                cout<< "-------------------------------------------------------------" << endl;*/
                                                
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(2).position.X();
                                            fPosY_1 = pointReco->at(2).position.Y();
                                            fPosZ_1 = pointReco->at(2).position.Z();
                                            fPosX_1unc = pointReco->at(2).uncertainty.X();
                                            fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fEnergy_1 = energy->at(2).value;
                                            fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                            fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                            fTheta = cost12;
                                            countb32++;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 3, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB3->Fill();
                                            fTreeB3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                        }
                                       
                                    } else {
                                        
                              
                                        countb34++;
                          
                                        S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                                        S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                                        A1A2 = S1A2 - S1A1;
                                                
                                        A2A1 = -A1A2;
                                                
                                        Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                        Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                        Double_t M1 = S1A1.Mag();
                                        Double_t M2 = S1A2.Mag();
                                        Double_t L1 = A1A2.Mag();
                                        Double_t L2 = A2A1.Mag();
                                                
                                        Double_t cost12 = dot1/(M1*L1);
                                        Double_t cost21 = dot2/(M2*L2);
                              
                                        Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                        Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                              
   //                              Double_t A = abs(fPosAbsReal->X() - pointReco->at(0).position.X());
   //                              Double_t B = abs(fPosAbsReal->X() - pointReco->at(1).position.X());
                              
                                        if(B < A) {
                                            
                                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost12;
                                  
                                            fS = s;
                                            fECII->SetXYZT(i, s, 0, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeB3->Fill();
                                            fTreeBB3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(2).position.X();
                                            fPosY_1 = pointReco->at(2).position.Y();
                                            fPosZ_1 = pointReco->at(2).position.Z();
                                            fPosX_1unc = pointReco->at(2).uncertainty.X();
                                            fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fEnergy_1 = energy->at(2).value;
                                            fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost21;
                                  
                                            fS = s;
                                            fECII->SetXYZT(i, s, 3, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB3->Fill();
                                            fTreeB3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                        } else {
                                            
                                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(2).position.X();
                                            fPosY_1 = pointReco->at(2).position.Y();
                                            fPosZ_1 = pointReco->at(2).position.Z();
                                            fPosX_1unc = pointReco->at(2).uncertainty.X();
                                            fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fEnergy_1 = energy->at(2).value;
                                            fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost21;
                                  
                                  fS = s;
                                            fECII->SetXYZT(i, s, 0, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeB3->Fill();
                                            fTreeBB3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = 0;
                                            fPosY_4 = 0;
                                            fPosZ_4 = 0;
                                            fPosX_4unc = 0;
                                            fPosY_4unc = 0;
                                            fPosZ_4unc = 0;
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = 0;
                                            fEnergyThunc = 0;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2); 
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost12;
                                  
                                            fS = s;
                                            fECII->SetXYZT(i, s, 3, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB3->Fill();
                                            fTreeB3->Fill();
                                            fTreeSB3->Fill();
                                            fTreeSB->Fill();
                                        }
                                    }
                                    
                                } else {
                           
                                    countb35++;
                          
                                    S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                                    S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                                    A1A2 = S1A2 - S1A1;
                                                
                                    A2A1 = -A1A2;
                                                
                                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                    Double_t M1 = S1A1.Mag();
                                    Double_t M2 = S1A2.Mag();
                                    Double_t L1 = A1A2.Mag();
                                    Double_t L2 = A2A1.Mag();
                                                
                           Double_t cost12 = dot1/(M1*L1);
                           Double_t cost21 = dot2/(M2*L2);
                            
                           Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                           Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                           
    //                           Double_t A = abs(fPosAbsReal->X() - pointReco->at(0).position.X());
    //                           Double_t B = abs(fPosAbsReal->X() - pointReco->at(1).position.X());
                              
                                    if(B < A) {
                                        
                               
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                               fPosX_1 = pointReco->at(2).position.X();
                               fPosY_1 = pointReco->at(2).position.Y();
                               fPosZ_1 = pointReco->at(2).position.Z();
                               fPosX_1unc = pointReco->at(2).uncertainty.X();
                               fPosY_1unc = pointReco->at(2).uncertainty.Y();
                               fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                               fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fEnergy_1 = energy->at(2).value;
                               fEnergy_1unc =  energy->at(2).uncertainty;
                   
                               fPosX_2 = pointReco->at(1).position.X();
                               fPosY_2 = pointReco->at(1).position.Y();
                               fPosZ_2 = pointReco->at(1).position.Z();
                               fPosX_2unc = pointReco->at(1).uncertainty.X();
                               fPosY_2unc = pointReco->at(1).uncertainty.Y();
                               fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                               fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                        fPosX_4 = 0;
                                        fPosY_4 = 0;
                                        fPosZ_4 = 0;
                                        fPosX_4unc = 0;
                                        fPosY_4unc = 0;
                                        fPosZ_4unc = 0;
                                        fPosX_5 = 0;
                                        fPosY_5 = 0;
                                        fPosZ_5 = 0;
                                        fPosX_5unc = 0;
                                        fPosY_5unc = 0;
                                        fPosZ_5unc = 0;
                               fEnergyC = energy->at(1).value;
                               fEnergyCunc = energy->at(1).uncertainty;
                               fEnergySe = energy->at(0).value;
                               fEnergySeunc =  energy->at(0).uncertainty;
                                        fEnergyTh = 0;
                                        fEnergyThunc = 0;
                                        fEnergyFo = 0;
                                        fEnergyFounc = 0;
                               fEnergy_2 = energy->at(1).value + energy->at(0).value;
                               fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                               fEnergy_3 = fEnergy_1 + fEnergy_2;
                               fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                               fDiffEnergy = energy->at(1).value - energy->at(2).value;
                               fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                               fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                               fTheta = cost12;
                                  
                                        fS = s;
                                        fECII->SetXYZT(i, s, 0, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreeB3->Fill();
                                        fTreeBB3->Fill();
                                        fTreeSB3->Fill();
                                        fTreeSB->Fill();
                               
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                               fPosX_1 = pointReco->at(2).position.X();
                               fPosY_1 = pointReco->at(2).position.Y();
                               fPosZ_1 = pointReco->at(2).position.Z();
                               fPosX_1unc = pointReco->at(2).uncertainty.X();
                               fPosY_1unc = pointReco->at(2).uncertainty.Y();
                               fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                               fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fEnergy_1 = energy->at(2).value;
                               fEnergy_1unc =  energy->at(2).uncertainty;
                   
                               fPosX_2 = pointReco->at(0).position.X();
                               fPosY_2 = pointReco->at(0).position.Y();
                               fPosZ_2 = pointReco->at(0).position.Z();
                               fPosX_2unc = pointReco->at(0).uncertainty.X();
                               fPosY_2unc = pointReco->at(0).uncertainty.Y();
                               fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                               fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_4 = 0;
                                        fPosY_4 = 0;
                                        fPosZ_4 = 0;
                                        fPosX_4unc = 0;
                                        fPosY_4unc = 0;
                                        fPosZ_4unc = 0;
                                        fPosX_5 = 0;
                                        fPosY_5 = 0;
                                        fPosZ_5 = 0;
                                        fPosX_5unc = 0;
                                        fPosY_5unc = 0;
                                        fPosZ_5unc = 0;   
                               fEnergyC = energy->at(0).value;
                               fEnergyCunc =  energy->at(0).uncertainty;
                               fEnergySe = energy->at(1).value;
                               fEnergySeunc =  energy->at(1).uncertainty;
                               fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                               fEnergy_2 = energy->at(1).value + energy->at(0).value;
                               fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                               fEnergy_3 = fEnergy_1 + fEnergy_2;
                               fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                               fDiffEnergy = energy->at(0).value - energy->at(2).value;
                               fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                               fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                               fTheta = cost21;
                                  
                                        fS = s;
                                        fECII->SetXYZT(i, s, 3, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB3->Fill();
                                        fTreeB3->Fill();
                                        fTreeSB3->Fill();
                                        fTreeSB->Fill();
                                        
                                    } else {
                                        
                               
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                               fPosX_1 = pointReco->at(2).position.X();
                               fPosY_1 = pointReco->at(2).position.Y();
                               fPosZ_1 = pointReco->at(2).position.Z();
                               fPosX_1unc = pointReco->at(2).uncertainty.X();
                               fPosY_1unc = pointReco->at(2).uncertainty.Y();
                               fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                               fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fEnergy_1 = energy->at(2).value;
                               fEnergy_1unc =  energy->at(2).uncertainty;
                   
                               fPosX_2 = pointReco->at(0).position.X();
                               fPosY_2 = pointReco->at(0).position.Y();
                               fPosZ_2 = pointReco->at(0).position.Z();
                               fPosX_2unc = pointReco->at(0).uncertainty.X();
                               fPosY_2unc = pointReco->at(0).uncertainty.Y();
                               fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                               fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_4 = 0;
                                        fPosY_4 = 0;
                                        fPosZ_4 = 0;
                                        fPosX_4unc = 0;
                                        fPosY_4unc = 0;
                                        fPosZ_4unc = 0;
                                        fPosX_5 = 0;
                                        fPosY_5 = 0;
                                        fPosZ_5 = 0;
                                        fPosX_5unc = 0;
                                        fPosY_5unc = 0;
                                        fPosZ_5unc = 0;   
                               fEnergyC = energy->at(0).value;
                               fEnergyCunc =  energy->at(0).uncertainty;
                               fEnergySe = energy->at(1).value;
                               fEnergySeunc =  energy->at(1).uncertainty;
                               fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                               fEnergy_2 = energy->at(1).value + energy->at(0).value;
                               fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                               fEnergy_3 = fEnergy_1 + fEnergy_2;
                               fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                               fDiffEnergy = energy->at(0).value - energy->at(2).value;
                               fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                               fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                               fTheta = cost21;
                                  
                               fS = s;
                               fECII->SetXYZT(i, s, 0, 0);
                               fEnDiff = fPriEnergy - fEnergy_1;
                               fTreeB3->Fill();
                               fTreeBB3->Fill();
                               fTreeSB3->Fill();
                               fTreeSB->Fill();
                               
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                               fPosX_1 = pointReco->at(2).position.X();
                               fPosY_1 = pointReco->at(2).position.Y();
                               fPosZ_1 = pointReco->at(2).position.Z();
                               fPosX_1unc = pointReco->at(2).uncertainty.X();
                               fPosY_1unc = pointReco->at(2).uncertainty.Y();
                               fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                               fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fEnergy_1 = energy->at(2).value;
                               fEnergy_1unc =  energy->at(2).uncertainty;
                   
                               fPosX_2 = pointReco->at(1).position.X();
                               fPosY_2 = pointReco->at(1).position.Y();
                               fPosZ_2 = pointReco->at(1).position.Z();
                               fPosX_2unc = pointReco->at(1).uncertainty.X();
                               fPosY_2unc = pointReco->at(1).uncertainty.Y();
                               fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                               fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                               fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                        fPosX_4 = 0;
                                        fPosY_4 = 0;
                                        fPosZ_4 = 0;
                                        fPosX_4unc = 0;
                                        fPosY_4unc = 0;
                                        fPosZ_4unc = 0;
                                        fPosX_5 = 0;
                                        fPosY_5 = 0;
                                        fPosZ_5 = 0;
                                        fPosX_5unc = 0;
                                        fPosY_5unc = 0;
                                        fPosZ_5unc = 0;   
                               fEnergyC = energy->at(1).value;
                               fEnergyCunc =  energy->at(1).uncertainty;
                               fEnergySe = energy->at(0).value;
                               fEnergySeunc =  energy->at(0).uncertainty;
                               fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                               fEnergy_2 = energy->at(1).value + energy->at(0).value;
                               fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                               fEnergy_3 = fEnergy_1 + fEnergy_2;
                               fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                               fDiffEnergy = energy->at(1).value - energy->at(2).value;
                               fRatioEnergy = energy->at(1).value/(fEnergy_2); 
                               fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                               fTheta = cost12;
                                  
                                        fS = s;
                                        fECII->SetXYZT(i, s, 3, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB3->Fill();
                                        fTreeB3->Fill();
                                        fTreeSB3->Fill();
                                        fTreeSB->Fill();
                                    }
                                }
    
/// If the energy uncertainy conditions are applied then the code below is uncommented.///
                            } else {
                                
                                countb36++;
                          
                                S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                                S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                                A1A2 = S1A2 - S1A1;
                                                
                                A2A1 = -A1A2;
                                                
                                Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                Double_t M1 = S1A1.Mag();
                                Double_t M2 = S1A2.Mag();
                                Double_t L1 = A1A2.Mag();
                                Double_t L2 = A2A1.Mag();
                                                
                                Double_t cost12 = dot1/(M1*L1);
                                Double_t cost21 = dot2/(M2*L2);
                                
                                Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                              
                                if(B < A) {
                                    
                                  
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(2).position.X();
                                    fPosY_1 = pointReco->at(2).position.Y();
                                    fPosZ_1 = pointReco->at(2).position.Z();
                                    fPosX_1unc = pointReco->at(2).uncertainty.X();
                                    fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fEnergy_1 = energy->at(2).value;
                                    fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                    fPosX_2 = pointReco->at(1).position.X();
                                    fPosY_2 = pointReco->at(1).position.Y();
                                    fPosZ_2 = pointReco->at(1).position.Z();
                                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                    fPosX_4 = 0;
                                    fPosY_4 = 0;
                                    fPosZ_4 = 0;
                                    fPosX_4unc = 0;
                                    fPosY_4unc = 0;
                                    fPosZ_4unc = 0;
                                    fPosX_5 = 0;
                                    fPosY_5 = 0;
                                    fPosZ_5 = 0;
                                    fPosX_5unc = 0;
                                    fPosY_5unc = 0;
                                    fPosZ_5unc = 0;
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                    fEnergySe = energy->at(0).value;
                                    fEnergySeunc =  energy->at(0).uncertainty;
                                    fEnergyTh = 0;
                                    fEnergyThunc = 0;
                                    fEnergyFo = 0;
                                    fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost12;
                                  
                                    fS = s;
                                  
                                    fECII->SetXYZT(i, s, 0, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreeB3->Fill();
                                    fTreeBB3->Fill();
                                    fTreeSB3->Fill();
                                    fTreeSB->Fill();
                                  
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(2).position.X();
                                    fPosY_1 = pointReco->at(2).position.Y();
                                    fPosZ_1 = pointReco->at(2).position.Z();
                                    fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_4 = 0;
                                    fPosY_4 = 0;
                                    fPosZ_4 = 0;
                                    fPosX_4unc = 0;
                   fPosY_4unc = 0;
                   fPosZ_4unc = 0;
                   fPosX_5 = 0;
                   fPosY_5 = 0;
                   fPosZ_5 = 0;
                   fPosX_5unc = 0;
                   fPosY_5unc = 0;
                   fPosZ_5unc = 0;
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                    fEnergyTh = 0;
                                    fEnergyThunc = 0;
                                    fEnergyFo = 0;
                                    fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost21;
                                  
                                    fS = s;
                                    fECII->SetXYZT(i, s, 3, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB3->Fill();
                                    fTreeB3->Fill();
                                    fTreeSB3->Fill();
                                    fTreeSB->Fill();
                                  
                                } else {
                                    
                                  
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(2).position.X();
                                    fPosY_1 = pointReco->at(2).position.Y();
                                    fPosZ_1 = pointReco->at(2).position.Z();
                                    fPosX_1unc = pointReco->at(2).uncertainty.X();
                                    fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fEnergy_1 = energy->at(2).value;
                                    fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_4 = 0;
                                    fPosY_4 = 0;
                                    fPosZ_4 = 0;
                                    fPosX_4unc = 0;
                                    fPosY_4unc = 0;
                                    fPosZ_4unc = 0;
                   fPosX_5 = 0;
                   fPosY_5 = 0;
                   fPosZ_5 = 0;
                   fPosX_5unc = 0;
                   fPosY_5unc = 0;
                   fPosZ_5unc = 0;
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost21;
                                  
                                    fS = s;
                                  
                                    fECII->SetXYZT(i, s, 0, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreeB3->Fill();
                                    fTreeBB3->Fill();
                                    fTreeSB3->Fill();
                                    fTreeSB->Fill();
                                    
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = 0;
                                    fPosY_4 = 0;
                                    fPosZ_4 = 0;
                                    fPosX_4unc = 0;
                                    fPosY_4unc = 0;
                                    fPosZ_4unc = 0;
                                    fPosX_5 = 0;
                                    fPosY_5 = 0;
                                    fPosZ_5 = 0;
                                    fPosX_5unc = 0;
                                    fPosY_5unc = 0;
                                    fPosZ_5unc = 0;
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2); 
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost12;
                                  
                                    fS = s;
                                    fECII->SetXYZT(i, s, 3, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB3->Fill();
                                    fTreeB3->Fill();
                                    fTreeSB3->Fill();
                                    fTreeSB->Fill();
                                }
                            }
                        } else {
                            
                            countb37++;
                      
                            S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t L2 = A2A1.Mag();
                                                
                            Double_t cost12 = dot1/(M1*L1);
                            Double_t cost21 = dot2/(M2*L2);
                              
                            Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                            Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                              
                            if (B < A) {
                                
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = 0;
                                fPosY_4 = 0;
                                fPosZ_4 = 0;
                                fPosX_4unc = 0;
                                fPosY_4unc = 0;
                                fPosZ_4unc = 0;
                                fPosX_5 = 0;
                                fPosY_5 = 0;
                                fPosZ_5 = 0;
                                fPosX_5unc = 0;
                                fPosY_5unc = 0;
                                fPosZ_5unc = 0;
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = 0;
                                fEnergyThunc = 0;
                                fEnergyFo = 0;
                                fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost12;
                                  
                                  fS = s;
                                  
                                  fECII->SetXYZT(i, s, 0, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreeB3->Fill();
                                  fTreeBB3->Fill();
                                  fTreeSB3->Fill();
                                  fTreeSB->Fill();
                                  
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc = energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                fPosX_4 = 0;
                                fPosY_4 = 0;
                                fPosZ_4 = 0;
                                fPosX_4unc = 0;
                                fPosY_4unc = 0;
                                fPosZ_4unc = 0;
                                fPosX_5 = 0;
                                fPosY_5 = 0;
                                fPosZ_5 = 0;
                                fPosX_5unc = 0;
                                fPosY_5unc = 0;
                                fPosZ_5unc = 0;
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost21;
                                  
                                fS = s;
                                fECII->SetXYZT(i, s, 3, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB3->Fill();
                                fTreeB3->Fill();
                                fTreeSB3->Fill();
                                fTreeSB->Fill();
                                  
                            } else {
                                
                                  
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = 0;
                                fPosY_4 = 0;
                                fPosZ_4 = 0;
                                fPosX_4unc = 0;
                                fPosY_4unc = 0;
                                fPosZ_4unc = 0;
                                fPosX_5 = 0;
                                fPosY_5 = 0;
                   fPosZ_5 = 0;
                   fPosX_5unc = 0;
                   fPosY_5unc = 0;
                   fPosZ_5unc = 0;
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost21;
                                  
                                fS = s;
                                
                                fECII->SetXYZT(i, s, 0, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreeB3->Fill();
                                fTreeBB3->Fill();
                                fTreeSB3->Fill();
                                fTreeSB->Fill();
                                  
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(2).position.X();
                                  fPosY_1 = pointReco->at(2).position.Y();
                                  fPosZ_1 = pointReco->at(2).position.Z();
                                  fPosX_1unc = pointReco->at(2).uncertainty.X();
                                  fPosY_1unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fEnergy_1 = energy->at(2).value;
                                  fEnergy_1unc =  energy->at(2).uncertainty;
                   
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                fPosX_4 = 0;
                                fPosY_4 = 0;
                                fPosZ_4 = 0;
                                fPosX_4unc = 0;
                   fPosY_4unc = 0;
                   fPosZ_4unc = 0;
                   fPosX_5 = 0;
                   fPosY_5 = 0;
                   fPosZ_5 = 0;
                   fPosX_5unc = 0;
                   fPosY_5unc = 0;
                   fPosZ_5unc = 0;
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc = energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc = energy->at(0).uncertainty;
                                  fEnergyTh = 0;
                   fEnergyThunc = 0;
                   fEnergyFo = 0;
                   fEnergyFounc = 0;
                                  fEnergy_2 = energy->at(1).value + energy->at(0).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(2).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2); 
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                                  fTheta = cost12;
                                  
                                  fS = s;
                                  fECII->SetXYZT(i, s, 3, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB3->Fill();
                                  fTreeB3->Fill();
                                  fTreeSB3->Fill();
                                  fTreeSB->Fill();
                            }
                        }

                    } else if (pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                        
                   
                  
                        countb310++;
                  /*
                          cout << "RealPosition1 :" <<" (x,y,z) = "<< "(" << RePos_e->at(0).X()<< "," << RePos_e->at(0).Y() << "," << RePos_e->at(0).Z() << ")" << endl;
                          cout << "RealPosition2 :" <<" (x,y,z) = "<< "(" << RePos_p->at(1).X()<< "," << RePos_p->at(1).Y() << "," << RePos_p->at(1).Z() << ")" << endl;
                          cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(2).position.X() << "," << pointReco->at(2).position.Y() << "," << pointReco->at(2).position.Z() << ")" << endl;
                          cout << "Position2 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl;
                          cout << "Position3 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl;
                          //cout << "Energy 1: " << energy->at(2).value << endl;
                          //cout << "Energy 2: " << energy->at(1).value << endl;
                          //cout << "Energy 3: " << energy->at(0).value << endl;
                          //cout << "TotEnergyClus_abs : " << energy->at(1).value + energy->at(0).value << endl;
                          //cout << "RealEnergy_e : " << fRealEnergy_e << " \t " << "RealEnergy_p : " << fRealEnergy_p << endl;
                          cout << "------------------------------------------------------------------------------------------" << endl;*/

                   
                    } else {
                        
                   
                      
                      /*
                          cout << "--background---one reason of decrease of total real number when adding other multiplicity numbers----"<<endl; 
                      
                          cout << "RealPosition1 :" <<" (x,y,z) = "<< "(" << RePos_e->at(0).X()<< "," << RePos_e->at(0).Y() << "," << RePos_e->at(0).Z() << ")" << endl;
                          cout << "RealPosition2 :" <<" (x,y,z) = "<< "(" << RePos_p->at(1).X()<< "," << RePos_p->at(1).Y() << "," << RePos_p->at(1).Z() << ")" << endl;
                          cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(2).position.X() << "," << pointReco->at(2).position.Y() << "," << pointReco->at(2).position.Z() << ")" << endl;
                          cout << "Position2 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl;
                          cout << "Position3 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl;
                          //cout << "Energy 1: " << energy->at(2).value << endl;
                          //cout << "Energy 2: " << energy->at(1).value << endl;
                          //cout << "Energy 3: " << energy->at(0).value << endl;
                          //cout << "TotEnergyClus_abs : " << energy->at(1).value + energy->at(0).value << endl;
                          //cout << "RealEnergy_e : " << fRealEnergy_e << " \t " << "RealEnergy_p : " << fRealEnergy_p << endl;
                          cout << "------------------------------------------------------------------------------------------" << endl;*/
                        countb39++;
                        continue;
                    }
              

             //RePos_p->clear();
             //RePos_e->clear(); 
                    countr3++;
                
                } else if (s==4) {
                    
                    if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) ||   isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z())) {
                   
                              
                            
              
                        countnan4++;
                        continue;
                    }
              
              
                    if (pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
/*                  
                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15)|| pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                       
                            countdisc3++;
                            continue;
                        }
 */                  

                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                            
                           countdisc3++;
                            continue; 
                            
                        }
                        if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                            countdisc3++;
                            continue; 
                        }
                        
                        if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                            countdisc3++;
                            continue;
                            
                        }
                        if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                            
                            countdisc3++;
                            continue;
                        }
                        if( pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                       
                            countdisc3++;
                            continue;
                        }


                          //if(pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2))) {
              //                   cout << "Position21 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl; 
              //                   cout << "Position22 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl; 
              //                   cout << "--------------------------cat-3----------------------------------" << endl;
                              
                        if (abs(RePos_e->at(0).X() - pointReco->at(3).position.X()) <= 2.6 && abs(RePos_e->at(0).Y() - pointReco->at(3).position.Y()) <= 10 && abs(RePos_e->at(0).Z() - pointReco->at(3).position.Z()) <= 2.6) {
//                        if (abs(RePos_e->at(0).X() - pointReco->at(3).position.X()) <= pointReco->at(3).uncertainty.X() && abs(RePos_e->at(0).Y() - pointReco->at(3).position.Y()) <= abs(pointReco->at(3).uncertainty.Y()) && abs(RePos_e->at(0).Z() - pointReco->at(3).position.Z()) <= pointReco->at(3).uncertainty.Z()) {    
                            
                          
//                            if ((abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  pointReco->at(0).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  abs(pointReco->at(0).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  pointReco->at(0).uncertainty.Z()) || (abs(RePos_p->at(1).X() - pointReco->at(1).position.X()) <= pointReco->at(1).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(1).position.Y()) <=  abs(pointReco->at(1).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(1).position.Z()) <= pointReco->at(1).uncertainty.Z()) || (abs(RePos_p->at(1).X() - pointReco->at(2).position.X()) <=  pointReco->at(2).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(2).position.Y()) <=  abs(pointReco->at(2).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(2).position.Z()) <=  pointReco->at(2).uncertainty.Z())) {
                            if ((abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  2.6) || (abs(RePos_p->at(1).X() - pointReco->at(1).position.X()) <= 2.6 && abs(RePos_p->at(1).Y() - pointReco->at(1).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(1).position.Z()) <= 2.6) || (abs(RePos_p->at(1).X() - pointReco->at(2).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(2).position.Y()) <= 10 && abs(RePos_p->at(1).Z() - pointReco->at(2).position.Z()) <= 2.6)) {    
                              
                              
                                 /* 
                                  cout << "RealPosition_e :" <<" (x,y,z) = "<< "(" << RePos_e->at(0).X() << "," << RePos_e->at(0).Y() << "," << RePos_e->at(0).Z() << ")" << endl;
                                  cout << "RealPosition_p :" <<" (x,y,z) = "<< "(" << RePos_p->at(1).X() << "," << RePos_p->at(1).Y() << "," << RePos_p->at(1).Z() << ")" << endl; 
                                  cout<< "-----------------------------------------------------" << endl;
                                  cout << "Position3 :" <<" (x,y,z) = "<< "(" << pointReco->at(3).position.X() << "," << pointReco->at(3).position.Y() << "," << pointReco->at(3).position.Z() << ")" << endl; 
                                  cout << "Position2 :" <<" (x,y,z) = "<< "(" << pointReco->at(2).position.X() << "," << pointReco->at(2).position.Y() << "," << pointReco->at(2).position.Z() << ")" << endl;
                                  cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(1).position.X() << "," << pointReco->at(1).position.Y() << "," << pointReco->at(1).position.Z() << ")" << endl;
                                  cout << "Position0 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl;
                                  cout<< "-----------------------------------------------------" << endl;*/
                                     
                                if(abs(fRealEnergy_e - energy->at(3).value) <=  0.12 * fRealEnergy_e) {
//                                if(abs(fRealEnergy_e - energy->at(3).value) <=  energy->at(3).uncertainty) {    
                                    
  
                                    if(abs(fRealEnergy_p - (energy->at(0).value + energy->at(1).value + energy->at(2).value)) <=  0.12 * fRealEnergy_p) {
//                                    if(abs(fRealEnergy_p - (energy->at(0).value + energy->at(1).value + energy->at(2).value)) <=  energy->at(0).uncertainty + energy->at(1).uncertainty + energy->at(2).uncertainty) {    
     //                                          cout << " passed ..... "<< endl;
                                 
                                        Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                        Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                        Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                              
                            
                                               
                                        S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                //S1A1.Print();
                                        S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                                        S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                                        A1A2 = S1A2 - S1A1;
                                                
                                        A2A1 = -A1A2;
                                                
                                        A1A3 = S1A3 - S1A1;
                                                
                                        A3A1 = -A1A3;
                                                            
                                        A2A3 = S1A3 -S1A2;
                                                
                                        A3A2 = -A2A3;
                                                
                                        Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                        Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                        Double_t M1 = S1A1.Mag();
                                        Double_t M2 = S1A2.Mag();
                                        Double_t L1 = A1A2.Mag();
                                        Double_t cost12 = dot1/(M1*L1);
                                        Double_t cost21 = dot2/(M2*L1);
                                                
                                                
                                        Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                        Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                        Double_t M3 = S1A3.Mag();
                              Double_t L2 = A1A3.Mag();
                                           
                              Double_t cost13 = dot3/(M1*L2);
                              Double_t cost31 = dot4/(M3*L2);
                                                
                              Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                              Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                              Double_t L3 = A2A3.Mag();
                                                
                              Double_t cost23 = dot5/(M2*L3);
                              Double_t cost32 = dot6/(M3*L3);
                                                
                                        Double_t T1 = (1 + cost12 )*(1 + cost13);
                                        Double_t T2 = (1 + cost21 )*(1 + cost23);
                                        Double_t T3 = (1 + cost31 )*(1 + cost32);
                                  
                                        
                                        if (C < B && C < A) { 
                                            
                                  
                                            count41++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc = energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(2).position.X();
                                  fPosY_2 = pointReco->at(2).position.Y();
                                  fPosZ_2 = pointReco->at(2).position.Z();
                                  fPosX_2unc = pointReco->at(2).uncertainty.X();
                                  fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = pointReco->at(0).position.X();
                                            fPosY_4 = pointReco->at(0).position.Y();
                                            fPosZ_4 = pointReco->at(0).position.Z();
                                            fPosX_4unc = pointReco->at(0).uncertainty.X();
                                            fPosY_4unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_5 = 0;
                                            fPosY_5 = 0;
                                            fPosZ_5 = 0;
                                            fPosX_5unc = 0;
                                            fPosY_5unc = 0;
                                            fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(2).value;
                                  fEnergyCunc = energy->at(2).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc = energy->at(1).uncertainty;
                                  fEnergyTh = energy->at(0).value;
                                            fEnergyThunc =  energy->at(0).uncertainty;
                                            fEnergyFo = 0;
                                            fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost12 )*(1 + cost13);
                                  fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS4->Fill();
                                            fTreeSB4->Fill();
                                            fTreeSB->Fill();
                                  
                                                   
                                            countb41++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost21)*(1 + cost23);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                      
                                  
                                            countb42++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(2).value;
                                  fEnergySeunc =  energy->at(2).uncertainty;
                                  fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost31)*(1 + cost32);
                                            fS = s;
                                            fECII->SetXYZT(i, s, 4, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB4->Fill();
                                            fTreeB4->Fill();
                                            fTreeSB4->Fill();
                                            fTreeSB->Fill();
                                       
                                        
                                        } else if (B < C && B < A) {
                                            
                                  
                                                  
                                            count42++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost21)*(1 + cost23);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 10, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreeS4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();        
                                   

                                  countb44++;
                              
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(2).position.X();
                                  fPosY_2 = pointReco->at(2).position.Y();
                                  fPosZ_2 = pointReco->at(2).position.Z();
                                  fPosX_2unc = pointReco->at(2).uncertainty.X();
                                  fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(2).value;
                                  fEnergyCunc =  energy->at(2).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost12 )*(1 + cost13);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();        
                                   
                                  countb45++;
                              
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                  fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(2).value;
                                  fEnergySeunc = energy->at(2).uncertainty;
                                  fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost31)*(1 + cost32);
                                            fS = s;
                                            fECII->SetXYZT(i, s, 4, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB4->Fill();
                                            fTreeB4->Fill();
                                            fTreeSB4->Fill();
                                            fTreeSB->Fill();
                                        
                                        } else {
                                            
                                  count43++;
                              
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                  fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(2).value;
                                  fEnergySeunc =  energy->at(2).uncertainty;
                                  fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost31)*(1 + cost32);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 10, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreeS4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                   
                                                   
                                  countb46++;
                              
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(2).position.X();
                                  fPosY_2 = pointReco->at(2).position.Y();
                                  fPosZ_2 = pointReco->at(2).position.Z();
                                  fPosX_2unc = pointReco->at(2).uncertainty.X();
                                  fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(2).value;
                                  fEnergyCunc =  energy->at(2).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost12 )*(1 + cost13);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                              
                                  
                                  countb47++;
                            
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost21)*(1 + cost23);
                                            fS = s;
                                            fECII->SetXYZT(i, s, 4, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB4->Fill();
                                            fTreeB4->Fill();
                                            fTreeSB4->Fill();
                                            fTreeSB->Fill();
                                        }
                                        
                                    } else {
                                        
                                          
                                        countb48++;
                                  
                                        S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                //S1A1.Print();
                                        S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                                        S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                                        A1A2 = S1A2 - S1A1;
                                                
                                        A2A1 = -A1A2;
                                                
                                        A1A3 = S1A3 - S1A1;
                                                
                                        A3A1 = -A1A3;
                                                
                                        A2A3 = S1A3 -S1A2;
                                                
                                        A3A2 = -A2A3;
                                                
                                        Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                        Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                        Double_t M1 = S1A1.Mag();
                                        Double_t M2 = S1A2.Mag();
                                        Double_t L1 = A1A2.Mag();
                                        Double_t cost12 = dot1/(M1*L1);
                                        Double_t cost21 = dot2/(M2*L1);
                                             
                                  Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                  Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                  Double_t M3 = S1A3.Mag();
                                  Double_t L2 = A1A3.Mag();
                                           
                                  Double_t cost13 = dot3/(M1*L2);
                                  Double_t cost31 = dot4/(M3*L2);
                                                
                                  Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                                  Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                                  Double_t L3 = A2A3.Mag();
                                                
                                  Double_t cost23 = dot5/(M2*L3);
                                  Double_t cost32 = dot6/(M3*L3);
                                  
                                  Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                  Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                  Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                                  
                                        if (C < A && C < B) {
                                            
                                      
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc = energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(2).position.X();
                                      fPosY_2 = pointReco->at(2).position.Y();
                                      fPosZ_2 = pointReco->at(2).position.Z();
                                      fPosX_2unc = pointReco->at(2).uncertainty.X();
                                      fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(1).position.X();
                                      fPosY_3 = pointReco->at(1).position.Y();
                                      fPosZ_3 = pointReco->at(1).position.Z();
                                      fPosX_3unc = pointReco->at(1).uncertainty.X();
                                      fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                      fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(2).value;
                                      fEnergyCunc =  energy->at(2).uncertainty;
                                      fEnergySe = energy->at(1).value;
                                      fEnergySeunc =  energy->at(1).uncertainty;
                                      fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost12 )*(1 + cost13);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 0, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreeBB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                     
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(1).position.X();
                                      fPosY_2 = pointReco->at(1).position.Y();
                                      fPosZ_2 = pointReco->at(1).position.Z();
                                      fPosX_2unc = pointReco->at(1).uncertainty.X();
                                      fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(0).position.X();
                                      fPosY_3 = pointReco->at(0).position.Y();
                                      fPosZ_3 = pointReco->at(0).position.Z();
                                      fPosX_3unc = pointReco->at(0).uncertainty.X();
                                      fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                      fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(1).value;
                                      fEnergyCunc =  energy->at(1).uncertainty;
                                      fEnergySe = energy->at(0).value;
                                      fEnergySeunc =  energy->at(0).uncertainty;
                                      fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost21)*(1 + cost23);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(0).position.X();
                                      fPosY_2 = pointReco->at(0).position.Y();
                                      fPosZ_2 = pointReco->at(0).position.Z();
                                      fPosX_2unc = pointReco->at(0).uncertainty.X();
                                      fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(2).position.X();
                                      fPosY_3 = pointReco->at(2).position.Y();
                                      fPosZ_3 = pointReco->at(2).position.Z();
                                      fPosX_3unc = pointReco->at(2).uncertainty.X();
                                      fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                      fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(0).value;
                                      fEnergyCunc =  energy->at(0).uncertainty;
                                      fEnergySe = energy->at(2).value;
                                      fEnergySeunc =  energy->at(2).uncertainty;
                                      fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost31)*(1 + cost32);
                                            fS = s;
                                            fECII->SetXYZT(i, s, 4, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB4->Fill();
                                            fTreeB4->Fill();
                                            fTreeSB4->Fill();
                                        fTreeSB->Fill();
                                        
                                        } else if (B < C && B < A) {
                                      
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(1).position.X();
                                      fPosY_2 = pointReco->at(1).position.Y();
                                      fPosZ_2 = pointReco->at(1).position.Z();
                                      fPosX_2unc = pointReco->at(1).uncertainty.X();
                                      fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(0).position.X();
                                      fPosY_3 = pointReco->at(0).position.Y();
                                      fPosZ_3 = pointReco->at(0).position.Z();
                                      fPosX_3unc = pointReco->at(0).uncertainty.X();
                                      fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                      fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(1).value;
                                      fEnergyCunc =  energy->at(1).uncertainty;
                                      fEnergySe = energy->at(0).value;
                                      fEnergySeunc =  energy->at(0).uncertainty;
                                      fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost21 )*(1 + cost23);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 0, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreeBB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(2).position.X();
                                      fPosY_2 = pointReco->at(2).position.Y();
                                      fPosZ_2 = pointReco->at(2).position.Z();
                                      fPosX_2unc = pointReco->at(2).uncertainty.X();
                                      fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(1).position.X();
                                      fPosY_3 = pointReco->at(1).position.Y();
                                      fPosZ_3 = pointReco->at(1).position.Z();
                                      fPosX_3unc = pointReco->at(1).uncertainty.X();
                                      fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                      fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(2).value;
                                      fEnergyCunc =  energy->at(2).uncertainty;
                                      fEnergySe = energy->at(1).value;
                                      fEnergySeunc =  energy->at(1).uncertainty;
                                      fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost12)*(1 + cost13);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                    
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(0).position.X();
                                      fPosY_2 = pointReco->at(0).position.Y();
                                      fPosZ_2 = pointReco->at(0).position.Z();
                                      fPosX_2unc = pointReco->at(0).uncertainty.X();
                                      fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(2).position.X();
                                      fPosY_3 = pointReco->at(2).position.Y();
                                      fPosZ_3 = pointReco->at(2).position.Z();
                                      fPosX_3unc = pointReco->at(2).uncertainty.X();
                                      fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                      fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(0).value;
                                      fEnergyCunc =  energy->at(0).uncertainty;
                                      fEnergySe = energy->at(2).value;
                                      fEnergySeunc =  energy->at(2).uncertainty;
                                      fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost31)*(1 + cost32);
                                            fS = s;
                                            fECII->SetXYZT(i, s, 4, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB4->Fill();
                                            fTreeB4->Fill();
                                            fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                        } else {
                                            
                                     
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(0).position.X();
                                      fPosY_2 = pointReco->at(0).position.Y();
                                      fPosZ_2 = pointReco->at(0).position.Z();
                                      fPosX_2unc = pointReco->at(0).uncertainty.X();
                                      fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(2).position.X();
                                      fPosY_3 = pointReco->at(2).position.Y();
                                      fPosZ_3 = pointReco->at(2).position.Z();
                                      fPosX_3unc = pointReco->at(2).uncertainty.X();
                                      fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                      fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(0).value;
                                      fEnergyCunc =  energy->at(0).uncertainty;
                                      fEnergySe = energy->at(2).value;
                                      fEnergySeunc =  energy->at(2).uncertainty;
                                      fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost31 )*(1 + cost32);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 0, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreeBB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(1).position.X();
                                      fPosY_2 = pointReco->at(1).position.Y();
                                      fPosZ_2 = pointReco->at(1).position.Z();
                                      fPosX_2unc = pointReco->at(1).uncertainty.X();
                                      fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(0).position.X();
                                      fPosY_3 = pointReco->at(0).position.Y();
                                      fPosZ_3 = pointReco->at(0).position.Z();
                                      fPosX_3unc = pointReco->at(0).uncertainty.X();
                                      fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                      fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(1).value;
                                      fEnergyCunc =  energy->at(1).uncertainty;
                                      fEnergySe = energy->at(0).value;
                                      fEnergySeunc =  energy->at(0).uncertainty;
                                      fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost21)*(1 + cost23);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(2).position.X();
                                      fPosY_2 = pointReco->at(2).position.Y();
                                      fPosZ_2 = pointReco->at(2).position.Z();
                                      fPosX_2unc = pointReco->at(2).uncertainty.X();
                                      fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(1).position.X();
                                      fPosY_3 = pointReco->at(1).position.Y();
                                      fPosZ_3 = pointReco->at(1).position.Z();
                                      fPosX_3unc = pointReco->at(1).uncertainty.X();
                                      fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                      fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(2).value;
                                      fEnergyCunc =  energy->at(2).uncertainty;
                                      fEnergySe = energy->at(1).value;
                                      fEnergySeunc =  energy->at(1).uncertainty;
                                      fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost12)*(1 + cost13);
                                            fS = s;
                                            fECII->SetXYZT(i, s, 4, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB4->Fill();
                                            fTreeB4->Fill();
                                            fTreeSB4->Fill();
                                            fTreeSB->Fill();
                                        }
                                    }
                                    
                                } else {
                                    
                                      
                                    countb49++;
                                  
                                    S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                                    S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                                    S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                                    A1A2 = S1A2 - S1A1;
                                                
                                    A2A1 = -A1A2;
                                                
                                    A1A3 = S1A3 - S1A1;
                                                
                                    A3A1 = -A1A3;
                                                
                                    A2A3 = S1A3 -S1A2;
                                                
                                    A3A2 = -A2A3;
                                                
                                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                    Double_t M1 = S1A1.Mag();
                                    Double_t M2 = S1A2.Mag();
                                    Double_t L1 = A1A2.Mag();
                                    Double_t cost12 = dot1/(M1*L1);
                                    Double_t cost21 = dot2/(M2*L1);
                                             
                                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                    Double_t M3 = S1A3.Mag();
                                    Double_t L2 = A1A3.Mag();
                                           
                                    Double_t cost13 = dot3/(M1*L2);
                                    Double_t cost31 = dot4/(M3*L2);
                                                
                                    Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                                    Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                                    Double_t L3 = A2A3.Mag();
                                                
                                    Double_t cost23 = dot5/(M2*L3);
                                    Double_t cost32 = dot6/(M3*L3);
                                  
                                    Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                    Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                    Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                                  
                                    if (C < A && C < B) {
                                        
                                      
                                        fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc = energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(2).position.X();
                                      fPosY_2 = pointReco->at(2).position.Y();
                                      fPosZ_2 = pointReco->at(2).position.Z();
                                      fPosX_2unc = pointReco->at(2).uncertainty.X();
                                      fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(1).position.X();
                                      fPosY_3 = pointReco->at(1).position.Y();
                                      fPosZ_3 = pointReco->at(1).position.Z();
                                      fPosX_3unc = pointReco->at(1).uncertainty.X();
                                      fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                      fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(2).value;
                                      fEnergyCunc = energy->at(2).uncertainty;
                                      fEnergySe = energy->at(1).value;
                                      fEnergySeunc = energy->at(1).uncertainty;
                                      fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost12 )*(1 + cost13);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 0, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreeBB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc = energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(1).position.X();
                                      fPosY_2 = pointReco->at(1).position.Y();
                                      fPosZ_2 = pointReco->at(1).position.Z();
                                      fPosX_2unc = pointReco->at(1).uncertainty.X();
                                      fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(0).position.X();
                                      fPosY_3 = pointReco->at(0).position.Y();
                                      fPosZ_3 = pointReco->at(0).position.Z();
                                      fPosX_3unc = pointReco->at(0).uncertainty.X();
                                      fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                      fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(1).value;
                                      fEnergyCunc = energy->at(1).uncertainty;
                                      fEnergySe = energy->at(0).value;
                                      fEnergySeunc = energy->at(0).uncertainty;
                                      fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost21)*(1 + cost23);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                            
                                      
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc = energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(0).position.X();
                                      fPosY_2 = pointReco->at(0).position.Y();
                                      fPosZ_2 = pointReco->at(0).position.Z();
                                      fPosX_2unc = pointReco->at(0).uncertainty.X();
                                      fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(2).position.X();
                                      fPosY_3 = pointReco->at(2).position.Y();
                                      fPosZ_3 = pointReco->at(2).position.Z();
                                      fPosX_3unc = pointReco->at(2).uncertainty.X();
                                      fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                      fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(0).value;
                                      fEnergyCunc = energy->at(0).uncertainty;
                                      fEnergySe = energy->at(2).value;
                                      fEnergySeunc = energy->at(2).uncertainty;
                                      fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost31)*(1 + cost32);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                    } else if (B < C && B < A) {
                                      
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(3).position.X();
                                        fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(1).position.X();
                                      fPosY_2 = pointReco->at(1).position.Y();
                                      fPosZ_2 = pointReco->at(1).position.Z();
                                      fPosX_2unc = pointReco->at(1).uncertainty.X();
                                      fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(0).position.X();
                                      fPosY_3 = pointReco->at(0).position.Y();
                                      fPosZ_3 = pointReco->at(0).position.Z();
                                      fPosX_3unc = pointReco->at(0).uncertainty.X();
                                      fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                      fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(1).value;
                                      fEnergyCunc =  energy->at(1).uncertainty;
                                      fEnergySe = energy->at(0).value;
                                      fEnergySeunc =  energy->at(0).uncertainty;
                                      fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost21 )*(1 + cost23);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 0, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreeBB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(2).position.X();
                                      fPosY_2 = pointReco->at(2).position.Y();
                                      fPosZ_2 = pointReco->at(2).position.Z();
                                      fPosX_2unc = pointReco->at(2).uncertainty.X();
                                      fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(1).position.X();
                                      fPosY_3 = pointReco->at(1).position.Y();
                                      fPosZ_3 = pointReco->at(1).position.Z();
                                      fPosX_3unc = pointReco->at(1).uncertainty.X();
                                      fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                      fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(2).value;
                                      fEnergyCunc =  energy->at(2).uncertainty;
                                      fEnergySe = energy->at(1).value;
                                      fEnergySeunc =  energy->at(1).uncertainty;
                                      fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost12)*(1 + cost13);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(0).position.X();
                                      fPosY_2 = pointReco->at(0).position.Y();
                                      fPosZ_2 = pointReco->at(0).position.Z();
                                      fPosX_2unc = pointReco->at(0).uncertainty.X();
                                      fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(2).position.X();
                                      fPosY_3 = pointReco->at(2).position.Y();
                                      fPosZ_3 = pointReco->at(2).position.Z();
                                      fPosX_3unc = pointReco->at(2).uncertainty.X();
                                      fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                      fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(0).value;
                                      fEnergyCunc = energy->at(0).uncertainty;
                                      fEnergySe = energy->at(2).value;
                                      fEnergySeunc = energy->at(2).uncertainty;
                                      fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost31)*(1 + cost32);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                    } else {
                                     
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc = energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(0).position.X();
                                      fPosY_2 = pointReco->at(0).position.Y();
                                      fPosZ_2 = pointReco->at(0).position.Z();
                                      fPosX_2unc = pointReco->at(0).uncertainty.X();
                                      fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(2).position.X();
                                      fPosY_3 = pointReco->at(2).position.Y();
                                      fPosZ_3 = pointReco->at(2).position.Z();
                                      fPosX_3unc = pointReco->at(2).uncertainty.X();
                                      fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                      fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(0).value;
                                      fEnergyCunc = energy->at(0).uncertainty;
                                      fEnergySe = energy->at(2).value;
                                      fEnergySeunc = energy->at(2).uncertainty;
                                      fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost31 )*(1 + cost32);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 0, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreeBB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                      
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc = energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(1).position.X();
                                      fPosY_2 = pointReco->at(1).position.Y();
                                      fPosZ_2 = pointReco->at(1).position.Z();
                                      fPosX_2unc = pointReco->at(1).uncertainty.X();
                                      fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(0).position.X();
                                      fPosY_3 = pointReco->at(0).position.Y();
                                      fPosZ_3 = pointReco->at(0).position.Z();
                                      fPosX_3unc = pointReco->at(0).uncertainty.X();
                                      fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                      fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(1).value;
                                      fEnergyCunc = energy->at(1).uncertainty;
                                      fEnergySe = energy->at(0).value;
                                      fEnergySeunc = energy->at(0).uncertainty;
                                      fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost21)*(1 + cost23);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                     
                                      
                                      fPriEnergy = PriEn;
                                      fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                      fPosX_1 = pointReco->at(3).position.X();
                                      fPosY_1 = pointReco->at(3).position.Y();
                                      fPosZ_1 = pointReco->at(3).position.Z();
                                      fPosX_1unc = pointReco->at(3).uncertainty.X();
                                      fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                      fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                      fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                      fEnergy_1 = energy->at(3).value;
                                      fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                      fPosX_2 = pointReco->at(2).position.X();
                                      fPosY_2 = pointReco->at(2).position.Y();
                                      fPosZ_2 = pointReco->at(2).position.Z();
                                      fPosX_2unc = pointReco->at(2).uncertainty.X();
                                      fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                      fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                      fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                      fPosX_3 = pointReco->at(1).position.X();
                                      fPosY_3 = pointReco->at(1).position.Y();
                                      fPosZ_3 = pointReco->at(1).position.Z();
                                      fPosX_3unc = pointReco->at(1).uncertainty.X();
                                      fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                      fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                      fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                      fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                      fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                      fEnergyC = energy->at(2).value;
                                      fEnergyCunc = energy->at(2).uncertainty;
                                      fEnergySe = energy->at(1).value;
                                      fEnergySeunc = energy->at(1).uncertainty;
                                      fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                      fEnergy_3 = fEnergy_1 + fEnergy_2;
                                      fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                      fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                      fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                      fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                      fTheta = (1 + cost12)*(1 + cost13);
                                      fS = s;
                                      fECII->SetXYZT(i, s, 4, 0);
                                      fEnDiff = fPriEnergy - fEnergy_1;
                                      fTreedB4->Fill();
                                      fTreeB4->Fill();
                                      fTreeSB4->Fill();
                                      fTreeSB->Fill();
                                    }
                                }

        // start of energy uncertainty //
                            } else {
                                
                              
                                  
                                countb410++;
                                  
                                S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                                S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                                S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                                A1A2 = S1A2 - S1A1;
                                                
                                A2A1 = -A1A2;
                                                
                                A1A3 = S1A3 - S1A1;
                                                
                                A3A1 = -A1A3;
                                               
                                A2A3 = S1A3 -S1A2;
                                                
                                A3A2 = -A2A3;
                                               
                              Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                              Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                              Double_t M1 = S1A1.Mag();
                              Double_t M2 = S1A2.Mag();
                              Double_t L1 = A1A2.Mag();
                              Double_t cost12 = dot1/(M1*L1);
                              Double_t cost21 = dot2/(M2*L1);
                                             
                              Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                              Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                              Double_t M3 = S1A3.Mag();
                              Double_t L2 = A1A3.Mag();
                                           
                              Double_t cost13 = dot3/(M1*L2);
                              Double_t cost31 = dot4/(M3*L2);
                                                
                              Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                              Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                              Double_t L3 = A2A3.Mag();
                                                
                              Double_t cost23 = dot5/(M2*L3);
                              Double_t cost32 = dot6/(M3*L3);
                                  
                              Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                              Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                              Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                              
  
                                if (C < A && C < B) {
                                    
                                  
                                    fPriEnergy = PriEn;  
                                    fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc = energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(2).position.X();
                                  fPosY_2 = pointReco->at(2).position.Y();
                                  fPosZ_2 = pointReco->at(2).position.Z();
                                  fPosX_2unc = pointReco->at(2).uncertainty.X();
                                  fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(2).value;
                                  fEnergyCunc = energy->at(2).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc = energy->at(1).uncertainty;
                                  fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost12 )*(1 + cost13);
                                  fS = s;
                                     
                                  fECII->SetXYZT(i, s, 0, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreeB4->Fill();
                                  fTreeBB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                      
                                  
                                  fPriEnergy = PriEn; 
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc = energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc = energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc = energy->at(0).uncertainty;
                                  fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost21)*(1 + cost23);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                 
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                  fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc = energy->at(0).uncertainty;
                                  fEnergySe = energy->at(2).value;
                                  fEnergySeunc = energy->at(2).uncertainty;
                                  fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost31)*(1 + cost32);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                  
                                } else if (B < C && B < A) {
                                  
                                    fPriEnergy = PriEn;  
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc =  energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc =  energy->at(0).uncertainty;
                                  fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost21 )*(1 + cost23);
                                  fS = s;
                                      
                                  fECII->SetXYZT(i, s, 0, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreeB4->Fill();
                                  fTreeBB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                  
                                  fPriEnergy = PriEn;  
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(2).position.X();
                                  fPosY_2 = pointReco->at(2).position.Y();
                                  fPosZ_2 = pointReco->at(2).position.Z();
                                  fPosX_2unc = pointReco->at(2).uncertainty.X();
                                  fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(2).value;
                                  fEnergyCunc =  energy->at(2).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost12)*(1 + cost13);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                  
                                  fPriEnergy = PriEn;  
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                  fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc =  energy->at(0).uncertainty;
                                  fEnergySe = energy->at(2).value;
                                  fEnergySeunc =  energy->at(2).uncertainty;
                                  fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost31)*(1 + cost32);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                    
                                  
                                } else {
                                    
                                  
                                    fPriEnergy = PriEn;  
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(0).position.X();
                                  fPosY_2 = pointReco->at(0).position.Y();
                                  fPosZ_2 = pointReco->at(0).position.Z();
                                  fPosX_2unc = pointReco->at(0).uncertainty.X();
                                  fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                  fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(0).value;
                                  fEnergyCunc = energy->at(0).uncertainty;
                                  fEnergySe = energy->at(2).value;
                                  fEnergySeunc = energy->at(2).uncertainty;
                                  fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(0).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost31 )*(1 + cost32);
                                  fS = s;
                                      
                                  fECII->SetXYZT(i, s, 0, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreeB4->Fill();
                                  fTreeBB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                      
                                 
                                  fPriEnergy = PriEn;
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc =  energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(1).position.X();
                                  fPosY_2 = pointReco->at(1).position.Y();
                                  fPosZ_2 = pointReco->at(1).position.Z();
                                  fPosX_2unc = pointReco->at(1).uncertainty.X();
                                  fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                  fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(1).value;
                                  fEnergyCunc = energy->at(1).uncertainty;
                                  fEnergySe = energy->at(0).value;
                                  fEnergySeunc = energy->at(0).uncertainty;
                                  fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(1).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost21)*(1 + cost23);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                      
                                
                                      
                                  fPriEnergy = PriEn;    
                                  fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                                  fPosX_1 = pointReco->at(3).position.X();
                                  fPosY_1 = pointReco->at(3).position.Y();
                                  fPosZ_1 = pointReco->at(3).position.Z();
                                  fPosX_1unc = pointReco->at(3).uncertainty.X();
                                  fPosY_1unc = pointReco->at(3).uncertainty.Y();
                                  fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                                  fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                  fEnergy_1 = energy->at(3).value;
                                  fEnergy_1unc = energy->at(3).uncertainty;
                    
                                  fPosX_2 = pointReco->at(2).position.X();
                                  fPosY_2 = pointReco->at(2).position.Y();
                                  fPosZ_2 = pointReco->at(2).position.Z();
                                  fPosX_2unc = pointReco->at(2).uncertainty.X();
                                  fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                  fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                  fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                  fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                                  fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                                  fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                                  fEnergyC = energy->at(2).value;
                                  fEnergyCunc = energy->at(2).uncertainty;
                                  fEnergySe = energy->at(1).value;
                                  fEnergySeunc =  energy->at(1).uncertainty;
                                  fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                                  fEnergy_3 = fEnergy_1 + fEnergy_2;
                                  fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                  fDiffEnergy = energy->at(2).value - energy->at(3).value;
                                  fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                  fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                                  fTheta = (1 + cost12)*(1 + cost13);
                                  fS = s;
                                  fECII->SetXYZT(i, s, 4, 0);
                                  fEnDiff = fPriEnergy - fEnergy_1;
                                  fTreedB4->Fill();
                                  fTreeB4->Fill();
                                  fTreeSB4->Fill();
                                  fTreeSB->Fill();
                                  
                                }
                            }   
                        } else {
                            
                          
                            countb411++;
                              
                            S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            A1A3 = S1A3 - S1A1;
                                                
                            A3A1 = -A1A3;
                                                
                            A2A3 = S1A3 -S1A2;
                                                
                            A3A2 = -A2A3;
                                                
                          Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                          Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                          Double_t M1 = S1A1.Mag();
                          Double_t M2 = S1A2.Mag();
                          Double_t L1 = A1A2.Mag();
                          Double_t cost12 = dot1/(M1*L1);
                          Double_t cost21 = dot2/(M2*L1);
                                             
                          Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                          Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                          Double_t M3 = S1A3.Mag();
                          Double_t L2 = A1A3.Mag();
                                           
                          Double_t cost13 = dot3/(M1*L2);
                          Double_t cost31 = dot4/(M3*L2);
                                                
                          Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                          Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                          Double_t L3 = A2A3.Mag();
                                                
                          Double_t cost23 = dot5/(M2*L3);
                          Double_t cost32 = dot6/(M3*L3);
                                  
                          Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                          Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                          Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                          
   
                            if (C < A && C < B) {
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc =  energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(2).position.X();
                              fPosY_2 = pointReco->at(2).position.Y();
                              fPosZ_2 = pointReco->at(2).position.Z();
                              fPosX_2unc = pointReco->at(2).uncertainty.X();
                              fPosY_2unc = pointReco->at(2).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                              fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(2).value;
                              fEnergyCunc = energy->at(2).uncertainty;
                              fEnergySe = energy->at(1).value;
                              fEnergySeunc = energy->at(1).uncertainty;
                              fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(2).value - energy->at(3).value;
                              fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost12 )*(1 + cost13);
                              fS = s;
                                      
                              fECII->SetXYZT(i, s, 0, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreeB4->Fill();
                              fTreeBB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                                      
                              
                                      
                              fPriEnergy = PriEn; 
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc =  energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(1).position.X();
                              fPosY_2 = pointReco->at(1).position.Y();
                              fPosZ_2 = pointReco->at(1).position.Z();
                              fPosX_2unc = pointReco->at(1).uncertainty.X();
                              fPosY_2unc = pointReco->at(1).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                              fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(1).value;
                              fEnergyCunc =  energy->at(1).uncertainty;
                              fEnergySe = energy->at(0).value;
                              fEnergySeunc =  energy->at(0).uncertainty;
                              fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(1).value - energy->at(3).value;
                              fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost21)*(1 + cost23);
                              fS = s;
                              fECII->SetXYZT(i, s, 4, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreedB4->Fill();
                              fTreeB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                                      
                              
                                      
                              fPriEnergy = PriEn;  
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc =  energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(0).position.X();
                              fPosY_2 = pointReco->at(0).position.Y();
                              fPosZ_2 = pointReco->at(0).position.Z();
                              fPosX_2unc = pointReco->at(0).uncertainty.X();
                              fPosY_2unc = pointReco->at(0).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                              fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(0).value;
                              fEnergyCunc = energy->at(0).uncertainty;
                              fEnergySe = energy->at(2).value;
                              fEnergySeunc = energy->at(2).uncertainty;
                              fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(0).value - energy->at(3).value;
                              fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost31)*(1 + cost32);
                              fS = s;
                              fECII->SetXYZT(i, s, 4, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreedB4->Fill();
                              fTreeB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                              
                            } else if (B < C && B < A) {
                              
                                fPriEnergy = PriEn;  
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc = energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(1).position.X();
                              fPosY_2 = pointReco->at(1).position.Y();
                              fPosZ_2 = pointReco->at(1).position.Z();
                              fPosX_2unc = pointReco->at(1).uncertainty.X();
                              fPosY_2unc = pointReco->at(1).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                              fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(1).value;
                              fEnergyCunc =  energy->at(1).uncertainty;
                              fEnergySe = energy->at(0).value;
                              fEnergySeunc =  energy->at(0).uncertainty;
                              fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(1).value - energy->at(3).value;
                              fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost21 )*(1 + cost23);
                              fS = s;
                                      
                              fECII->SetXYZT(i, s, 0, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreeB4->Fill();
                              fTreeBB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                                      
                             
                                      
                              fPriEnergy = PriEn;  
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc =  energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(2).position.X();
                              fPosY_2 = pointReco->at(2).position.Y();
                              fPosZ_2 = pointReco->at(2).position.Z();
                              fPosX_2unc = pointReco->at(2).uncertainty.X();
                              fPosY_2unc = pointReco->at(2).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                              fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(2).value;
                              fEnergyCunc = energy->at(2).uncertainty;
                              fEnergySe = energy->at(1).value;
                              fEnergySeunc = energy->at(1).uncertainty;
                              fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(2).value - energy->at(3).value;
                              fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost12)*(1 + cost13);
                              fS = s;
                              fECII->SetXYZT(i, s, 4, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreedB4->Fill();
                              fTreeB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                                      
                              
                              fPriEnergy = PriEn; 
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc = energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(0).position.X();
                              fPosY_2 = pointReco->at(0).position.Y();
                              fPosZ_2 = pointReco->at(0).position.Z();
                              fPosX_2unc = pointReco->at(0).uncertainty.X();
                              fPosY_2unc = pointReco->at(0).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                              fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(0).value;
                              fEnergyCunc = energy->at(0).uncertainty;
                              fEnergySe = energy->at(2).value;
                              fEnergySeunc = energy->at(2).uncertainty;
                               fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(0).value - energy->at(3).value;
                              fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost31)*(1 + cost32);
                              fS = s;
                              fECII->SetXYZT(i, s, 4, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreedB4->Fill();
                              fTreeB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                           
                              
                            } else {
                              
                              
                              fPriEnergy = PriEn;  
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc = energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(0).position.X();
                              fPosY_2 = pointReco->at(0).position.Y();
                              fPosZ_2 = pointReco->at(0).position.Z();
                              fPosX_2unc = pointReco->at(0).uncertainty.X();
                              fPosY_2unc = pointReco->at(0).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(2).position.X();
                                  fPosY_3 = pointReco->at(2).position.Y();
                                  fPosZ_3 = pointReco->at(2).position.Z();
                                  fPosX_3unc = pointReco->at(2).uncertainty.X();
                                  fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                              fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(0).value;
                              fEnergyCunc = energy->at(0).uncertainty;
                              fEnergySe = energy->at(2).value;
                              fEnergySeunc = energy->at(2).uncertainty;
                               fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(0).value - energy->at(3).value;
                              fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost31 )*(1 + cost32);
                              fS = s;
                                      
                              fECII->SetXYZT(i, s, 0, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreeB4->Fill();
                              fTreeBB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                              
                                      
                              fPriEnergy = PriEn;   
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc = energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(1).position.X();
                              fPosY_2 = pointReco->at(1).position.Y();
                              fPosZ_2 = pointReco->at(1).position.Z();
                              fPosX_2unc = pointReco->at(1).uncertainty.X();
                              fPosY_2unc = pointReco->at(1).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(0).position.X();
                                  fPosY_3 = pointReco->at(0).position.Y();
                                  fPosZ_3 = pointReco->at(0).position.Z();
                                  fPosX_3unc = pointReco->at(0).uncertainty.X();
                                  fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                              fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(1).value;
                              fEnergyCunc = energy->at(1).uncertainty;
                              fEnergySe = energy->at(0).value;
                              fEnergySeunc = energy->at(0).uncertainty;
                              fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(1).value - energy->at(3).value;
                              fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost21)*(1 + cost23);
                              fS = s;
                              fECII->SetXYZT(i, s, 4, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreedB4->Fill();
                              fTreeB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                                      
                              
                                      
                              fPriEnergy = PriEn; 
                              fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                              fPosX_1 = pointReco->at(3).position.X();
                              fPosY_1 = pointReco->at(3).position.Y();
                              fPosZ_1 = pointReco->at(3).position.Z();
                              fPosX_1unc = pointReco->at(3).uncertainty.X();
                              fPosY_1unc = pointReco->at(3).uncertainty.Y();
                              fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                              fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                              fEnergy_1 = energy->at(3).value;
                              fEnergy_1unc = energy->at(3).uncertainty;
                    
                              fPosX_2 = pointReco->at(2).position.X();
                              fPosY_2 = pointReco->at(2).position.Y();
                              fPosZ_2 = pointReco->at(2).position.Z();
                              fPosX_2unc = pointReco->at(2).uncertainty.X();
                              fPosY_2unc = pointReco->at(2).uncertainty.Y();
                              fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                              fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                              fPosX_3 = pointReco->at(1).position.X();
                                  fPosY_3 = pointReco->at(1).position.Y();
                                  fPosZ_3 = pointReco->at(1).position.Z();
                                  fPosX_3unc = pointReco->at(1).uncertainty.X();
                                  fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                  fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                              fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                              fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                              fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                              fEnergyC = energy->at(2).value;
                              fEnergyCunc = energy->at(2).uncertainty;
                              fEnergySe = energy->at(1).value;
                              fEnergySeunc = energy->at(1).uncertainty;
                               fEnergyTh = energy->at(0).value;
                    fEnergyThunc =  energy->at(0).uncertainty;
                    fEnergyFo = 0;
                    fEnergyFounc = 0;
                              fEnergy_3 = fEnergy_1 + fEnergy_2;
                              fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                              fDiffEnergy = energy->at(2).value - energy->at(3).value;
                              fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                              fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                              fTheta = (1 + cost12)*(1 + cost13);
                              fS = s;
                              fECII->SetXYZT(i, s, 4, 0);
                              fEnDiff = fPriEnergy - fEnergy_1;
                              fTreedB4->Fill();
                              fTreeB4->Fill();
                              fTreeSB4->Fill();
                              fTreeSB->Fill();
                            }
                        }


     ////////// end of energy uncertainty ////////////
                    } else if (pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                        
                   
                  
                        countb412++;
  
                    } else if (pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
                  
                        countb414++;
    
                    } else {
                        
                   
                                         /* 
                                         cout << "---------------------background-----------------------"<<endl; 
                                         cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(3).position.X() << "," << pointReco->at(3).position.Y() << "," << pointReco->at(3).position.Z() << ")" << endl;*/
                        countb418++;
                        continue;
                    }
                          
              //RePos_p->clear();
              //RePos_e->clear();        
                    countr4++;
               
                } else if (s==5) {
                    
                    
                    if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) ||   isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z()) || isnan(pointReco->at(4).position.X()) || isinf(pointReco->at(4).position.X()) || isnan(pointReco->at(4).position.Y()) || isinf(pointReco->at(4).position.Y()) || isnan(pointReco->at(4).position.Z()) || isinf(pointReco->at(4).position.Z())) {
                        
                   
                              
                            
              
                        countnan5++;
                        continue;
                    }
              
              
                    if (pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(3).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                        
                   
                   
/*                  
                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15)|| pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) || pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                       
                            countdisc4++;
                            continue;
                        }
 */                  

                        if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                             countdisc4++;
                            continue;
                            
                            
                        }
                        if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15){
                            countdisc4++;
                            continue;
                            
                        }
                        if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                            countdisc4++;
                            continue;
                        }
                        if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                            countdisc4++;
                            continue;
                        }
                        if (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) {
                            countdisc4++;
                            continue;
                            
                        }
                        
                        if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                       
                            countdisc4++;
                            continue;
                        }
                        


                        if (abs(RePos_e->at(0).X() - pointReco->at(4).position.X()) <= 2.6 && abs(RePos_e->at(0).Y() - pointReco->at(4).position.Y()) <= 10 && abs(RePos_e->at(0).Z() - pointReco->at(4).position.Z()) <= 2.6) {
//                        if (abs(RePos_e->at(0).X() - pointReco->at(4).position.X()) <= pointReco->at(4).uncertainty.X() && abs(RePos_e->at(0).Y() - pointReco->at(4).position.Y()) <= abs(pointReco->at(4).uncertainty.Y()) && abs(RePos_e->at(0).Z() - pointReco->at(4).position.Z()) <= pointReco->at(4).uncertainty.Z()) {    
      
                          
                            if ((abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  2.6) || (abs(RePos_p->at(1).X() - pointReco->at(1).position.X()) <= 2.6 && abs(RePos_p->at(1).Y() - pointReco->at(1).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(1).position.Z()) <= 2.6) || (abs(RePos_p->at(1).X() - pointReco->at(2).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(2).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(2).position.Z()) <=  2.6) || (abs(RePos_p->at(1).X() - pointReco->at(3).position.X()) <=  2.6 && abs(RePos_p->at(1).Y() - pointReco->at(3).position.Y()) <=  10 && abs(RePos_p->at(1).Z() - pointReco->at(3).position.Z()) <= 2.6)) {
//                            if ((abs(RePos_p->at(1).X() - pointReco->at(0).position.X()) <=  pointReco->at(0).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(0).position.Y()) <=  abs(pointReco->at(0).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(0).position.Z()) <=  pointReco->at(0).uncertainty.Z()) || (abs(RePos_p->at(1).X() - pointReco->at(1).position.X()) <= pointReco->at(1).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(1).position.Y()) <=  abs(pointReco->at(1).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(1).position.Z()) <= pointReco->at(1).uncertainty.Z()) || (abs(RePos_p->at(1).X() - pointReco->at(2).position.X()) <=  pointReco->at(2).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(2).position.Y()) <=  abs(pointReco->at(2).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(2).position.Z()) <=  pointReco->at(2).uncertainty.Z()) || (abs(RePos_p->at(1).X() - pointReco->at(3).position.X()) <=  pointReco->at(3).uncertainty.X() && abs(RePos_p->at(1).Y() - pointReco->at(3).position.Y()) <=  abs(pointReco->at(3).uncertainty.Y()) && abs(RePos_p->at(1).Z() - pointReco->at(3).position.Z()) <=  pointReco->at(3).uncertainty.Z())) {    
                              
     
                              
                                if(abs(fRealEnergy_e - energy->at(4).value) <=  0.12 * fRealEnergy_e) {
//                                if(abs(fRealEnergy_e - energy->at(4).value) <=  energy->at(4).uncertainty) {    
                                    
                        
                                    
                                    if(abs(fRealEnergy_p - (energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value)) <=  0.12 * fRealEnergy_p) {
                                        
                                        
                           
                                        Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                        Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                        Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                                        Double_t D = abs(RePos_p->at(1).X() - pointReco->at(3).position.X());
                              
   
                                       
                                        S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                                        S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                                        S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                                        S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                                        A1A2 = S1A2 - S1A1;
                                                
                                        A2A1 = -A1A2;
                                                
                                        A1A3 = S1A3 - S1A1;
                                                
                                        A3A1 = -A1A3;
                    
                                        A1A4 = S1A4 - S1A1;
                                                
                                        A4A1 = -A1A4;
                                                
                                        A2A3 = S1A3 -S1A2;
                                                
                                        A3A2 = -A2A3;
                    
                                        A2A4 = S1A4 -S1A2;
                                                
                                        A4A2 = -A2A4;
                    
                                        A3A4 = S1A4 -S1A3;
                                                
                                        A4A3 = -A3A4;
                                                
                                        Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                        Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                        Double_t M1 = S1A1.Mag();
                                        Double_t M2 = S1A2.Mag();
                                        Double_t L1 = A1A2.Mag();
                                        Double_t cost12 = dot1/(M1*L1);
                                        Double_t cost21 = dot2/(M2*L1);
                                                
                                        Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                        Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                        Double_t M3 = S1A3.Mag();
                                        Double_t L2 = A1A3.Mag();
                                           
                                        Double_t cost13 = dot3/(M1*L2);
                                        Double_t cost31 = dot4/(M3*L2);
                    
                                        Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                                        Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                                        Double_t M4 = S1A4.Mag();
                                        Double_t L3 = A1A4.Mag();
                                           
                                        Double_t cost14 = dot5/(M1*L3);
                                        Double_t cost41 = dot6/(M4*L3);
                                                
                                        Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                                        Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                                        Double_t L4 = A2A3.Mag();
                                                
                                        Double_t cost23 = dot7/(M2*L4);
                                        Double_t cost32 = dot8/(M3*L4);
                    
                                        Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                                        Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                                        Double_t L5 = A2A4.Mag();
                                                
                                        Double_t cost24 = dot9/(M2*L5);
                                        Double_t cost42 = dot10/(M4*L5);
                    
                                        Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                                        Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                                        Double_t L6 = A3A4.Mag();
                                                
                                        Double_t cost34 = dot11/(M3*L6);
                                        Double_t cost43 = dot12/(M4*L6);
                                  
                                        Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                                        Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                                        Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                                        Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);
                                       
                                        if (D < B && D < A && D < C) {
                                            
                                  
                                            count51++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc = energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc = energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                            countb51++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc =  energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                            countb52++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                            countb53++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc =  energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                          
                                        } else if (C < B && C < A && C < D) {
                                            
                                            
                                            count52++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc = energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc = energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                            countb54++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc =  energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc =  energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                            countb55++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                            countb56++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc =  energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                        } else if (B < C && B < A && B < D) {
                                            
                                            
                                            count53++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc = energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc = energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                            countb57++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc =  energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc =  energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                            countb58++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc =  energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                            countb59++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc =  energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                            
                                        } else {
                                            
                                            count54++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc = energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc = energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 10, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeS5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                                  
                                            countb510++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc =  energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc =  energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                            countb511++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc =  energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                            countb512++;
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                        
                                        }
                                  
                                    } else {
                                        
                                        
                                        countb513++;
                                        
                                        Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                        Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                        Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                                        Double_t D = abs(RePos_p->at(1).X() - pointReco->at(3).position.X());
                              
   
                                       
                                        S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                                        S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                                        S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                                        S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                                        A1A2 = S1A2 - S1A1;
                                                
                                        A2A1 = -A1A2;
                                                
                                        A1A3 = S1A3 - S1A1;
                                                
                                        A3A1 = -A1A3;
                    
                                        A1A4 = S1A4 - S1A1;
                                                
                                        A4A1 = -A1A4;
                                                
                                        A2A3 = S1A3 -S1A2;
                                                
                                        A3A2 = -A2A3;
                    
                                        A2A4 = S1A4 -S1A2;
                                                
                                        A4A2 = -A2A4;
                    
                                        A3A4 = S1A4 -S1A3;
                                                
                                        A4A3 = -A3A4;
                                                
                                        Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                        Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                        Double_t M1 = S1A1.Mag();
                                        Double_t M2 = S1A2.Mag();
                                        Double_t L1 = A1A2.Mag();
                                        Double_t cost12 = dot1/(M1*L1);
                                        Double_t cost21 = dot2/(M2*L1);
                                                
                                        Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                        Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                        Double_t M3 = S1A3.Mag();
                                        Double_t L2 = A1A3.Mag();
                                           
                                        Double_t cost13 = dot3/(M1*L2);
                                        Double_t cost31 = dot4/(M3*L2);
                    
                                        Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                                        Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                                        Double_t M4 = S1A4.Mag();
                                        Double_t L3 = A1A4.Mag();
                                           
                                        Double_t cost14 = dot5/(M1*L3);
                                        Double_t cost41 = dot6/(M4*L3);
                                                
                                        Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                                        Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                                        Double_t L4 = A2A3.Mag();
                                                
                                        Double_t cost23 = dot7/(M2*L4);
                                        Double_t cost32 = dot8/(M3*L4);
                        
                                        Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                                        Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                                        Double_t L5 = A2A4.Mag();
                                                
                                        Double_t cost24 = dot9/(M2*L5);
                                        Double_t cost42 = dot10/(M4*L5);
                    
                                        Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                                        Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                                        Double_t L6 = A3A4.Mag();
                                                
                                        Double_t cost34 = dot11/(M3*L6);
                                        Double_t cost43 = dot12/(M4*L6);
                                  
                                        Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                                        Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                                        Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                                        Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);
                                       
                                        if (D < B && D < A && D < C) { 
                                  
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc = energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc = energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 0, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeBB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                               
                                            
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc =  energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                           
                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                       
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc =  energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                       
                                        } else if (C < B && C < A && C < D) {
                                            
                                            
                                            
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc = energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc = energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 0, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeBB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                           
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc =  energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc =  energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                          
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc =  energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                         
                                        } else if (B < C && B < A && B < D) {
                                            
                                            
                                           
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc = energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc = energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 0, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeBB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                           
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc =  energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc =  energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                           
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc =  energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                            
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc =  energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc =  energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                         
                                        } else {
                                            
                                           
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc = energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(0).position.X();
                                            fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                            fPosX_2unc = pointReco->at(0).uncertainty.X();
                                            fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                            fPosZ_3 = pointReco->at(3).position.Z();
                                            fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_4 = pointReco->at(2).position.X();
                                            fPosY_4 = pointReco->at(2).position.Y();
                                            fPosZ_4 = pointReco->at(2).position.Z();
                                            fPosX_4unc = pointReco->at(2).uncertainty.X();
                                            fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_5 = pointReco->at(1).position.X();
                                            fPosY_5 = pointReco->at(1).position.Y();
                                            fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                            fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(0).value;
                                            fEnergyCunc = energy->at(0).uncertainty;
                                            fEnergySe = energy->at(3).value;
                                            fEnergySeunc = energy->at(3).uncertainty;
                                            fEnergyTh = energy->at(2).value;
                                            fEnergyThunc =  energy->at(2).uncertainty;
                                            fEnergyFo = energy->at(1).value;
                                            fEnergyFounc =  energy->at(1).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                            fTheta = T4;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 0, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreeBB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                  
                                            
                                                  
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(3).position.X();
                                            fPosY_2 = pointReco->at(3).position.Y();
                                            fPosZ_2 = pointReco->at(3).position.Z();
                                            fPosX_2unc = pointReco->at(3).uncertainty.X();
                                            fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(2).position.X();
                                            fPosY_3 = pointReco->at(2).position.Y();
                                            fPosZ_3 = pointReco->at(2).position.Z();
                                            fPosX_3unc = pointReco->at(2).uncertainty.X();
                                            fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                            fPosX_4 = pointReco->at(1).position.X();
                                            fPosY_4 = pointReco->at(1).position.Y();
                                            fPosZ_4 = pointReco->at(1).position.Z();
                                            fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(3).value;
                                            fEnergyCunc =  energy->at(3).uncertainty;
                                            fEnergySe = energy->at(2).value;
                                            fEnergySeunc =  energy->at(2).uncertainty;
                                            fEnergyTh = energy->at(1).value;
                                            fEnergyThunc =  energy->at(1).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                            fTheta = T1;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                      
                                  
                                           
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(2).position.X();
                                            fPosY_2 = pointReco->at(2).position.Y();
                                            fPosZ_2 = pointReco->at(2).position.Z();
                                            fPosX_2unc = pointReco->at(2).uncertainty.X();
                                            fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(1).position.X();
                                            fPosY_3 = pointReco->at(1).position.Y();
                                            fPosZ_3 = pointReco->at(1).position.Z();
                                            fPosX_3unc = pointReco->at(1).uncertainty.X();
                                            fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                            fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(2).value;
                                            fEnergyCunc =  energy->at(2).uncertainty;
                                            fEnergySe = energy->at(1).value;
                                            fEnergySeunc =  energy->at(1).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(0).value;
                                            fEnergyFounc =  energy->at(0).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                            fTheta = T2;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                            
                                           
                              
                                            fPriEnergy = PriEn;
                                            fPos_eX = RePos_e->at(0).X();
                                            fPos_eY = RePos_e->at(0).Y();
                                            fPos_eZ = RePos_e->at(0).Z();
                                            fPos_pX = RePos_p->at(1).X();
                                            fPos_pY = RePos_p->at(1).Y();
                                            fPos_pZ = RePos_p->at(1).Z();
                                            fRealEnergy_e = fRealEnergy_e;
                                            fRealEnergy_p = fRealEnergy_p;
                                            fPosX_1 = pointReco->at(4).position.X();
                                            fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                            fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                            fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                            fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                            fEnergy_1 = energy->at(4).value;
                                            fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                            fPosX_2 = pointReco->at(1).position.X();
                                            fPosY_2 = pointReco->at(1).position.Y();
                                            fPosZ_2 = pointReco->at(1).position.Z();
                                            fPosX_2unc = pointReco->at(1).uncertainty.X();
                                            fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                            fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                            fPosX_3 = pointReco->at(0).position.X();
                                            fPosY_3 = pointReco->at(0).position.Y();
                                            fPosZ_3 = pointReco->at(0).position.Z();
                                            fPosX_3unc = pointReco->at(0).uncertainty.X();
                                            fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                            fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                            fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                            fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                            fPosX_5 = pointReco->at(2).position.X();
                                            fPosY_5 = pointReco->at(2).position.Y();
                                            fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                            fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                            fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                            fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                            fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                            fEnergyC = energy->at(1).value;
                                            fEnergyCunc =  energy->at(1).uncertainty;
                                            fEnergySe = energy->at(0).value;
                                            fEnergySeunc =  energy->at(0).uncertainty;
                                            fEnergyTh = energy->at(3).value;
                                            fEnergyThunc =  energy->at(3).uncertainty;
                                            fEnergyFo = energy->at(2).value;
                                            fEnergyFounc =  energy->at(2).uncertainty;
                                            fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                            fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                            fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                            fTheta = T3;
                                            fS = s;
                                            fECII->SetXYZT(i, s, 5, 0);
                                            fEnDiff = fPriEnergy - fEnergy_1;
                                            fTreedB5->Fill();
                                            fTreeB5->Fill();
                                            fTreeSB5->Fill();
                                            fTreeSB->Fill();
                                       
                                        }
                                    }
                                        
                                } else {
                                    
                                  
                                    countb514++;
                                        
                                    Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                    Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                    Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                                    Double_t D = abs(RePos_p->at(1).X() - pointReco->at(3).position.X());
                              
   
                                       
                                    S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                                    S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                                    S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                                    S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                                    A1A2 = S1A2 - S1A1;
                                                
                                    A2A1 = -A1A2;
                                                
                                    A1A3 = S1A3 - S1A1;
                                            
                                    A3A1 = -A1A3;
                    
                                    A1A4 = S1A4 - S1A1;
                                                
                                    A4A1 = -A1A4;
                                                
                                    A2A3 = S1A3 -S1A2;
                                                
                                    A3A2 = -A2A3;
                    
                                    A2A4 = S1A4 -S1A2;
                                                
                                    A4A2 = -A2A4;
                    
                                    A3A4 = S1A4 -S1A3;
                                                
                                    A4A3 = -A3A4;
                                                
                                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                    Double_t M1 = S1A1.Mag();
                                    Double_t M2 = S1A2.Mag();
                                    Double_t L1 = A1A2.Mag();
                                    Double_t cost12 = dot1/(M1*L1);
                                    Double_t cost21 = dot2/(M2*L1);
                                            
                                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                    Double_t M3 = S1A3.Mag();
                                    Double_t L2 = A1A3.Mag();
                                           
                                    Double_t cost13 = dot3/(M1*L2);
                                    Double_t cost31 = dot4/(M3*L2);
                    
                                    Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                                    Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                                    Double_t M4 = S1A4.Mag();
                                    Double_t L3 = A1A4.Mag();
                                           
                                    Double_t cost14 = dot5/(M1*L3);
                                    Double_t cost41 = dot6/(M4*L3);
                                                
                                    Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                                    Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                                    Double_t L4 = A2A3.Mag();
                                                
                                    Double_t cost23 = dot7/(M2*L4);
                                    Double_t cost32 = dot8/(M3*L4);
                    
                                    Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                                    Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                                    Double_t L5 = A2A4.Mag();
                                                
                                    Double_t cost24 = dot9/(M2*L5);
                                    Double_t cost42 = dot10/(M4*L5);
                    
                                    Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                                    Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                                    Double_t L6 = A3A4.Mag();
                                                
                                    Double_t cost34 = dot11/(M3*L6);
                                    Double_t cost43 = dot12/(M4*L6);
                                  
                                    Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                                    Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                                    Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                                    Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);
                                       
                                    if (D < B && D < A && D < C) {
                                        
                                  
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc = energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(3).position.X();
                                        fPosY_2 = pointReco->at(3).position.Y();
                                        fPosZ_2 = pointReco->at(3).position.Z();
                                        fPosX_2unc = pointReco->at(3).uncertainty.X();
                                        fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(2).position.X();
                                        fPosY_3 = pointReco->at(2).position.Y();
                                        fPosZ_3 = pointReco->at(2).position.Z();
                                        fPosX_3unc = pointReco->at(2).uncertainty.X();
                                        fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_4 = pointReco->at(1).position.X();
                                        fPosY_4 = pointReco->at(1).position.Y();
                                        fPosZ_4 = pointReco->at(1).position.Z();
                                        fPosX_4unc = pointReco->at(1).uncertainty.X();
                                        fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                        fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(3).value;
                                        fEnergyCunc = energy->at(3).uncertainty;
                                        fEnergySe = energy->at(2).value;
                                        fEnergySeunc = energy->at(2).uncertainty;
                                        fEnergyTh = energy->at(1).value;
                                        fEnergyThunc =  energy->at(1).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                        fTheta = T1;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 0, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreeBB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                  
                                                 
                                            
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(2).position.X();
                                        fPosY_2 = pointReco->at(2).position.Y();
                                        fPosZ_2 = pointReco->at(2).position.Z();
                                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(1).position.X();
                                        fPosY_3 = pointReco->at(1).position.Y();
                                        fPosZ_3 = pointReco->at(1).position.Z();
                                        fPosX_3unc = pointReco->at(1).uncertainty.X();
                                        fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                        fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(2).value;
                                        fEnergyCunc =  energy->at(2).uncertainty;
                                        fEnergySe = energy->at(1).value;
                                        fEnergySeunc =  energy->at(1).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                        fTheta = T2;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                      
                                  
                                           
                  
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                
                                        fPosX_2 = pointReco->at(1).position.X();
                                        fPosY_2 = pointReco->at(1).position.Y();
                                        fPosZ_2 = pointReco->at(1).position.Z();
                                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(0).position.X();
                                        fPosY_3 = pointReco->at(0).position.Y();
                                        fPosZ_3 = pointReco->at(0).position.Z();
                                        fPosX_3unc = pointReco->at(0).uncertainty.X();
                                        fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(2).position.X();
                                        fPosY_5 = pointReco->at(2).position.Y();
                                        fPosZ_5 = pointReco->at(2).position.Z();
                                        fPosX_5unc = pointReco->at(2).uncertainty.X();
                                        fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(1).value;
                                        fEnergyCunc =  energy->at(1).uncertainty;
                                        fEnergySe = energy->at(0).value;
                                        fEnergySeunc =  energy->at(0).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(2).value;
                                        fEnergyFounc =  energy->at(2).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                        fTheta = T3;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                       
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                
                                        fPosX_2 = pointReco->at(0).position.X();
                                        fPosY_2 = pointReco->at(0).position.Y();
                                        fPosZ_2 = pointReco->at(0).position.Z();
                                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(3).position.X();
                                        fPosY_3 = pointReco->at(3).position.Y();
                                        fPosZ_3 = pointReco->at(3).position.Z();
                                        fPosX_3unc = pointReco->at(3).uncertainty.X();
                                        fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_4 = pointReco->at(2).position.X();
                                        fPosY_4 = pointReco->at(2).position.Y();
                                        fPosZ_4 = pointReco->at(2).position.Z();
                                        fPosX_4unc = pointReco->at(2).uncertainty.X();
                                        fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_5 = pointReco->at(1).position.X();
                                        fPosY_5 = pointReco->at(1).position.Y();
                                        fPosZ_5 = pointReco->at(1).position.Z();
                                        fPosX_5unc = pointReco->at(1).uncertainty.X();
                                        fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(0).value;
                                        fEnergyCunc =  energy->at(0).uncertainty;
                                        fEnergySe = energy->at(3).value;
                                        fEnergySeunc =  energy->at(3).uncertainty;
                                        fEnergyTh = energy->at(2).value;
                                        fEnergyThunc =  energy->at(2).uncertainty;
                                        fEnergyFo = energy->at(1).value;
                                        fEnergyFounc =  energy->at(1).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                        fTheta = T4;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                    } else if (C < B && C < A && C < D) {
   
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc = energy->at(4).uncertainty;
                
                                        fPosX_2 = pointReco->at(2).position.X();
                                        fPosY_2 = pointReco->at(2).position.Y();
                                        fPosZ_2 = pointReco->at(2).position.Z();
                                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(1).position.X();
                                        fPosY_3 = pointReco->at(1).position.Y();
                                        fPosZ_3 = pointReco->at(1).position.Z();
                                        fPosX_3unc = pointReco->at(1).uncertainty.X();
                                        fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                        fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(2).value;
                                        fEnergyCunc = energy->at(2).uncertainty;
                                        fEnergySe = energy->at(1).value;
                                        fEnergySeunc = energy->at(1).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                        fTheta = T2;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 0, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreeBB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                        
                                
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(3).position.X();
                                        fPosY_2 = pointReco->at(3).position.Y();
                                        fPosZ_2 = pointReco->at(3).position.Z();
                                        fPosX_2unc = pointReco->at(3).uncertainty.X();
                                        fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(2).position.X();
                                        fPosY_3 = pointReco->at(2).position.Y();
                                        fPosZ_3 = pointReco->at(2).position.Z();
                                        fPosX_3unc = pointReco->at(2).uncertainty.X();
                                        fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_4 = pointReco->at(1).position.X();
                                        fPosY_4 = pointReco->at(1).position.Y();
                                        fPosZ_4 = pointReco->at(1).position.Z();
                                        fPosX_4unc = pointReco->at(1).uncertainty.X();
                                        fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                        fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(3).value;
                                        fEnergyCunc =  energy->at(3).uncertainty;
                                        fEnergySe = energy->at(2).value;
                                        fEnergySeunc =  energy->at(2).uncertainty;
                                        fEnergyTh = energy->at(1).value;
                                        fEnergyThunc =  energy->at(1).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                        fTheta = T1;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                
                                  
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(1).position.X();
                                        fPosY_2 = pointReco->at(1).position.Y();
                                        fPosZ_2 = pointReco->at(1).position.Z();
                                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(0).position.X();
                                        fPosY_3 = pointReco->at(0).position.Y();
                                        fPosZ_3 = pointReco->at(0).position.Z();
                                        fPosX_3unc = pointReco->at(0).uncertainty.X();
                                        fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(2).position.X();
                                        fPosY_5 = pointReco->at(2).position.Y();
                                        fPosZ_5 = pointReco->at(2).position.Z();
                                        fPosX_5unc = pointReco->at(2).uncertainty.X();
                                        fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(1).value;
                                        fEnergyCunc =  energy->at(1).uncertainty;
                                        fEnergySe = energy->at(0).value;
                                        fEnergySeunc =  energy->at(0).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(2).value;
                                        fEnergyFounc =  energy->at(2).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                        fTheta = T3;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                          
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                
                                        fPosX_2 = pointReco->at(0).position.X();
                                        fPosY_2 = pointReco->at(0).position.Y();
                                        fPosZ_2 = pointReco->at(0).position.Z();
                                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(3).position.X();
                                        fPosY_3 = pointReco->at(3).position.Y();
                                        fPosZ_3 = pointReco->at(3).position.Z();
                                        fPosX_3unc = pointReco->at(3).uncertainty.X();
                                        fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_4 = pointReco->at(2).position.X();
                                        fPosY_4 = pointReco->at(2).position.Y();
                                        fPosZ_4 = pointReco->at(2).position.Z();
                                        fPosX_4unc = pointReco->at(2).uncertainty.X();
                                        fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_5 = pointReco->at(1).position.X();
                                        fPosY_5 = pointReco->at(1).position.Y();
                                        fPosZ_5 = pointReco->at(1).position.Z();
                                        fPosX_5unc = pointReco->at(1).uncertainty.X();
                                        fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(0).value;
                                        fEnergyCunc =  energy->at(0).uncertainty;
                                        fEnergySe = energy->at(3).value;
                                        fEnergySeunc =  energy->at(3).uncertainty;
                                        fEnergyTh = energy->at(2).value;
                                        fEnergyThunc =  energy->at(2).uncertainty;
                                        fEnergyFo = energy->at(1).value;
                                        fEnergyFounc =  energy->at(1).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                        fTheta = T4;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                    } else if (B < C && B < A && B < D) {
                                            
                                            
                                           
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc = energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(1).position.X();
                                        fPosY_2 = pointReco->at(1).position.Y();
                                        fPosZ_2 = pointReco->at(1).position.Z();
                                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(0).position.X();
                                        fPosY_3 = pointReco->at(0).position.Y();
                                        fPosZ_3 = pointReco->at(0).position.Z();
                                        fPosX_3unc = pointReco->at(0).uncertainty.X();
                                        fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                            fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(2).position.X();
                                        fPosY_5 = pointReco->at(2).position.Y();
                                        fPosZ_5 = pointReco->at(2).position.Z();
                                            fPosX_5unc = pointReco->at(2).uncertainty.X();
                                        fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(1).value;
                                        fEnergyCunc = energy->at(1).uncertainty;
                                        fEnergySe = energy->at(0).value;
                                        fEnergySeunc = energy->at(0).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(2).value;
                                        fEnergyFounc =  energy->at(2).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                        fTheta = T3;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 0, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreeBB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                  
                                                  
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(3).position.X();
                                        fPosY_2 = pointReco->at(3).position.Y();
                                        fPosZ_2 = pointReco->at(3).position.Z();
                                        fPosX_2unc = pointReco->at(3).uncertainty.X();
                                        fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(2).position.X();
                                        fPosY_3 = pointReco->at(2).position.Y();
                                        fPosZ_3 = pointReco->at(2).position.Z();
                                        fPosX_3unc = pointReco->at(2).uncertainty.X();
                                        fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_4 = pointReco->at(1).position.X();
                                        fPosY_4 = pointReco->at(1).position.Y();
                                        fPosZ_4 = pointReco->at(1).position.Z();
                                        fPosX_4unc = pointReco->at(1).uncertainty.X();
                                            fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                            fPosZ_5 = pointReco->at(0).position.Z();
                                        fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(3).value;
                                        fEnergyCunc =  energy->at(3).uncertainty;
                                        fEnergySe = energy->at(2).value;
                                        fEnergySeunc =  energy->at(2).uncertainty;
                                        fEnergyTh = energy->at(1).value;
                                        fEnergyThunc =  energy->at(1).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                        fTheta = T1;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                      
                                  
                                           
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                            fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(2).position.X();
                                        fPosY_2 = pointReco->at(2).position.Y();
                                        fPosZ_2 = pointReco->at(2).position.Z();
                                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(1).position.X();
                                        fPosY_3 = pointReco->at(1).position.Y();
                                        fPosZ_3 = pointReco->at(1).position.Z();
                                        fPosX_3unc = pointReco->at(1).uncertainty.X();
                                        fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                            fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                            fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(2).value;
                                        fEnergyCunc =  energy->at(2).uncertainty;
                                        fEnergySe = energy->at(1).value;
                                        fEnergySeunc =  energy->at(1).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                        fTheta = T2;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                            
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(0).position.X();
                                        fPosY_2 = pointReco->at(0).position.Y();
                                        fPosZ_2 = pointReco->at(0).position.Z();
                                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(3).position.X();
                                        fPosY_3 = pointReco->at(3).position.Y();
                                        fPosZ_3 = pointReco->at(3).position.Z();
                                        fPosX_3unc = pointReco->at(3).uncertainty.X();
                                            fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_4 = pointReco->at(2).position.X();
                                        fPosY_4 = pointReco->at(2).position.Y();
                                        fPosZ_4 = pointReco->at(2).position.Z();
                                        fPosX_4unc = pointReco->at(2).uncertainty.X();
                                        fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_5 = pointReco->at(1).position.X();
                                        fPosY_5 = pointReco->at(1).position.Y();
                                        fPosZ_5 = pointReco->at(1).position.Z();
                                        fPosX_5unc = pointReco->at(1).uncertainty.X();
                                        fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(0).value;
                                        fEnergyCunc =  energy->at(0).uncertainty;
                                        fEnergySe = energy->at(3).value;
                                        fEnergySeunc =  energy->at(3).uncertainty;
                                        fEnergyTh = energy->at(2).value;
                                        fEnergyThunc =  energy->at(2).uncertainty;
                                        fEnergyFo = energy->at(1).value;
                                        fEnergyFounc =  energy->at(1).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                            fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                            fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                        fTheta = T4;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                    } else {
                                            
                                           
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                            fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc = energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(0).position.X();
                                        fPosY_2 = pointReco->at(0).position.Y();
                                            fPosZ_2 = pointReco->at(0).position.Z();
                                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(3).position.X();
                                            fPosY_3 = pointReco->at(3).position.Y();
                                        fPosZ_3 = pointReco->at(3).position.Z();
                                        fPosX_3unc = pointReco->at(3).uncertainty.X();
                                        fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_4 = pointReco->at(2).position.X();
                                        fPosY_4 = pointReco->at(2).position.Y();
                                        fPosZ_4 = pointReco->at(2).position.Z();
                                        fPosX_4unc = pointReco->at(2).uncertainty.X();
                                        fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_5 = pointReco->at(1).position.X();
                                        fPosY_5 = pointReco->at(1).position.Y();
                                        fPosZ_5 = pointReco->at(1).position.Z();
                                            fPosX_5unc = pointReco->at(1).uncertainty.X();
                                        fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(0).value;
                                        fEnergyCunc = energy->at(0).uncertainty;
                                        fEnergySe = energy->at(3).value;
                                        fEnergySeunc = energy->at(3).uncertainty;
                                        fEnergyTh = energy->at(2).value;
                                        fEnergyThunc =  energy->at(2).uncertainty;
                                        fEnergyFo = energy->at(1).value;
                                        fEnergyFounc =  energy->at(1).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                        fTheta = T4;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 0, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreeBB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                  
                                                    
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                
                                        fPosX_2 = pointReco->at(3).position.X();
                                        fPosY_2 = pointReco->at(3).position.Y();
                                        fPosZ_2 = pointReco->at(3).position.Z();
                                        fPosX_2unc = pointReco->at(3).uncertainty.X();
                                        fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(2).position.X();
                                        fPosY_3 = pointReco->at(2).position.Y();
                                        fPosZ_3 = pointReco->at(2).position.Z();
                                        fPosX_3unc = pointReco->at(2).uncertainty.X();
                                        fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                        fPosX_4 = pointReco->at(1).position.X();
                                        fPosY_4 = pointReco->at(1).position.Y();
                                        fPosZ_4 = pointReco->at(1).position.Z();
                                        fPosX_4unc = pointReco->at(1).uncertainty.X();
                                        fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                            fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                            fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(3).value;
                                        fEnergyCunc =  energy->at(3).uncertainty;
                                        fEnergySe = energy->at(2).value;
                                        fEnergySeunc =  energy->at(2).uncertainty;
                                        fEnergyTh = energy->at(1).value;
                                        fEnergyThunc =  energy->at(1).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                        fTheta = T1;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                      
                                  
                                           
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(2).position.X();
                                        fPosY_2 = pointReco->at(2).position.Y();
                                        fPosZ_2 = pointReco->at(2).position.Z();
                                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(1).position.X();
                                        fPosY_3 = pointReco->at(1).position.Y();
                                        fPosZ_3 = pointReco->at(1).position.Z();
                                        fPosX_3unc = pointReco->at(1).uncertainty.X();
                                        fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                            fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                        fPosZ_5 = pointReco->at(0).position.Z();
                                        fPosX_5unc = pointReco->at(0).uncertainty.X();
                                        fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(2).value;
                                        fEnergyCunc =  energy->at(2).uncertainty;
                                        fEnergySe = energy->at(1).value;
                                        fEnergySeunc =  energy->at(1).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(0).value;
                                        fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                        fTheta = T2;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                            
                                           
                              
                                        fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                        fPos_eY = RePos_e->at(0).Y();
                                        fPos_eZ = RePos_e->at(0).Z();
                                        fPos_pX = RePos_p->at(1).X();
                                        fPos_pY = RePos_p->at(1).Y();
                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                                        fPosX_1 = pointReco->at(4).position.X();
                                        fPosY_1 = pointReco->at(4).position.Y();
                                        fPosZ_1 = pointReco->at(4).position.Z();
                                        fPosX_1unc = pointReco->at(4).uncertainty.X();
                                        fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                        fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                        fEnergy_1 = energy->at(4).value;
                                        fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                        fPosX_2 = pointReco->at(1).position.X();
                                        fPosY_2 = pointReco->at(1).position.Y();
                                        fPosZ_2 = pointReco->at(1).position.Z();
                                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                        fPosX_3 = pointReco->at(0).position.X();
                                        fPosY_3 = pointReco->at(0).position.Y();
                                        fPosZ_3 = pointReco->at(0).position.Z();
                                        fPosX_3unc = pointReco->at(0).uncertainty.X();
                                        fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                        fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                        fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                        fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                        fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(2).position.X();
                                        fPosY_5 = pointReco->at(2).position.Y();
                                        fPosZ_5 = pointReco->at(2).position.Z();
                                        fPosX_5unc = pointReco->at(2).uncertainty.X();
                                        fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(1).value;
                                        fEnergyCunc =  energy->at(1).uncertainty;
                                        fEnergySe = energy->at(0).value;
                                        fEnergySeunc =  energy->at(0).uncertainty;
                                        fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                        fEnergyFo = energy->at(2).value;
                                        fEnergyFounc =  energy->at(2).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                        fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                        fTheta = T3;
                                        fS = s;
                                        fECII->SetXYZT(i, s, 5, 0);
                                        fEnDiff = fPriEnergy - fEnergy_1;
                                        fTreedB5->Fill();
                                        fTreeB5->Fill();
                                        fTreeSB5->Fill();
                                        fTreeSB->Fill();
                                    
                                    }
                                
                                }
                              
                      // end of energy uncertainty // 
                           
                      
                            } else {
                                
                                countb515++;
                                        
                                Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                                Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                                Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                                Double_t D = abs(RePos_p->at(1).X() - pointReco->at(3).position.X());
                              
                           
                                       
                                S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                                S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                                S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                                S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                                A1A2 = S1A2 - S1A1;
                                        
                                A2A1 = -A1A2;
                                                
                                A1A3 = S1A3 - S1A1;
                                                
                                A3A1 = -A1A3;
                    
                                A1A4 = S1A4 - S1A1;
                                                
                                A4A1 = -A1A4;
                                            
                                A2A3 = S1A3 -S1A2;
                                                
                                A3A2 = -A2A3;
                    
                                A2A4 = S1A4 -S1A2;
                                                
                                A4A2 = -A2A4;
                
                                A3A4 = S1A4 -S1A3;
                                            
                                A4A3 = -A3A4;
                                                
                                Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                                Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                                Double_t M1 = S1A1.Mag();
                                Double_t M2 = S1A2.Mag();
                                Double_t L1 = A1A2.Mag();
                                Double_t cost12 = dot1/(M1*L1);
                                Double_t cost21 = dot2/(M2*L1);
                                                
                                Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                                Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                                Double_t M3 = S1A3.Mag();
                                Double_t L2 = A1A3.Mag();
                                           
                                Double_t cost13 = dot3/(M1*L2);
                                Double_t cost31 = dot4/(M3*L2);
                    
                                Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                                Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                                Double_t M4 = S1A4.Mag();
                                Double_t L3 = A1A4.Mag();
                                           
                                Double_t cost14 = dot5/(M1*L3);
                                Double_t cost41 = dot6/(M4*L3);
                                                
                                Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                                Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                    
                                Double_t L4 = A2A3.Mag();
                                                
                                Double_t cost23 = dot7/(M2*L4);
                                Double_t cost32 = dot8/(M3*L4);
                    
                                Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                                Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                                Double_t L5 = A2A4.Mag();
                                                
                                Double_t cost24 = dot9/(M2*L5);
                                Double_t cost42 = dot10/(M4*L5);
                    
                                Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                                Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                                Double_t L6 = A3A4.Mag();
                                                
                                Double_t cost34 = dot11/(M3*L6);
                                Double_t cost43 = dot12/(M4*L6);
                                  
                                Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                                Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                                Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                                Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);
                                       
                                if (D < B && D < A && D < C) { 
                                  
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc = energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(3).position.X();
                                    fPosY_2 = pointReco->at(3).position.Y();
                                    fPosZ_2 = pointReco->at(3).position.Z();
                                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(2).position.X();
                                    fPosY_3 = pointReco->at(2).position.Y();
                                    fPosZ_3 = pointReco->at(2).position.Z();
                                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_4 = pointReco->at(1).position.X();
                                    fPosY_4 = pointReco->at(1).position.Y();
                                    fPosZ_4 = pointReco->at(1).position.Z();
                                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(3).value;
                                    fEnergyCunc = energy->at(3).uncertainty;
                                    fEnergySe = energy->at(2).value;
                                    fEnergySeunc = energy->at(2).uncertainty;
                                    fEnergyTh = energy->at(1).value;
                                    fEnergyThunc =  energy->at(1).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                    fTheta = T1;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 0, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreeBB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                  
                                                
                                            
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                
                                    fPosX_2 = pointReco->at(2).position.X();
                                    fPosY_2 = pointReco->at(2).position.Y();
                                    fPosZ_2 = pointReco->at(2).position.Z();
                                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(1).position.X();
                                    fPosY_3 = pointReco->at(1).position.Y();
                                    fPosZ_3 = pointReco->at(1).position.Z();
                                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                        fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(2).value;
                                    fEnergyCunc =  energy->at(2).uncertainty;
                                    fEnergySe = energy->at(1).value;
                                    fEnergySeunc =  energy->at(1).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                        fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                    fTheta = T2;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                  
                                           
                  
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(1).position.X();
                                    fPosY_2 = pointReco->at(1).position.Y();
                                    fPosZ_2 = pointReco->at(1).position.Z();
                                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(0).position.X();
                                    fPosY_3 = pointReco->at(0).position.Y();
                                    fPosZ_3 = pointReco->at(0).position.Z();
                                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(2).position.X();
                                    fPosY_5 = pointReco->at(2).position.Y();
                                    fPosZ_5 = pointReco->at(2).position.Z();
                                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                        fEnergyC = energy->at(1).value;
                                        fEnergyCunc =  energy->at(1).uncertainty;
                                    fEnergySe = energy->at(0).value;
                                    fEnergySeunc =  energy->at(0).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(2).value;
                                    fEnergyFounc =  energy->at(2).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                    fTheta = T3;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill(); 
                                    fTreeSB->Fill();
                                       
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(0).position.X();
                                        fPosY_2 = pointReco->at(0).position.Y();
                                    fPosZ_2 = pointReco->at(0).position.Z();
                                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(3).position.X();
                                    fPosY_3 = pointReco->at(3).position.Y();
                                    fPosZ_3 = pointReco->at(3).position.Z();
                                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                                        fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_4 = pointReco->at(2).position.X();
                                    fPosY_4 = pointReco->at(2).position.Y();
                                    fPosZ_4 = pointReco->at(2).position.Z();
                                        fPosX_4unc = pointReco->at(2).uncertainty.X();
                                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_5 = pointReco->at(1).position.X();
                                        fPosY_5 = pointReco->at(1).position.Y();
                                    fPosZ_5 = pointReco->at(1).position.Z();
                                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(0).value;
                                    fEnergyCunc =  energy->at(0).uncertainty;
                                    fEnergySe = energy->at(3).value;
                                    fEnergySeunc =  energy->at(3).uncertainty;
                                    fEnergyTh = energy->at(2).value;
                                    fEnergyThunc =  energy->at(2).uncertainty;
                                    fEnergyFo = energy->at(1).value;
                                    fEnergyFounc =  energy->at(1).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                    fTheta = T4;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                            
                                } else if (C < B && C < A && C < D) {
                       
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc = energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(2).position.X();
                                    fPosY_2 = pointReco->at(2).position.Y();
                                    fPosZ_2 = pointReco->at(2).position.Z();
                                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(1).position.X();
                                    fPosY_3 = pointReco->at(1).position.Y();
                                    fPosZ_3 = pointReco->at(1).position.Z();
                                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                        fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(2).value;
                                    fEnergyCunc = energy->at(2).uncertainty;
                                    fEnergySe = energy->at(1).value;
                                    fEnergySeunc = energy->at(1).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                    fTheta = T2;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 0, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreeBB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill(); 
                                    fTreeSB->Fill();
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                
                                    fPosX_2 = pointReco->at(3).position.X();
                                    fPosY_2 = pointReco->at(3).position.Y();
                                    fPosZ_2 = pointReco->at(3).position.Z();
                                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(2).position.X();
                                    fPosY_3 = pointReco->at(2).position.Y();
                                    fPosZ_3 = pointReco->at(2).position.Z();
                                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_4 = pointReco->at(1).position.X();
                                    fPosY_4 = pointReco->at(1).position.Y();
                                    fPosZ_4 = pointReco->at(1).position.Z();
                                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(3).value;
                                    fEnergyCunc =  energy->at(3).uncertainty;
                                    fEnergySe = energy->at(2).value;
                                    fEnergySeunc =  energy->at(2).uncertainty;
                                    fEnergyTh = energy->at(1).value;
                                    fEnergyThunc =  energy->at(1).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                    fTheta = T1;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill(); 
                                    fTreeSB->Fill();
                                  
                              
                                    fPriEnergy = PriEn;
                                        fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(1).position.X();
                                    fPosY_2 = pointReco->at(1).position.Y();
                                    fPosZ_2 = pointReco->at(1).position.Z();
                                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(0).position.X();
                                    fPosY_3 = pointReco->at(0).position.Y();
                                    fPosZ_3 = pointReco->at(0).position.Z();
                                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(2).position.X();
                                    fPosY_5 = pointReco->at(2).position.Y();
                                    fPosZ_5 = pointReco->at(2).position.Z();
                                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(1).value;
                                    fEnergyCunc =  energy->at(1).uncertainty;
                                    fEnergySe = energy->at(0).value;
                                    fEnergySeunc =  energy->at(0).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(2).value;
                                    fEnergyFounc =  energy->at(2).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                    fTheta = T3;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill(); 
                                    fTreeSB->Fill();
                                          
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(0).position.X();
                                        fPosY_2 = pointReco->at(0).position.Y();
                                    fPosZ_2 = pointReco->at(0).position.Z();
                                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(3).position.X();
                                    fPosY_3 = pointReco->at(3).position.Y();
                                        fPosZ_3 = pointReco->at(3).position.Z();
                                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_4 = pointReco->at(2).position.X();
                                    fPosY_4 = pointReco->at(2).position.Y();
                                    fPosZ_4 = pointReco->at(2).position.Z();
                                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_5 = pointReco->at(1).position.X();
                                    fPosY_5 = pointReco->at(1).position.Y();
                                    fPosZ_5 = pointReco->at(1).position.Z();
                                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(0).value;
                                    fEnergyCunc =  energy->at(0).uncertainty;
                                    fEnergySe = energy->at(3).value;
                                    fEnergySeunc =  energy->at(3).uncertainty;
                                    fEnergyTh = energy->at(2).value;
                                    fEnergyThunc =  energy->at(2).uncertainty;
                                    fEnergyFo = energy->at(1).value;
                                    fEnergyFounc =  energy->at(1).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                    fTheta = T4;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                    
                                } else if (B < C && B < A && B < D) {
                                            
                                            
                                           
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc = energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(1).position.X();
                                    fPosY_2 = pointReco->at(1).position.Y();
                                    fPosZ_2 = pointReco->at(1).position.Z();
                                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(0).position.X();
                                    fPosY_3 = pointReco->at(0).position.Y();
                                    fPosZ_3 = pointReco->at(0).position.Z();
                                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(2).position.X();
                                    fPosY_5 = pointReco->at(2).position.Y();
                                    fPosZ_5 = pointReco->at(2).position.Z();
                                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(1).value;
                                    fEnergyCunc = energy->at(1).uncertainty;
                                    fEnergySe = energy->at(0).value;
                                    fEnergySeunc = energy->at(0).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(2).value;
                                    fEnergyFounc =  energy->at(2).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                    fTheta = T3;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 0, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreeBB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(3).position.X();
                                        fPosY_2 = pointReco->at(3).position.Y();
                                    fPosZ_2 = pointReco->at(3).position.Z();
                                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(2).position.X();
                                    fPosY_3 = pointReco->at(2).position.Y();
                                        fPosZ_3 = pointReco->at(2).position.Z();
                                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_4 = pointReco->at(1).position.X();
                                    fPosY_4 = pointReco->at(1).position.Y();
                                    fPosZ_4 = pointReco->at(1).position.Z();
                                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(3).value;
                                    fEnergyCunc =  energy->at(3).uncertainty;
                                    fEnergySe = energy->at(2).value;
                                    fEnergySeunc =  energy->at(2).uncertainty;
                                    fEnergyTh = energy->at(1).value;
                                    fEnergyThunc =  energy->at(1).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                    fTheta = T1;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill(); 
                                    fTreeSB->Fill();
                                  
                                           
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                
                                    fPosX_2 = pointReco->at(2).position.X();
                                    fPosY_2 = pointReco->at(2).position.Y();
                                    fPosZ_2 = pointReco->at(2).position.Z();
                                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(1).position.X();
                                    fPosY_3 = pointReco->at(1).position.Y();
                                    fPosZ_3 = pointReco->at(1).position.Z();
                                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                        fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                        fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(2).value;
                                    fEnergyCunc =  energy->at(2).uncertainty;
                                    fEnergySe = energy->at(1).value;
                                    fEnergySeunc =  energy->at(1).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                    fTheta = T2;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();   
                                    fTreeSB->Fill();
                                            
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(0).position.X();
                                    fPosY_2 = pointReco->at(0).position.Y();
                                    fPosZ_2 = pointReco->at(0).position.Z();
                                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(3).position.X();
                                    fPosY_3 = pointReco->at(3).position.Y();
                                    fPosZ_3 = pointReco->at(3).position.Z();
                                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                                        fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_4 = pointReco->at(2).position.X();
                                    fPosY_4 = pointReco->at(2).position.Y();
                                    fPosZ_4 = pointReco->at(2).position.Z();
                                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                                        fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_5 = pointReco->at(1).position.X();
                                    fPosY_5 = pointReco->at(1).position.Y();
                                    fPosZ_5 = pointReco->at(1).position.Z();
                                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(0).value;
                                    fEnergyCunc =  energy->at(0).uncertainty;
                                    fEnergySe = energy->at(3).value;
                                    fEnergySeunc =  energy->at(3).uncertainty;
                                    fEnergyTh = energy->at(2).value;
                                    fEnergyThunc =  energy->at(2).uncertainty;
                                    fEnergyFo = energy->at(1).value;
                                    fEnergyFounc =  energy->at(1).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                    fTheta = T4;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                    
                                } else {
                                    
                                            
                                           
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc = energy->at(4).uncertainty;
                
                                    fPosX_2 = pointReco->at(0).position.X();
                                    fPosY_2 = pointReco->at(0).position.Y();
                                    fPosZ_2 = pointReco->at(0).position.Z();
                                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(3).position.X();
                                    fPosY_3 = pointReco->at(3).position.Y();
                                    fPosZ_3 = pointReco->at(3).position.Z();
                                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_4 = pointReco->at(2).position.X();
                                        fPosY_4 = pointReco->at(2).position.Y();
                                    fPosZ_4 = pointReco->at(2).position.Z();
                                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_5 = pointReco->at(1).position.X();
                                    fPosY_5 = pointReco->at(1).position.Y();
                                    fPosZ_5 = pointReco->at(1).position.Z();
                                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(0).value;
                                    fEnergyCunc = energy->at(0).uncertainty;
                                    fEnergySe = energy->at(3).value;
                                    fEnergySeunc = energy->at(3).uncertainty;
                                    fEnergyTh = energy->at(2).value;
                                    fEnergyThunc =  energy->at(2).uncertainty;
                                    fEnergyFo = energy->at(1).value;
                                    fEnergyFounc =  energy->at(1).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                    fTheta = T4;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 0, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreeBB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                                  
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(3).position.X();
                                    fPosY_2 = pointReco->at(3).position.Y();
                                    fPosZ_2 = pointReco->at(3).position.Z();
                                        fPosX_2unc = pointReco->at(3).uncertainty.X();
                                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(2).position.X();
                                    fPosY_3 = pointReco->at(2).position.Y();
                                    fPosZ_3 = pointReco->at(2).position.Z();
                                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_4 = pointReco->at(1).position.X();
                                    fPosY_4 = pointReco->at(1).position.Y();
                                    fPosZ_4 = pointReco->at(1).position.Z();
                                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                        fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(3).value;
                                    fEnergyCunc =  energy->at(3).uncertainty;
                                    fEnergySe = energy->at(2).value;
                                    fEnergySeunc =  energy->at(2).uncertainty;
                                    fEnergyTh = energy->at(1).value;
                                    fEnergyThunc =  energy->at(1).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                    fTheta = T1;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();  
                                    fTreeSB->Fill();
                                  
                                           
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(2).position.X();
                                        fPosY_2 = pointReco->at(2).position.Y();
                                    fPosZ_2 = pointReco->at(2).position.Z();
                                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(1).position.X();
                                    fPosY_3 = pointReco->at(1).position.Y();
                                    fPosZ_3 = pointReco->at(1).position.Z();
                                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                    fPosX_5 = pointReco->at(0).position.X();
                                    fPosY_5 = pointReco->at(0).position.Y();
                                    fPosZ_5 = pointReco->at(0).position.Z();
                                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(2).value;
                                    fEnergyCunc =  energy->at(2).uncertainty;
                                    fEnergySe = energy->at(1).value;
                                    fEnergySeunc =  energy->at(1).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(0).value;
                                    fEnergyFounc =  energy->at(0).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                    fTheta = T2;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();   
                                    fTreeSB->Fill();
                                           
                              
                                    fPriEnergy = PriEn;
                                    fPos_eX = RePos_e->at(0).X();
                                    fPos_eY = RePos_e->at(0).Y();
                                    fPos_eZ = RePos_e->at(0).Z();
                                    fPos_pX = RePos_p->at(1).X();
                                    fPos_pY = RePos_p->at(1).Y();
                                    fPos_pZ = RePos_p->at(1).Z();
                                    fRealEnergy_e = fRealEnergy_e;
                                    fRealEnergy_p = fRealEnergy_p;
                                    fPosX_1 = pointReco->at(4).position.X();
                                    fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                    fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                    fPosX_2 = pointReco->at(1).position.X();
                                    fPosY_2 = pointReco->at(1).position.Y();
                                    fPosZ_2 = pointReco->at(1).position.Z();
                                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                    fPosX_3 = pointReco->at(0).position.X();
                                    fPosY_3 = pointReco->at(0).position.Y();
                                    fPosZ_3 = pointReco->at(0).position.Z();
                                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                    fPosX_4 = pointReco->at(3).position.X();
                                    fPosY_4 = pointReco->at(3).position.Y();
                                    fPosZ_4 = pointReco->at(3).position.Z();
                                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                        fPosX_5 = pointReco->at(2).position.X();
                                        fPosY_5 = pointReco->at(2).position.Y();
                                    fPosZ_5 = pointReco->at(2).position.Z();
                                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                                        fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                    fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                    fEnergyC = energy->at(1).value;
                                    fEnergyCunc =  energy->at(1).uncertainty;
                                    fEnergySe = energy->at(0).value;
                                    fEnergySeunc =  energy->at(0).uncertainty;
                                    fEnergyTh = energy->at(3).value;
                                    fEnergyThunc =  energy->at(3).uncertainty;
                                    fEnergyFo = energy->at(2).value;
                                    fEnergyFounc =  energy->at(2).uncertainty;
                                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                                    fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                    fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                    fTheta = T3;
                                    fS = s;
                                    fECII->SetXYZT(i, s, 5, 0);
                                    fEnDiff = fPriEnergy - fEnergy_1;
                                    fTreedB5->Fill();
                                    fTreeB5->Fill();
                                    fTreeSB5->Fill();
                                    fTreeSB->Fill();
                                }
                            }
                            
                        } else {
                            
                       
                       
                       
                            countb516++;
                                        
                            Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                            Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                            Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                            Double_t D = abs(RePos_p->at(1).X() - pointReco->at(3).position.X());
                              
               
                                       
                            S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                            S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            A1A3 = S1A3 - S1A1;
                                                
                            A3A1 = -A1A3;
                
                            A1A4 = S1A4 - S1A1;
                                                
                            A4A1 = -A1A4;
                                                
                            A2A3 = S1A3 -S1A2;
                                        
                            A3A2 = -A2A3;
                    
                            A2A4 = S1A4 -S1A2;
                                                
                            A4A2 = -A2A4;
                    
                            A3A4 = S1A4 -S1A3;
                                                
                            A4A3 = -A3A4;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t cost12 = dot1/(M1*L1);
                            Double_t cost21 = dot2/(M2*L1);
                                                
                            Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                            Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                            Double_t M3 = S1A3.Mag();
                            Double_t L2 = A1A3.Mag();
                                           
                            Double_t cost13 = dot3/(M1*L2);
                            Double_t cost31 = dot4/(M3*L2);
                    
                            Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                            Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                            Double_t M4 = S1A4.Mag();
                            Double_t L3 = A1A4.Mag();
                                           
                            Double_t cost14 = dot5/(M1*L3);
                            Double_t cost41 = dot6/(M4*L3);
                                                
                            Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                            Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                            Double_t L4 = A2A3.Mag();
                                                
                            Double_t cost23 = dot7/(M2*L4);
                            Double_t cost32 = dot8/(M3*L4);
                    
                            Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                            Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                            Double_t L5 = A2A4.Mag();
                                                
                            Double_t cost24 = dot9/(M2*L5);
                            Double_t cost42 = dot10/(M4*L5);
                    
                            Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                            Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                            Double_t L6 = A3A4.Mag();
                                                
                            Double_t cost34 = dot11/(M3*L6);
                            Double_t cost43 = dot12/(M4*L6);
                                  
                            Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                            Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                            Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                            Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);
                                       
                            if (D < B && D < A && D < C) { 
                                  
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc = energy->at(4).uncertainty;
                
                                fPosX_2 = pointReco->at(3).position.X();
                                fPosY_2 = pointReco->at(3).position.Y();
                                fPosZ_2 = pointReco->at(3).position.Z();
                                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                                fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(2).position.X();
                                fPosY_3 = pointReco->at(2).position.Y();
                                fPosZ_3 = pointReco->at(2).position.Z();
                                fPosX_3unc = pointReco->at(2).uncertainty.X();
                                fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                fPosX_4 = pointReco->at(1).position.X();
                                fPosY_4 = pointReco->at(1).position.Y();
                                fPosZ_4 = pointReco->at(1).position.Z();
                                fPosX_4unc = pointReco->at(1).uncertainty.X();
                                fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(3).value;
                                fEnergyCunc = energy->at(3).uncertainty;
                                fEnergySe = energy->at(2).value;
                                fEnergySeunc = energy->at(2).uncertainty;
                                fEnergyTh = energy->at(1).value;
                                fEnergyThunc =  energy->at(1).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                fTheta = T1;
                                fS = s;
                                fECII->SetXYZT(i, s, 0, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreeBB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                  
                                
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(2).position.X();
                                fPosY_2 = pointReco->at(2).position.Y();
                                fPosZ_2 = pointReco->at(2).position.Z();
                                fPosX_2unc = pointReco->at(2).uncertainty.X();
                                fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(1).position.X();
                                fPosY_3 = pointReco->at(1).position.Y();
                                fPosZ_3 = pointReco->at(1).position.Z();
                                fPosX_3unc = pointReco->at(1).uncertainty.X();
                                fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(2).position.X();
                                fPosY_5 = pointReco->at(2).position.Y();
                                fPosZ_5 = pointReco->at(2).position.Z();
                                fPosX_5unc = pointReco->at(2).uncertainty.X();
                                fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(2).value;
                                fEnergyCunc =  energy->at(2).uncertainty;
                                fEnergySe = energy->at(1).value;
                                fEnergySeunc =  energy->at(1).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(2).value;
                                fEnergyFounc =  energy->at(2).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                fTheta = T2;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                      
                                  
                                           
                  
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                    fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(1).position.X();
                                fPosY_2 = pointReco->at(1).position.Y();
                                fPosZ_2 = pointReco->at(1).position.Z();
                                fPosX_2unc = pointReco->at(1).uncertainty.X();
                                fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(0).position.X();
                                fPosY_3 = pointReco->at(0).position.Y();
                                fPosZ_3 = pointReco->at(0).position.Z();
                                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                                fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(2).position.X();
                                fPosY_5 = pointReco->at(2).position.Y();
                                fPosZ_5 = pointReco->at(2).position.Z();
                                fPosX_5unc = pointReco->at(2).uncertainty.X();
                                fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(1).value;
                                fEnergyCunc =  energy->at(1).uncertainty;
                                fEnergySe = energy->at(0).value;
                                fEnergySeunc =  energy->at(0).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(2).value;
                                fEnergyFounc =  energy->at(2).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                fTheta = T3;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();   
                                fTreeSB->Fill();
                                       
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                    fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
            
                                fPosX_2 = pointReco->at(0).position.X();
                                fPosY_2 = pointReco->at(0).position.Y();
                                fPosZ_2 = pointReco->at(0).position.Z();
                                fPosX_2unc = pointReco->at(0).uncertainty.X();
                                fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(3).position.X();
                                fPosY_3 = pointReco->at(3).position.Y();
                                fPosZ_3 = pointReco->at(3).position.Z();
                                fPosX_3unc = pointReco->at(3).uncertainty.X();
                                fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                fPosX_4 = pointReco->at(2).position.X();
                                fPosY_4 = pointReco->at(2).position.Y();
                                fPosZ_4 = pointReco->at(2).position.Z();
                                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                                fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_5 = pointReco->at(1).position.X();
                                fPosY_5 = pointReco->at(1).position.Y();
                                fPosZ_5 = pointReco->at(1).position.Z();
                                fPosX_5unc = pointReco->at(1).uncertainty.X();
                                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(0).value;
                                fEnergyCunc =  energy->at(0).uncertainty;
                                fEnergySe = energy->at(3).value;
                                fEnergySeunc =  energy->at(3).uncertainty;
                                fEnergyTh = energy->at(2).value;
                                fEnergyThunc =  energy->at(2).uncertainty;
                                fEnergyFo = energy->at(1).value;
                                fEnergyFounc =  energy->at(1).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                fTheta = T4;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();  
                                fTreeSB->Fill();
                                            
                            } else if (C < B && C < A && C < D) {
                                            
                                            
                                            
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc = energy->at(4).uncertainty;
                
                                fPosX_2 = pointReco->at(2).position.X();
                                fPosY_2 = pointReco->at(2).position.Y();
                                fPosZ_2 = pointReco->at(2).position.Z();
                                fPosX_2unc = pointReco->at(2).uncertainty.X();
                                fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(1).position.X();
                                fPosY_3 = pointReco->at(1).position.Y();
                                fPosZ_3 = pointReco->at(1).position.Z();
                                fPosX_3unc = pointReco->at(1).uncertainty.X();
                                fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(2).value;
                                fEnergyCunc = energy->at(2).uncertainty;
                                fEnergySe = energy->at(1).value;
                                fEnergySeunc = energy->at(1).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                fTheta = T2;
                                fS = s;
                                fECII->SetXYZT(i, s, 0, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreeBB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(3).position.X();
                                fPosY_2 = pointReco->at(3).position.Y();
                                fPosZ_2 = pointReco->at(3).position.Z();
                                fPosX_2unc = pointReco->at(3).uncertainty.X();
                                fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(2).position.X();
                                fPosY_3 = pointReco->at(2).position.Y();
                                fPosZ_3 = pointReco->at(2).position.Z();
                                fPosX_3unc = pointReco->at(2).uncertainty.X();
                                fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                fPosX_4 = pointReco->at(1).position.X();
                                    fPosY_4 = pointReco->at(1).position.Y();
                                fPosZ_4 = pointReco->at(1).position.Z();
                                fPosX_4unc = pointReco->at(1).uncertainty.X();
                                fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(3).value;
                                fEnergyCunc =  energy->at(3).uncertainty;
                                fEnergySe = energy->at(2).value;
                                    fEnergySeunc =  energy->at(2).uncertainty;
                                fEnergyTh = energy->at(1).value;
                                fEnergyThunc =  energy->at(1).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                fTheta = T1;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                  
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(1).position.X();
                                fPosY_2 = pointReco->at(1).position.Y();
                                fPosZ_2 = pointReco->at(1).position.Z();
                                fPosX_2unc = pointReco->at(1).uncertainty.X();
                                fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(0).position.X();
                                fPosY_3 = pointReco->at(0).position.Y();
                                fPosZ_3 = pointReco->at(0).position.Z();
                                fPosX_3unc = pointReco->at(0).uncertainty.X();
                                fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(2).position.X();
                                fPosY_5 = pointReco->at(2).position.Y();
                                fPosZ_5 = pointReco->at(2).position.Z();
                                fPosX_5unc = pointReco->at(2).uncertainty.X();
                                fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(1).value;
                                fEnergyCunc =  energy->at(1).uncertainty;
                                fEnergySe = energy->at(0).value;
                                fEnergySeunc =  energy->at(0).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(2).value;
                                fEnergyFounc =  energy->at(2).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                fTheta = T3;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill(); 
                                fTreeSB->Fill();
                                          
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(0).position.X();
                                fPosY_2 = pointReco->at(0).position.Y();
                                fPosZ_2 = pointReco->at(0).position.Z();
                                fPosX_2unc = pointReco->at(0).uncertainty.X();
                                fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(3).position.X();
                                fPosY_3 = pointReco->at(3).position.Y();
                                fPosZ_3 = pointReco->at(3).position.Z();
                                fPosX_3unc = pointReco->at(3).uncertainty.X();
                                fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                fPosX_4 = pointReco->at(2).position.X();
                                fPosY_4 = pointReco->at(2).position.Y();
                                fPosZ_4 = pointReco->at(2).position.Z();
                                fPosX_4unc = pointReco->at(2).uncertainty.X();
                                fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                fPosX_5 = pointReco->at(1).position.X();
                                fPosY_5 = pointReco->at(1).position.Y();
                                fPosZ_5 = pointReco->at(1).position.Z();
                                fPosX_5unc = pointReco->at(1).uncertainty.X();
                                fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(0).value;
                                fEnergyCunc =  energy->at(0).uncertainty;
                                fEnergySe = energy->at(3).value;
                                fEnergySeunc =  energy->at(3).uncertainty;
                                fEnergyTh = energy->at(2).value;
                                fEnergyThunc =  energy->at(2).uncertainty;
                                fEnergyFo = energy->at(1).value;
                                fEnergyFounc =  energy->at(1).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                fTheta = T4;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                
                            } else if (B < C && B < A && B < D) {
                                            
                                            
                                           
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc = energy->at(4).uncertainty;
                
                                fPosX_2 = pointReco->at(1).position.X();
                                fPosY_2 = pointReco->at(1).position.Y();
                                fPosZ_2 = pointReco->at(1).position.Z();
                                fPosX_2unc = pointReco->at(1).uncertainty.X();
                                fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(0).position.X();
                                fPosY_3 = pointReco->at(0).position.Y();
                                fPosZ_3 = pointReco->at(0).position.Z();
                                fPosX_3unc = pointReco->at(0).uncertainty.X();
                                fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(2).position.X();
                                fPosY_5 = pointReco->at(2).position.Y();
                                fPosZ_5 = pointReco->at(2).position.Z();
                                fPosX_5unc = pointReco->at(2).uncertainty.X();
                                fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(1).value;
                                fEnergyCunc = energy->at(1).uncertainty;
                                fEnergySe = energy->at(0).value;
                                fEnergySeunc = energy->at(0).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(2).value;
                                fEnergyFounc =  energy->at(2).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                fTheta = T3;
                                fS = s;
                                fECII->SetXYZT(i, s, 0, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreeBB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill(); 
                                fTreeSB->Fill();
                                                    /*point1->Print();
                                                    point2->Print();
                                                    cout << " realEn_e : " << energy1 << endl;
                                                    cout << " realEn_p : " << energy2 << endl;
                                                    cout << "---------------Real--------------" << endl <<endl; 
                                                    cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(2).position.X() << "," << pointReco->at(2).position.Y() << "," << pointReco->at(2).position.Z() << ")" << endl;
                                                    cout << "Position2 :" <<" (x,y,z) = "<< "(" << pointReco->at(0).position.X() << "," << pointReco->at(0).position.Y() << "," << pointReco->at(0).position.Z() << ")" << endl; 
                             
                                                    cout << "Energy1 : " <<  energy->at(2).value<< endl;
                                                    cout << "Energy2 : " << energy->at(0).value << " + " << energy->at(1).value << " = " << fEnergy_2 << endl;
                                                    cout<< "---------------------type1-1------------------" << endl;*/
                                           
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(3).position.X();
                                fPosY_2 = pointReco->at(3).position.Y();
                                fPosZ_2 = pointReco->at(3).position.Z();
                                fPosX_2unc = pointReco->at(3).uncertainty.X();
                                fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(2).position.X();
                                fPosY_3 = pointReco->at(2).position.Y();
                                fPosZ_3 = pointReco->at(2).position.Z();
                                fPosX_3unc = pointReco->at(2).uncertainty.X();
                                fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                fPosX_4 = pointReco->at(1).position.X();
                                fPosY_4 = pointReco->at(1).position.Y();
                                fPosZ_4 = pointReco->at(1).position.Z();
                                fPosX_4unc = pointReco->at(1).uncertainty.X();
                                fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(3).value;
                                fEnergyCunc =  energy->at(3).uncertainty;
                                fEnergySe = energy->at(2).value;
                                    fEnergySeunc =  energy->at(2).uncertainty;
                                fEnergyTh = energy->at(1).value;
                                fEnergyThunc =  energy->at(1).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                fTheta = T1;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill(); 
                                fTreeSB->Fill();
                                  
                                           
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(2).position.X();
                                fPosY_2 = pointReco->at(2).position.Y();
                                fPosZ_2 = pointReco->at(2).position.Z();
                                fPosX_2unc = pointReco->at(2).uncertainty.X();
                                fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(1).position.X();
                                fPosY_3 = pointReco->at(1).position.Y();
                                fPosZ_3 = pointReco->at(1).position.Z();
                                fPosX_3unc = pointReco->at(1).uncertainty.X();
                                fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(2).value;
                                fEnergyCunc =  energy->at(2).uncertainty;
                                fEnergySe = energy->at(1).value;
                                fEnergySeunc =  energy->at(1).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                fTheta = T2;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill(); 
                                fTreeSB->Fill();
                                            
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(0).position.X();
                                fPosY_2 = pointReco->at(0).position.Y();
                                fPosZ_2 = pointReco->at(0).position.Z();
                                fPosX_2unc = pointReco->at(0).uncertainty.X();
                                fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(3).position.X();
                                fPosY_3 = pointReco->at(3).position.Y();
                                fPosZ_3 = pointReco->at(3).position.Z();
                                fPosX_3unc = pointReco->at(3).uncertainty.X();
                                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                fPosX_4 = pointReco->at(2).position.X();
                                fPosY_4 = pointReco->at(2).position.Y();
                                fPosZ_4 = pointReco->at(2).position.Z();
                                fPosX_4unc = pointReco->at(2).uncertainty.X();
                                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                fPosX_5 = pointReco->at(1).position.X();
                                fPosY_5 = pointReco->at(1).position.Y();
                                fPosZ_5 = pointReco->at(1).position.Z();
                                fPosX_5unc = pointReco->at(1).uncertainty.X();
                                fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(0).value;
                                fEnergyCunc =  energy->at(0).uncertainty;
                                fEnergySe = energy->at(3).value;
                                fEnergySeunc =  energy->at(3).uncertainty;
                                fEnergyTh = energy->at(2).value;
                                fEnergyThunc =  energy->at(2).uncertainty;
                                fEnergyFo = energy->at(1).value;
                                fEnergyFounc =  energy->at(1).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                fTheta = T4;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                
                            } else {
                                            
                                           
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc = energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(0).position.X();
                                fPosY_2 = pointReco->at(0).position.Y();
                                fPosZ_2 = pointReco->at(0).position.Z();
                                fPosX_2unc = pointReco->at(0).uncertainty.X();
                                fPosY_2unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(3).position.X();
                                fPosY_3 = pointReco->at(3).position.Y();
                                fPosZ_3 = pointReco->at(3).position.Z();
                                fPosX_3unc = pointReco->at(3).uncertainty.X();
                                fPosY_3unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                                fPosX_4 = pointReco->at(2).position.X();
                                fPosY_4 = pointReco->at(2).position.Y();
                                fPosZ_4 = pointReco->at(2).position.Z();
                                fPosX_4unc = pointReco->at(2).uncertainty.X();
                                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                                    fPosX_5 = pointReco->at(1).position.X();
                                fPosY_5 = pointReco->at(1).position.Y();
                                fPosZ_5 = pointReco->at(1).position.Z();
                                fPosX_5unc = pointReco->at(1).uncertainty.X();
                                fPosY_5unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(0).value;
                                fEnergyCunc = energy->at(0).uncertainty;
                                fEnergySe = energy->at(3).value;
                                fEnergySeunc = energy->at(3).uncertainty;
                                fEnergyTh = energy->at(2).value;
                                fEnergyThunc =  energy->at(2).uncertainty;
                                fEnergyFo = energy->at(1).value;
                                fEnergyFounc =  energy->at(1).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(0).value - energy->at(4).value;
                                fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                                fTheta = T4;
                                fS = s;
                                fECII->SetXYZT(i, s, 0, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreeBB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                  
                                                    
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                
                                fPosX_2 = pointReco->at(3).position.X();
                                fPosY_2 = pointReco->at(3).position.Y();
                                fPosZ_2 = pointReco->at(3).position.Z();
                                fPosX_2unc = pointReco->at(3).uncertainty.X();
                                fPosY_2unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(2).position.X();
                                fPosY_3 = pointReco->at(2).position.Y();
                                fPosZ_3 = pointReco->at(2).position.Z();
                                fPosX_3unc = pointReco->at(2).uncertainty.X();
                                fPosY_3unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                                fPosX_4 = pointReco->at(1).position.X();
                                fPosY_4 = pointReco->at(1).position.Y();
                                    fPosZ_4 = pointReco->at(1).position.Z();
                                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                                fPosY_4unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(3).value;
                                fEnergyCunc =  energy->at(3).uncertainty;
                                fEnergySe = energy->at(2).value;
                                fEnergySeunc =  energy->at(2).uncertainty;
                                fEnergyTh = energy->at(1).value;
                                fEnergyThunc =  energy->at(1).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(3).value - energy->at(4).value;
                                fRatioEnergy = energy->at(3).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                                fTheta = T1;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill(); 
                                fTreeSB->Fill();
                                  
                                           
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(2).position.X();
                                fPosY_2 = pointReco->at(2).position.Y();
                                fPosZ_2 = pointReco->at(2).position.Z();
                                fPosX_2unc = pointReco->at(2).uncertainty.X();
                                fPosY_2unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(1).position.X();
                                fPosY_3 = pointReco->at(1).position.Y();
                                fPosZ_3 = pointReco->at(1).position.Z();
                                fPosX_3unc = pointReco->at(1).uncertainty.X();
                                fPosY_3unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(0).position.X();
                                fPosY_5 = pointReco->at(0).position.Y();
                                fPosZ_5 = pointReco->at(0).position.Z();
                                fPosX_5unc = pointReco->at(0).uncertainty.X();
                                fPosY_5unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(2).value;
                                fEnergyCunc =  energy->at(2).uncertainty;
                                fEnergySe = energy->at(1).value;
                                fEnergySeunc =  energy->at(1).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(0).value;
                                fEnergyFounc =  energy->at(0).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(2).value - energy->at(4).value;
                                fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                                fTheta = T2;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill(); 
                                fTreeSB->Fill();
                                           
                              
                                fPriEnergy = PriEn;
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                                fPosX_1 = pointReco->at(4).position.X();
                                fPosY_1 = pointReco->at(4).position.Y();
                                fPosZ_1 = pointReco->at(4).position.Z();
                                fPosX_1unc = pointReco->at(4).uncertainty.X();
                                fPosY_1unc = pointReco->at(4).uncertainty.Y();
                                fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                                fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                                fEnergy_1 = energy->at(4).value;
                                fEnergy_1unc =  energy->at(4).uncertainty;
                    
                                fPosX_2 = pointReco->at(1).position.X();
                                fPosY_2 = pointReco->at(1).position.Y();
                                fPosZ_2 = pointReco->at(1).position.Z();
                                fPosX_2unc = pointReco->at(1).uncertainty.X();
                                fPosY_2unc = pointReco->at(1).uncertainty.Y();
                                fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                                fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                                fPosX_3 = pointReco->at(0).position.X();
                                fPosY_3 = pointReco->at(0).position.Y();
                                fPosZ_3 = pointReco->at(0).position.Z();
                                fPosX_3unc = pointReco->at(0).uncertainty.X();
                                fPosY_3unc = pointReco->at(0).uncertainty.Y();
                                fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                                fPosX_4 = pointReco->at(3).position.X();
                                fPosY_4 = pointReco->at(3).position.Y();
                                fPosZ_4 = pointReco->at(3).position.Z();
                                fPosX_4unc = pointReco->at(3).uncertainty.X();
                                fPosY_4unc = pointReco->at(3).uncertainty.Y();
                                fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                                fPosX_5 = pointReco->at(2).position.X();
                                fPosY_5 = pointReco->at(2).position.Y();
                                fPosZ_5 = pointReco->at(2).position.Z();
                                fPosX_5unc = pointReco->at(2).uncertainty.X();
                                fPosY_5unc = pointReco->at(2).uncertainty.Y();
                                fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                                fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                                fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                                fEnergyC = energy->at(1).value;
                                fEnergyCunc =  energy->at(1).uncertainty;
                                fEnergySe = energy->at(0).value;
                                fEnergySeunc =  energy->at(0).uncertainty;
                                fEnergyTh = energy->at(3).value;
                                fEnergyThunc =  energy->at(3).uncertainty;
                                fEnergyFo = energy->at(2).value;
                                fEnergyFounc =  energy->at(2).uncertainty;
                                fEnergy_3 = fEnergy_1 + fEnergy_2;
                                fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty + energy->at(4).uncertainty);
                                fDiffEnergy = energy->at(1).value - energy->at(4).value;
                                fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                                fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                                fTheta = T3;
                                fS = s;
                                fECII->SetXYZT(i, s, 5, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreedB5->Fill();
                                fTreeB5->Fill();
                                fTreeSB5->Fill();
                                fTreeSB->Fill();
                                            
                            }
                        }
                        
                        
                    } else if (pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
                  
                        countb517++;
    
                    } else if (pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
                  
                        countb518++;
    
                    } else if (pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
                  
                        countb519++;
   
                    } else {
                   
                                         /* 
                                         cout << "---------------------background-----------------------"<<endl; 
                                         cout << "Position1 :" <<" (x,y,z) = "<< "(" << pointReco->at(3).position.X() << "," << pointReco->at(3).position.Y() << "," << pointReco->at(3).position.Z() << ")" << endl;*/
                        countb520++;
                        continue;
                    }
                          
              //RePos_p->clear();
              //RePos_e->clear();        
                    countr5++; 
  
               
                } else {
                   
                    countrall++;
                }
             
                      
       
                count4++;
            
//            Pri->Fill(PriEn);
//            Sum->Fill(energy1+energy2);
       
                       

/*
       } else if (RePos_p->at(1).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_p->at(1).X() <= (Scatposition->X() + (Scatthick_x/2)) && RePos_e->at(0).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_e->at(0).X() <= (Absposition->X() + (Absthick_x/2))) {
 */    
              
                } else if (RePos_p->at(0).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_p->at(0).X() <= (Absposition->X() + (Absthick_x/2)) && RePos_e->at(0).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_e->at(0).X() <= (Absposition->X() + (Absthick_x/2)) && RePos_p->at(1).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_p->at(1).X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
                    ///////////////////////////////////////////////////////////  Back scattering events ////////////////////////////////////////////////////////
                    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////           
                    countback++;

                    Pribs->Fill(PriEn);
           
                    if (s==2) {
               
                        
                      
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z())) {
                   
                      
                
                            countnanR2++;
                            continue;
                        }

                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
                     
/*                             
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                                discardedb2++;
                                continue;
                            }
 */


                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                discardedb2++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                discardedb2++;
                                continue;
                            }
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                                discardedb2++;
                                continue;
                            }



                            countE02++;
                            fPriEnergy = PriEn;
                            fPos_eX = RePos_e->at(0).X();
                            fPos_eY = RePos_e->at(0).Y();
                            fPos_eZ = RePos_e->at(0).Z();
                            fPos_pX = RePos_p->at(1).X();
                            fPos_pY = RePos_p->at(1).Y();
                            fPos_pZ = RePos_p->at(1).Z();
                            fRealEnergy_e = fRealEnergy_e;
                            fRealEnergy_p = fRealEnergy_p;
                     fPosX_2 = pointReco->at(0).position.X();
                     fPosY_2 = pointReco->at(0).position.Y();
                     fPosZ_2 = pointReco->at(0).position.Z();
                     fPosX_2unc = pointReco->at(0).uncertainty.X();
                     fPosY_2unc = pointReco->at(0).uncertainty.Y();
                     fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                     fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                     fPosX_3 = 0;
                     fPosY_3 = 0;
                     fPosZ_3 = 0;
                     fPosX_3unc = 0;
                     fPosY_3unc = 0;
                     fPosZ_3unc = 0;
                             fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                     fEnergy_2 = energy->at(0).value;
                     fEnergy_2unc = energy->at(0).uncertainty;
                     fEnergyC = energy->at(0).value;
                     fEnergyCunc =  energy->at(0).uncertainty;
                     fEnergySe = 0;
                     fEnergySeunc = 0;
                      fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                            
                     fPosX_1 = pointReco->at(1).position.X();
                     fPosY_1 = pointReco->at(1).position.Y();
                     fPosZ_1 = pointReco->at(1).position.Z();
                     fPosX_1unc = pointReco->at(1).uncertainty.X();
                     fPosY_1unc = pointReco->at(1).uncertainty.Y();
                     fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                     fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                     fEnergy_1 = energy->at(1).value;
                     fEnergy_1unc = energy->at(1).uncertainty;
                     fEnergy_3 = fEnergy_1 + fEnergy_2;
                     fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                     fDiffEnergy = energy->at(0).value - energy->at(1).value;
                     fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                     fS = s;
                            fTheta = 0;
                            fECII->SetXYZT(i, s, 11, 0);
                            fEnDiff = fPriEnergy - fEnergy_1;
                            fTreeBS2->Fill();
                            fTreeB2->Fill();
                            fTreeSB2->Fill();
                            fTreeSB->Fill();
                            
                        }/* else if (pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(0).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                            
                            countE021++;
                            
                        }*/
                     
                        countrsb2++;
                        
                    } else if (s==3) {
                        
                      
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z())) {
                   
                          
               
                            countnanR3++;
                            continue;
                        }
                         
                      
                         
                        if (pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
/*                        
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                                discardedb3++;
                                continue;
                            }   
 */ 


                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb3++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb3++;
                                continue;
                            }
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                discardedb3++;
                                continue;
                            }
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                                discardedb3++;
                                continue;
                            }
                            
                            
                            
                            
                            
                            S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t L2 = A2A1.Mag();
                                                
                   Double_t cost12 = dot1/(M1*L1);
                   Double_t cost21 = dot2/(M2*L2);
                   
                   Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                   Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                   
       
                                countE05++;
                           
                                fPriEnergy = PriEn; 
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                           fPosX_1 = pointReco->at(2).position.X();
                           fPosY_1 = pointReco->at(2).position.Y();
                           fPosZ_1 = pointReco->at(2).position.Z();
                           fPosX_1unc = pointReco->at(2).uncertainty.X();
                           fPosY_1unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                           fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fEnergy_1 = energy->at(2).value;
                           fEnergy_1unc = energy->at(2).uncertainty;
                   
                           fPosX_2 = pointReco->at(1).position.X();
                           fPosY_2 = pointReco->at(1).position.Y();
                           fPosZ_2 = pointReco->at(1).position.Z();
                           fPosX_2unc = pointReco->at(1).uncertainty.X();
                           fPosY_2unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                           fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fPosX_3 = pointReco->at(0).position.X();
                           fPosY_3 = pointReco->at(0).position.Y();
                           fPosZ_3 = pointReco->at(0).position.Z();
                           fPosX_3unc = pointReco->at(0).uncertainty.X();
                           fPosY_3unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                            fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                           fEnergyC = energy->at(1).value;
                           fEnergyCunc = energy->at(1).uncertainty;
                           fEnergySe = energy->at(0).value;
                           fEnergySeunc = energy->at(0).uncertainty;
                           fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                           fEnergy_2 = energy->at(1).value + energy->at(0).value;
                           fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                           fEnergy_3 = fEnergy_1 + fEnergy_2;
                           fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                           fDiffEnergy = energy->at(1).value - energy->at(2).value;
                           fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                           fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                           fTheta = cost12;
                           
                           fS = s;
                                  
                           fECII->SetXYZT(i, s, 11, 0);
                           fEnDiff = fPriEnergy - fEnergy_1;
                           fTreeBS3->Fill();
                           fTreeB3->Fill();
                           fTreeSB3->Fill();
                           fTreeSB->Fill();
                           
                           
                           countE06++;
                           fPriEnergy = PriEn;  
                           fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                           fPosX_1 = pointReco->at(2).position.X();
                           fPosY_1 = pointReco->at(2).position.Y();
                           fPosZ_1 = pointReco->at(2).position.Z();
                           fPosX_1unc = pointReco->at(2).uncertainty.X();
                           fPosY_1unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                           fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fEnergy_1 = energy->at(2).value;
                           fEnergy_1unc = energy->at(2).uncertainty;
                   
                           fPosX_2 = pointReco->at(0).position.X();
                           fPosY_2 = pointReco->at(0).position.Y();
                           fPosZ_2 = pointReco->at(0).position.Z();
                           fPosX_2unc = pointReco->at(0).uncertainty.X();
                           fPosY_2unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                           fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fPosX_3 = pointReco->at(1).position.X();
                           fPosY_3 = pointReco->at(1).position.Y();
                           fPosZ_3 = pointReco->at(1).position.Z();
                           fPosX_3unc = pointReco->at(1).uncertainty.X();
                           fPosY_3unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                   fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                           fEnergyC = energy->at(0).value;
                           fEnergyCunc = energy->at(0).uncertainty;
                           fEnergySe = energy->at(1).value;
                           fEnergySeunc = energy->at(1).uncertainty;
                            fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                           fEnergy_2 = energy->at(1).value + energy->at(0).value;
                           fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                           fEnergy_3 = fEnergy_1 + fEnergy_2;
                           fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                           fDiffEnergy = energy->at(0).value - energy->at(2).value;
                           fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                           fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                           fTheta = cost21;
                           
                                fS = s;
                                fECII->SetXYZT(i, s, 12, 0);
                                fEnDiff = fPriEnergy - fEnergy_1;
                                fTreeBS3->Fill();
                                fTreeB3->Fill();
                                fTreeSB3->Fill();
                                fTreeSB->Fill();
                                
                                
                        } else if (pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                            
                            countE051++;
                            
                            
                        } 
            
                        countrsb3++;
                        
                    } else if (s==4) {
               
                    
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z())) {
                   
                      
                            countnanR4++;
                            continue;
                        }
                         
                      
            
                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                                discardedb4++;
                                continue;
                            } 
 */               


                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb4++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            
                            if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            
                            
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                                discardedb4++;
                                continue;
                            }
                            
                            
                            
                            
                            S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                    A2A1 = -A1A2;
                                                
                    A1A3 = S1A3 - S1A1;
                                                
                    A3A1 = -A1A3;
                                                
                    A2A3 = S1A3 -S1A2;
                                                
                    A3A2 = -A2A3;
                                                
                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                    Double_t M1 = S1A1.Mag();
                    Double_t M2 = S1A2.Mag();
                    Double_t L1 = A1A2.Mag();
                    Double_t cost12 = dot1/(M1*L1);
                    Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                                                
                    Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L3 = A2A3.Mag();
                                                
                    Double_t cost23 = dot5/(M2*L3);
                    Double_t cost32 = dot6/(M3*L3);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13);
                    Double_t T2 = (1 + cost21 )*(1 + cost23);
                    Double_t T3 = (1 + cost31 )*(1 + cost32);
                    
                    Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                    Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                    Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());
                        
                                countE010++;          
                                fPriEnergy = PriEn;  
                                fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(2).position.X();
                        fPosY_2 = pointReco->at(2).position.Y();
                        fPosZ_2 = pointReco->at(2).position.Z();
                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(1).position.X();
                           fPosY_3 = pointReco->at(1).position.Y();
                           fPosZ_3 = pointReco->at(1).position.Z();
                           fPosX_3unc = pointReco->at(1).uncertainty.X();
                           fPosY_3unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(2).value;
                        fEnergyCunc = energy->at(2).uncertainty;
                        fEnergySe = energy->at(1).value;
                        fEnergySeunc = energy->at(1).uncertainty;
                        fEnergyTh = energy->at(0).value;
                        fEnergyThunc = energy->at(0).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(2).value - energy->at(3).value;
                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost12 )*(1 + cost13);
                        fS = s;
                                     
                        fECII->SetXYZT(i, s, 11, 0);
                        fEnDiff = fPriEnergy - fEnergy_1;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                        fTreeSB4->Fill();
                        fTreeSB->Fill();
                                      
                         countE011++;              
                        fPriEnergy = PriEn;  
                        fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(1).position.X();
                        fPosY_2 = pointReco->at(1).position.Y();
                        fPosZ_2 = pointReco->at(1).position.Z();
                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(0).position.X();
                           fPosY_3 = pointReco->at(0).position.Y();
                           fPosZ_3 = pointReco->at(0).position.Z();
                           fPosX_3unc = pointReco->at(0).uncertainty.X();
                           fPosY_3unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                            fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(1).value;
                        fEnergyCunc = energy->at(1).uncertainty;
                        fEnergySe = energy->at(0).value;
                        fEnergySeunc =  energy->at(0).uncertainty;
                        fEnergyTh = energy->at(2).value;
                        fEnergyThunc = energy->at(2).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(1).value - energy->at(3).value;
                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost21)*(1 + cost23);
                        fS = s;
                        fECII->SetXYZT(i, s, 12, 0);
                        fEnDiff = fPriEnergy - fEnergy_1;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                        fTreeSB4->Fill();
                        fTreeSB->Fill();
                        
                         countE012++;
                        fPriEnergy = PriEn; 
                        fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(0).position.X();
                        fPosY_2 = pointReco->at(0).position.Y();
                        fPosZ_2 = pointReco->at(0).position.Z();
                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(2).position.X();
                           fPosY_3 = pointReco->at(2).position.Y();
                           fPosZ_3 = pointReco->at(2).position.Z();
                           fPosX_3unc = pointReco->at(2).uncertainty.X();
                           fPosY_3unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                            fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(0).value;
                        fEnergyCunc = energy->at(0).uncertainty;
                        fEnergySe = energy->at(2).value;
                        fEnergySeunc = energy->at(2).uncertainty;
                        fEnergyTh = energy->at(1).value;
                        fEnergyThunc = energy->at(1).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(0).value - energy->at(3).value;
                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost31)*(1 + cost32);
                        fS = s;
                        fECII->SetXYZT(i, s, 13, 0);
                        fEnDiff = fPriEnergy - fEnergy_1;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                        fTreeSB4->Fill();
                        fTreeSB->Fill();
                      
                                      
                        } else if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                            
                           countE0101++; 
                            
                        } else if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                            
                           countE0102++; 
                            
                        } 
             
                        countrsb4++;
                        
                    } else if (s==5) {
               
                    
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z()) || isnan(pointReco->at(4).position.X()) || isinf(pointReco->at(4).position.X()) || isnan(pointReco->at(4).position.Y()) || isinf(pointReco->at(4).position.Y()) || isnan(pointReco->at(4).position.Z()) || isinf(pointReco->at(4).position.Z())) {
                   
                      
                //cout<< "event No. : " << i << " Clus Position : " << pointReco->at(0).position.X() << pointReco->at(0).position.Y() << pointReco->at(0).position.Z() << " , " << pointReco->at(1).position.X() << pointReco->at(1).position.Y() << pointReco->at(1).position.Z() << endl;
                            countnanR5++;
                            continue;
                        }
               
                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(3).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15)|| pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                                discardedb5++;
                                continue;
                            } 
*/ 


                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb5++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if( pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 ||pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                                discardedb5++;
                                continue;
                            } 


                            S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                            S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            A1A3 = S1A3 - S1A1;
                                                
                            A3A1 = -A1A3;
                    
                            A1A4 = S1A4 - S1A1;
                                                
                            A4A1 = -A1A4;
                                                
                            A2A3 = S1A3 -S1A2;
                                                
                            A3A2 = -A2A3;
                    
                            A2A4 = S1A4 -S1A2;
                                                
                            A4A2 = -A2A4;
                    
                            A3A4 = S1A4 -S1A3;
                                                
                            A4A3 = -A3A4;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t cost12 = dot1/(M1*L1);
                            Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                    
                    Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                    Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                    Double_t M4 = S1A4.Mag();
                    Double_t L3 = A1A4.Mag();
                                           
                    Double_t cost14 = dot5/(M1*L3);
                    Double_t cost41 = dot6/(M4*L3);
                                                
                    Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L4 = A2A3.Mag();
                                                
                    Double_t cost23 = dot7/(M2*L4);
                    Double_t cost32 = dot8/(M3*L4);
                    
                    Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                    Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                    Double_t L5 = A2A4.Mag();
                                                
                    Double_t cost24 = dot9/(M2*L5);
                    Double_t cost42 = dot10/(M4*L5);
                    
                    Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                    Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                    Double_t L6 = A3A4.Mag();
                                                
                    Double_t cost34 = dot11/(M3*L6);
                    Double_t cost43 = dot12/(M4*L6);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                    Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                    Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                    Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);

                    countE017++;
                    fPriEnergy = PriEn;

                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(0).position.X();
                    fPosY_2 = pointReco->at(0).position.Y();
                    fPosZ_2 = pointReco->at(0).position.Z();
                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(3).position.X();
                    fPosY_3 = pointReco->at(3).position.Y();
                    fPosZ_3 = pointReco->at(3).position.Z();
                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                    fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = pointReco->at(1).position.X();
                    fPosY_5 = pointReco->at(1).position.Y();
                    fPosZ_5 = pointReco->at(1).position.Z();
                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(0).value;
                    fEnergyCunc =  energy->at(0).uncertainty;
                    fEnergySe = energy->at(3).value;
                    fEnergySeunc =  energy->at(3).uncertainty;
                    fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = energy->at(1).value;
                    fEnergyFounc =  energy->at(1).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                    fTheta = T4;
                    fS = s; 
                    fECII->SetXYZT(i, s, 11, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeBS5->Fill();
                    fTreeB5->Fill();
                    fTreeSB5->Fill();
                    fTreeSB->Fill();

                    countE018++;
                    fPriEnergy = PriEn;

                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(1).position.X();
                    fPosY_2 = pointReco->at(1).position.Y();
                    fPosZ_2 = pointReco->at(1).position.Z();
                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(0).position.X();
                    fPosY_3 = pointReco->at(0).position.Y();
                    fPosZ_3 = pointReco->at(0).position.Z();
                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(2).position.X();
                    fPosY_5 = pointReco->at(2).position.Y();
                    fPosZ_5 = pointReco->at(2).position.Z();
                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(1).value;
                    fEnergyCunc =  energy->at(1).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(2).value;
                    fEnergyFounc =  energy->at(2).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                    fTheta = T3;
                    fS = s; 
                    fECII->SetXYZT(i, s, 12, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeBS5->Fill();
                    fTreeB5->Fill();          
                    fTreeSB5->Fill(); 
                    fTreeSB->Fill();
                    
                    countE019++;
                    fPriEnergy = PriEn;

                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(2).position.X();
                    fPosY_2 = pointReco->at(2).position.Y();
                    fPosZ_2 = pointReco->at(2).position.Z();
                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(1).position.X();
                    fPosY_3 = pointReco->at(1).position.Y();
                    fPosZ_3 = pointReco->at(1).position.Z();
                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(2).value;
                    fEnergyCunc =  energy->at(2).uncertainty;
                    fEnergySe = energy->at(1).value;
                    fEnergySeunc =  energy->at(1).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                    fTheta = T2;
                    fS = s;
                    fECII->SetXYZT(i, s, 13, 0);
                    fEnDiff = fPriEnergy - fEnergy_1;
                    fTreeBS5->Fill();
                    fTreeB5->Fill();
                    fTreeSB5->Fill();
                    fTreeSB->Fill();
                    
                    countE020++;
                    fPriEnergy = PriEn;

                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(3).position.X();
                    fPosY_2 = pointReco->at(3).position.Y();
                    fPosZ_2 = pointReco->at(3).position.Z();
                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(2).position.X();
                    fPosY_3 = pointReco->at(2).position.Y();
                    fPosZ_3 = pointReco->at(2).position.Z();
                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                    fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(3).value;
                    fEnergyCunc =  energy->at(3).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                    fTheta = T1;
                            fS = s; 
                            fECII->SetXYZT(i, s, 14, 0);
                            fEnDiff = fPriEnergy - fEnergy_1;
                            fTreeBS5->Fill();
                            fTreeB5->Fill();
                            fTreeSB5->Fill();
                            fTreeSB->Fill();
                            
                        } else if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                            
                           countE0171++; 
                            
                        } else if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                            
                            countE0172++;
                            
                        } else if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                            
                            countE0173++;
                            
                        }
                        
            
                        countrsb5++;
                        
                    } else {
               
                        othercluster++; 
             //cout<< "other cluster number events" << endl;   
                    }
                
                
                } 
/* else if (RePos_p->at(0).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_p->at(0).X() <= (Absposition->X() + (Absthick_x/2)) && RePos_e->at(0).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_e->at(0).X() <= (Scatposition->X() + (Scatthick_x/2)) && RePos_p->at(1).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_p->at(1).X() <= (Absposition->X() + (Absthick_x/2))){
                 
/////////////////////////////////////////////////////////// Primary in Absorber - Electrons in Scatterer & Photons in Absorber events ////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////           
                    countPriAbs++;
                    
                    
                    if (s==2) {
               
                        
                      
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z())) {
                   
                      
                            countnanR2++;
                            continue;
                        }

                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
                     
/*                             
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                                discardedPA2++;
                                continue;
                            }
 */
/*

                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                discardedPA2++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                discardedPA2++;
                                continue;
                            }
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                                discardedPA2++;
                                continue;
                            }
*/


/*                            countPA2++;
                            fPriEnergy = PriEn;
                            fPos_eX = RePos_e->at(0).X();
                            fPos_eY = RePos_e->at(0).Y();
                            fPos_eZ = RePos_e->at(0).Z();
                            fPos_pX = RePos_p->at(1).X();
                            fPos_pY = RePos_p->at(1).Y();
                            fPos_pZ = RePos_p->at(1).Z();
                            fRealEnergy_e = fRealEnergy_e;
                            fRealEnergy_p = fRealEnergy_p;
                     fPosX_2 = pointReco->at(0).position.X();
                     fPosY_2 = pointReco->at(0).position.Y();
                     fPosZ_2 = pointReco->at(0).position.Z();
                     fPosX_2unc = pointReco->at(0).uncertainty.X();
                     fPosY_2unc = pointReco->at(0).uncertainty.Y();
                     fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                     fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                     fPosX_3 = 0;
                     fPosY_3 = 0;
                     fPosZ_3 = 0;
                     fPosX_3unc = 0;
                     fPosY_3unc = 0;
                     fPosZ_3unc = 0;
                             fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                     fEnergy_2 = energy->at(0).value;
                     fEnergy_2unc = energy->at(0).uncertainty;
                     fEnergyC = energy->at(0).value;
                     fEnergyCunc =  energy->at(0).uncertainty;
                     fEnergySe = 0;
                     fEnergySeunc = 0;
                      fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                            
                     fPosX_1 = pointReco->at(1).position.X();
                     fPosY_1 = pointReco->at(1).position.Y();
                     fPosZ_1 = pointReco->at(1).position.Z();
                     fPosX_1unc = pointReco->at(1).uncertainty.X();
                     fPosY_1unc = pointReco->at(1).uncertainty.Y();
                     fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                     fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                     fEnergy_1 = energy->at(1).value;
                     fEnergy_1unc = energy->at(1).uncertainty;
                     fEnergy_3 = fEnergy_1 + fEnergy_2;
                     fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                     fDiffEnergy = energy->at(0).value - energy->at(1).value;
                     fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                     fS = s;
                            fTheta = 0;
                            fTreeBS2->Fill();
                            fTreeB2->Fill();
                        }
                     
                        countBPA2++;
                        
                    } else if (s==3) {
                        
                      
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z())) {
                   
                          
                            countnanR3++;
                            continue;
                        }
                         
                      
                         
                        if (pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
/*                        
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                                discardedb3++;
                                continue;
                            }   
 */ 

/*
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb3++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb3++;
                                continue;
                            }
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                discardedb3++;
                                continue;
                            }
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                                discardedb3++;
                                continue;
                            }
                            
*/                            
                            
                            
                            
/*                            S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t L2 = A2A1.Mag();
                                                
                   Double_t cost12 = dot1/(M1*L1);
                   Double_t cost21 = dot2/(M2*L2);
                   
                   Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                   Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                   
                          
                                countPA3++;
                           
                                fPriEnergy = PriEn; 
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                           fPosX_1 = pointReco->at(2).position.X();
                           fPosY_1 = pointReco->at(2).position.Y();
                           fPosZ_1 = pointReco->at(2).position.Z();
                           fPosX_1unc = pointReco->at(2).uncertainty.X();
                           fPosY_1unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                           fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fEnergy_1 = energy->at(2).value;
                           fEnergy_1unc = energy->at(2).uncertainty;
                   
                           fPosX_2 = pointReco->at(1).position.X();
                           fPosY_2 = pointReco->at(1).position.Y();
                           fPosZ_2 = pointReco->at(1).position.Z();
                           fPosX_2unc = pointReco->at(1).uncertainty.X();
                           fPosY_2unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                           fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fPosX_3 = pointReco->at(0).position.X();
                           fPosY_3 = pointReco->at(0).position.Y();
                           fPosZ_3 = pointReco->at(0).position.Z();
                           fPosX_3unc = pointReco->at(0).uncertainty.X();
                           fPosY_3unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                            fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                           fEnergyC = energy->at(1).value;
                           fEnergyCunc = energy->at(1).uncertainty;
                           fEnergySe = energy->at(0).value;
                           fEnergySeunc = energy->at(0).uncertainty;
                           fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                           fEnergy_2 = energy->at(1).value + energy->at(0).value;
                           fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                           fEnergy_3 = fEnergy_1 + fEnergy_2;
                           fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                           fDiffEnergy = energy->at(1).value - energy->at(2).value;
                           fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                           fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                           fTheta = cost12;
                           //count31++;
                           fS = s;
                                  //fTreedB3->Fill();
                           fTreeBS3->Fill();
                           fTreeB3->Fill();
                           
                           countPA4++;
                           
                           fPriEnergy = PriEn;  
                           fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                           fPosX_1 = pointReco->at(2).position.X();
                           fPosY_1 = pointReco->at(2).position.Y();
                           fPosZ_1 = pointReco->at(2).position.Z();
                           fPosX_1unc = pointReco->at(2).uncertainty.X();
                           fPosY_1unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                           fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fEnergy_1 = energy->at(2).value;
                           fEnergy_1unc = energy->at(2).uncertainty;
                   
                           fPosX_2 = pointReco->at(0).position.X();
                           fPosY_2 = pointReco->at(0).position.Y();
                           fPosZ_2 = pointReco->at(0).position.Z();
                           fPosX_2unc = pointReco->at(0).uncertainty.X();
                           fPosY_2unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                           fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fPosX_3 = pointReco->at(1).position.X();
                           fPosY_3 = pointReco->at(1).position.Y();
                           fPosZ_3 = pointReco->at(1).position.Z();
                           fPosX_3unc = pointReco->at(1).uncertainty.X();
                           fPosY_3unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                   fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                           fEnergyC = energy->at(0).value;
                           fEnergyCunc = energy->at(0).uncertainty;
                           fEnergySe = energy->at(1).value;
                           fEnergySeunc = energy->at(1).uncertainty;
                            fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                           fEnergy_2 = energy->at(1).value + energy->at(0).value;
                           fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                           fEnergy_3 = fEnergy_1 + fEnergy_2;
                           fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                           fDiffEnergy = energy->at(0).value - energy->at(2).value;
                           fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                           fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                           fTheta = cost21;
                           //countb31++;
                                fS = s;
                                fTreeBS3->Fill();
                                fTreeB3->Fill();
                                
                            
                        }
            
                        countBPA3++;
                        
                    } else if (s==4) {
               
                    
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z())) {
                   
               
                            countnanR4++;
                            continue;
                        }
                         
                      
            
                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                                discardedb4++;
                                continue;
                            } 
 */               

/*
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb4++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            
                            if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            
                            
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                                discardedb4++;
                                continue;
                            }
                            
*/                            
                            
                            
/*                            S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                    A2A1 = -A1A2;
                                                
                    A1A3 = S1A3 - S1A1;
                                                
                    A3A1 = -A1A3;
                                                
                    A2A3 = S1A3 -S1A2;
                                                
                    A3A2 = -A2A3;
                                                
                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                    Double_t M1 = S1A1.Mag();
                    Double_t M2 = S1A2.Mag();
                    Double_t L1 = A1A2.Mag();
                    Double_t cost12 = dot1/(M1*L1);
                    Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                                                
                    Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L3 = A2A3.Mag();
                                                
                    Double_t cost23 = dot5/(M2*L3);
                    Double_t cost32 = dot6/(M3*L3);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13);
                    Double_t T2 = (1 + cost21 )*(1 + cost23);
                    Double_t T3 = (1 + cost31 )*(1 + cost32);
                    
                    Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                    Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                    Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());

                
                                countPA5++;          
                                fPriEnergy = PriEn;  
                                fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(2).position.X();
                        fPosY_2 = pointReco->at(2).position.Y();
                        fPosZ_2 = pointReco->at(2).position.Z();
                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(1).position.X();
                           fPosY_3 = pointReco->at(1).position.Y();
                           fPosZ_3 = pointReco->at(1).position.Z();
                           fPosX_3unc = pointReco->at(1).uncertainty.X();
                           fPosY_3unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(2).value;
                        fEnergyCunc = energy->at(2).uncertainty;
                        fEnergySe = energy->at(1).value;
                        fEnergySeunc = energy->at(1).uncertainty;
                        fEnergyTh = energy->at(0).value;
                        fEnergyThunc = energy->at(0).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(2).value - energy->at(3).value;
                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost12 )*(1 + cost13);
                        fS = s;
                                     //fTreedB4->Fill();
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                                      
                                countPA6++;             
                        fPriEnergy = PriEn;  
                        fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(1).position.X();
                        fPosY_2 = pointReco->at(1).position.Y();
                        fPosZ_2 = pointReco->at(1).position.Z();
                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(0).position.X();
                           fPosY_3 = pointReco->at(0).position.Y();
                           fPosZ_3 = pointReco->at(0).position.Z();
                           fPosX_3unc = pointReco->at(0).uncertainty.X();
                           fPosY_3unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                            fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(1).value;
                        fEnergyCunc = energy->at(1).uncertainty;
                        fEnergySe = energy->at(0).value;
                        fEnergySeunc =  energy->at(0).uncertainty;
                        fEnergyTh = energy->at(2).value;
                        fEnergyThunc = energy->at(2).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(1).value - energy->at(3).value;
                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost21)*(1 + cost23);
                        fS = s;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                        
                                    countPA7++;
                        fPriEnergy = PriEn; 
                        fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(0).position.X();
                        fPosY_2 = pointReco->at(0).position.Y();
                        fPosZ_2 = pointReco->at(0).position.Z();
                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(2).position.X();
                           fPosY_3 = pointReco->at(2).position.Y();
                           fPosZ_3 = pointReco->at(2).position.Z();
                           fPosX_3unc = pointReco->at(2).uncertainty.X();
                           fPosY_3unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                            fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(0).value;
                        fEnergyCunc = energy->at(0).uncertainty;
                        fEnergySe = energy->at(2).value;
                        fEnergySeunc = energy->at(2).uncertainty;
                        fEnergyTh = energy->at(1).value;
                        fEnergyThunc = energy->at(1).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(0).value - energy->at(3).value;
                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost31)*(1 + cost32);
                        fS = s;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                      
                                      
                        }
             
                        countBPA4++;
                        
                    } else if (s==5) {
               
                    
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z()) || isnan(pointReco->at(4).position.X()) || isinf(pointReco->at(4).position.X()) || isnan(pointReco->at(4).position.Y()) || isinf(pointReco->at(4).position.Y()) || isnan(pointReco->at(4).position.Z()) || isinf(pointReco->at(4).position.Z())) {
                   
                      
                
                            countnanR5++;
                            continue;
                        }
               
                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(3).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15)|| pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                                discardedb5++;
                                continue;
                            } 
*/ 
/*

                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb5++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if( pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 ||pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                                discardedb5++;
                                continue;
                            } 
*/

/*                            S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                            S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            A1A3 = S1A3 - S1A1;
                                                
                            A3A1 = -A1A3;
                    
                            A1A4 = S1A4 - S1A1;
                                                
                            A4A1 = -A1A4;
                                                
                            A2A3 = S1A3 -S1A2;
                                                
                            A3A2 = -A2A3;
                    
                            A2A4 = S1A4 -S1A2;
                                                
                            A4A2 = -A2A4;
                    
                            A3A4 = S1A4 -S1A3;
                                                
                            A4A3 = -A3A4;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t cost12 = dot1/(M1*L1);
                            Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                    
                    Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                    Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                    Double_t M4 = S1A4.Mag();
                    Double_t L3 = A1A4.Mag();
                                           
                    Double_t cost14 = dot5/(M1*L3);
                    Double_t cost41 = dot6/(M4*L3);
                                                
                    Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L4 = A2A3.Mag();
                                                
                    Double_t cost23 = dot7/(M2*L4);
                    Double_t cost32 = dot8/(M3*L4);
                    
                    Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                    Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                    Double_t L5 = A2A4.Mag();
                                                
                    Double_t cost24 = dot9/(M2*L5);
                    Double_t cost42 = dot10/(M4*L5);
                    
                    Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                    Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                    Double_t L6 = A3A4.Mag();
                                                
                    Double_t cost34 = dot11/(M3*L6);
                    Double_t cost43 = dot12/(M4*L6);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                    Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                    Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                    Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);

                    countPA8++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(0).position.X();
                    fPosY_2 = pointReco->at(0).position.Y();
                    fPosZ_2 = pointReco->at(0).position.Z();
                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(3).position.X();
                    fPosY_3 = pointReco->at(3).position.Y();
                    fPosZ_3 = pointReco->at(3).position.Z();
                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                    fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = pointReco->at(1).position.X();
                    fPosY_5 = pointReco->at(1).position.Y();
                    fPosZ_5 = pointReco->at(1).position.Z();
                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(0).value;
                    fEnergyCunc =  energy->at(0).uncertainty;
                    fEnergySe = energy->at(3).value;
                    fEnergySeunc =  energy->at(3).uncertainty;
                    fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = energy->at(1).value;
                    fEnergyFounc =  energy->at(1).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                    fTheta = T4;
                    fS = s; 
                    fTreeBS5->Fill();
                    fTreeB5->Fill();        

                    countPA9++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(1).position.X();
                    fPosY_2 = pointReco->at(1).position.Y();
                    fPosZ_2 = pointReco->at(1).position.Z();
                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(0).position.X();
                    fPosY_3 = pointReco->at(0).position.Y();
                    fPosZ_3 = pointReco->at(0).position.Z();
                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(2).position.X();
                    fPosY_5 = pointReco->at(2).position.Y();
                    fPosZ_5 = pointReco->at(2).position.Z();
                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(1).value;
                    fEnergyCunc =  energy->at(1).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(2).value;
                    fEnergyFounc =  energy->at(2).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                    fTheta = T3;
                    fS = s; 
                    fTreeBS5->Fill();
                    fTreeB5->Fill();          
                                  
                    countPA10++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(2).position.X();
                    fPosY_2 = pointReco->at(2).position.Y();
                    fPosZ_2 = pointReco->at(2).position.Z();
                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(1).position.X();
                    fPosY_3 = pointReco->at(1).position.Y();
                    fPosZ_3 = pointReco->at(1).position.Z();
                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(2).value;
                    fEnergyCunc =  energy->at(2).uncertainty;
                    fEnergySe = energy->at(1).value;
                    fEnergySeunc =  energy->at(1).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                    fTheta = T2;
                    fS = s; 
                    fTreeBS5->Fill();
                    fTreeB5->Fill();
                    
                    countPA11++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(3).position.X();
                    fPosY_2 = pointReco->at(3).position.Y();
                    fPosZ_2 = pointReco->at(3).position.Z();
                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(2).position.X();
                    fPosY_3 = pointReco->at(2).position.Y();
                    fPosZ_3 = pointReco->at(2).position.Z();
                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                    fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(3).value;
                    fEnergyCunc =  energy->at(3).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                    fTheta = T1;
                            fS = s; 
                            fTreeBS5->Fill();
                            fTreeB5->Fill();
                        }
            
                        countBPA5++;
                        
                    } else {
               
                        otherclusterPA++; 
             //cout<< "other cluster number events" << endl;   
                    }
                    
                    
                    
                } else if (RePos_p->at(0).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_p->at(0).X() <= (Scatposition->X() + (Scatthick_x/2)) && RePos_e->at(0).X() >= (Absposition->X() - (Absthick_x/2)) && RePos_e->at(0).X() <= (Absposition->X() + (Absthick_x/2)) && RePos_p->at(1).X() >= (Scatposition->X() - (Scatthick_x/2)) && RePos_p->at(1).X() <= (Scatposition->X() + (Scatthick_x/2))) {
                   
/////////////////////////////////////////////////////////// Primary in Scatterer - Electrons in Absorber & Photons in Scatterer events ////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////           
                    countPriScat++;
                    
                    if (s==2) {
               
                        
                      
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z())) {
                   
                      
               
                            countnanR2++;
                            continue;
                        }

                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(1).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
                     
/*                             
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                                discardedb2++;
                                continue;
                            }
 */
/*

                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                discardedb2++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                discardedb2++;
                                continue;
                            }
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45) {
                         
                                discardedb2++;
                                continue;
                            }
*/


/*                            countPS2++;
                            fPriEnergy = PriEn;
                            fPos_eX = RePos_e->at(0).X();
                            fPos_eY = RePos_e->at(0).Y();
                            fPos_eZ = RePos_e->at(0).Z();
                            fPos_pX = RePos_p->at(1).X();
                            fPos_pY = RePos_p->at(1).Y();
                            fPos_pZ = RePos_p->at(1).Z();
                            fRealEnergy_e = fRealEnergy_e;
                            fRealEnergy_p = fRealEnergy_p;
                     fPosX_2 = pointReco->at(0).position.X();
                     fPosY_2 = pointReco->at(0).position.Y();
                     fPosZ_2 = pointReco->at(0).position.Z();
                     fPosX_2unc = pointReco->at(0).uncertainty.X();
                     fPosY_2unc = pointReco->at(0).uncertainty.Y();
                     fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                     fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                     fPosX_3 = 0;
                     fPosY_3 = 0;
                     fPosZ_3 = 0;
                     fPosX_3unc = 0;
                     fPosY_3unc = 0;
                     fPosZ_3unc = 0;
                             fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                     fEnergy_2 = energy->at(0).value;
                     fEnergy_2unc = energy->at(0).uncertainty;
                     fEnergyC = energy->at(0).value;
                     fEnergyCunc =  energy->at(0).uncertainty;
                     fEnergySe = 0;
                     fEnergySeunc = 0;
                      fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                            
                     fPosX_1 = pointReco->at(1).position.X();
                     fPosY_1 = pointReco->at(1).position.Y();
                     fPosZ_1 = pointReco->at(1).position.Z();
                     fPosX_1unc = pointReco->at(1).uncertainty.X();
                     fPosY_1unc = pointReco->at(1).uncertainty.Y();
                     fPosZ_1unc = pointReco->at(1).uncertainty.Z();
                     fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                     fEnergy_1 = energy->at(1).value;
                     fEnergy_1unc = energy->at(1).uncertainty;
                     fEnergy_3 = fEnergy_1 + fEnergy_2;
                     fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                     fDiffEnergy = energy->at(0).value - energy->at(1).value;
                     fDiffPosX = pointReco->at(0).position.X() - pointReco->at(1).position.X();
                     fS = s;
                            fTheta = 0;
                            fTreeBS2->Fill();
                            fTreeB2->Fill();
                        }
                     
                        countBPS2++;
                        
                    } else if (s==3) {
                        
                      
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z())) {
                   
              
                            countnanR3++;
                            continue;
                        }
                         
                      
                         
                        if (pointReco->at(2).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(2).position.X() <= (Scatposition->X() + (Scatthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2))) {
                   
/*                        
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                                discardedb3++;
                                continue;
                            }   
 */ 

/*
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb3++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb3++;
                                continue;
                            }
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                discardedb3++;
                                continue;
                            }
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45) {
                       
                                discardedb3++;
                                continue;
                            }
                            
*/                            
                            
                            
                            
/*                            S1A1.SetXYZ(pointReco->at(1).position.X() - pointReco->at(2).position.X(), pointReco->at(1).position.Y() - pointReco->at(2).position.Y(), pointReco->at(1).position.Z() - pointReco->at(2).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(0).position.X() - pointReco->at(2).position.X(), pointReco->at(0).position.Y() - pointReco->at(2).position.Y(), pointReco->at(0).position.Z() - pointReco->at(2).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t L2 = A2A1.Mag();
                                                
                   Double_t cost12 = dot1/(M1*L1);
                   Double_t cost21 = dot2/(M2*L2);
                   
                   Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                   Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                   
                          
                                countPS3++;
                           
                                fPriEnergy = PriEn; 
                                fPos_eX = RePos_e->at(0).X();
                                fPos_eY = RePos_e->at(0).Y();
                                fPos_eZ = RePos_e->at(0).Z();
                                fPos_pX = RePos_p->at(1).X();
                                fPos_pY = RePos_p->at(1).Y();
                                fPos_pZ = RePos_p->at(1).Z();
                                fRealEnergy_e = fRealEnergy_e;
                                fRealEnergy_p = fRealEnergy_p;
                           fPosX_1 = pointReco->at(2).position.X();
                           fPosY_1 = pointReco->at(2).position.Y();
                           fPosZ_1 = pointReco->at(2).position.Z();
                           fPosX_1unc = pointReco->at(2).uncertainty.X();
                           fPosY_1unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                           fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fEnergy_1 = energy->at(2).value;
                           fEnergy_1unc = energy->at(2).uncertainty;
                   
                           fPosX_2 = pointReco->at(1).position.X();
                           fPosY_2 = pointReco->at(1).position.Y();
                           fPosZ_2 = pointReco->at(1).position.Z();
                           fPosX_2unc = pointReco->at(1).uncertainty.X();
                           fPosY_2unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                           fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fPosX_3 = pointReco->at(0).position.X();
                           fPosY_3 = pointReco->at(0).position.Y();
                           fPosZ_3 = pointReco->at(0).position.Z();
                           fPosX_3unc = pointReco->at(0).uncertainty.X();
                           fPosY_3unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                            fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                           fEnergyC = energy->at(1).value;
                           fEnergyCunc = energy->at(1).uncertainty;
                           fEnergySe = energy->at(0).value;
                           fEnergySeunc = energy->at(0).uncertainty;
                           fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                           fEnergy_2 = energy->at(1).value + energy->at(0).value;
                           fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                           fEnergy_3 = fEnergy_1 + fEnergy_2;
                           fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                           fDiffEnergy = energy->at(1).value - energy->at(2).value;
                           fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                           fDiffPosX = pointReco->at(1).position.X() - pointReco->at(2).position.X();
                           fTheta = cost12;
                           //count31++;
                           fS = s;
                                  //fTreedB3->Fill();
                           fTreeBS3->Fill();
                           fTreeB3->Fill();
                           
                           countPS4++;
                           fPriEnergy = PriEn;  
                           fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                           fPosX_1 = pointReco->at(2).position.X();
                           fPosY_1 = pointReco->at(2).position.Y();
                           fPosZ_1 = pointReco->at(2).position.Z();
                           fPosX_1unc = pointReco->at(2).uncertainty.X();
                           fPosY_1unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_1unc = pointReco->at(2).uncertainty.Z();
                           fPosScat->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fEnergy_1 = energy->at(2).value;
                           fEnergy_1unc = energy->at(2).uncertainty;
                   
                           fPosX_2 = pointReco->at(0).position.X();
                           fPosY_2 = pointReco->at(0).position.Y();
                           fPosZ_2 = pointReco->at(0).position.Z();
                           fPosX_2unc = pointReco->at(0).uncertainty.X();
                           fPosY_2unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                           fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                           fPosX_3 = pointReco->at(1).position.X();
                           fPosY_3 = pointReco->at(1).position.Y();
                           fPosZ_3 = pointReco->at(1).position.Z();
                           fPosX_3unc = pointReco->at(1).uncertainty.X();
                           fPosY_3unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                                   fPosX_4 = 0;
                    fPosY_4 = 0;
                    fPosZ_4 = 0;
                    fPosX_4unc = 0;
                    fPosY_4unc = 0;
                    fPosZ_4unc = 0;
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                           fEnergyC = energy->at(0).value;
                           fEnergyCunc = energy->at(0).uncertainty;
                           fEnergySe = energy->at(1).value;
                           fEnergySeunc = energy->at(1).uncertainty;
                            fEnergyTh = 0;
                        fEnergyThunc = 0;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                           fEnergy_2 = energy->at(1).value + energy->at(0).value;
                           fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty);
                           fEnergy_3 = fEnergy_1 + fEnergy_2;
                           fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                           fDiffEnergy = energy->at(0).value - energy->at(2).value;
                           fRatioEnergy = energy->at(0).value/(fEnergy_2); 
                           fDiffPosX = pointReco->at(0).position.X() - pointReco->at(2).position.X();
                           fTheta = cost21;
                           //countb31++;
                                fS = s;
                                fTreeBS3->Fill();
                                fTreeB3->Fill();
                                
                           
                        }
            
                        countBPS3++;
                        
                    } else if (s==4) {
               
                    
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z())) {
                   
                
                            countnanR4++;
                            continue;
                        }
                         
                      
            
                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(3).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                                discardedb4++;
                                continue;
                            } 
 */               

/*
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb4++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            
                            if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                                
                                discardedb4++;
                                continue;
                            }
                            
                            
                            if (pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45) {
                        
                                discardedb4++;
                                continue;
                            }
                            
*/                            
                            
                            
/*                            S1A1.SetXYZ(pointReco->at(2).position.X() - pointReco->at(3).position.X(), pointReco->at(2).position.Y() - pointReco->at(3).position.Y(), pointReco->at(2).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(1).position.X() - pointReco->at(3).position.X(), pointReco->at(1).position.Y() - pointReco->at(3).position.Y(), pointReco->at(1).position.Z() - pointReco->at(3).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(0).position.X() - pointReco->at(3).position.X(), pointReco->at(0).position.Y() - pointReco->at(3).position.Y(), pointReco->at(0).position.Z() - pointReco->at(3).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                    A2A1 = -A1A2;
                                                
                    A1A3 = S1A3 - S1A1;
                                                
                    A3A1 = -A1A3;
                                                
                    A2A3 = S1A3 -S1A2;
                                                
                    A3A2 = -A2A3;
                                                
                    Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                    Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                    Double_t M1 = S1A1.Mag();
                    Double_t M2 = S1A2.Mag();
                    Double_t L1 = A1A2.Mag();
                    Double_t cost12 = dot1/(M1*L1);
                    Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                                                
                    Double_t dot5 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot6 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L3 = A2A3.Mag();
                                                
                    Double_t cost23 = dot5/(M2*L3);
                    Double_t cost32 = dot6/(M3*L3);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13);
                    Double_t T2 = (1 + cost21 )*(1 + cost23);
                    Double_t T3 = (1 + cost31 )*(1 + cost32);
                    
                    Double_t A = abs(RePos_p->at(1).X() - pointReco->at(0).position.X());
                    Double_t B = abs(RePos_p->at(1).X() - pointReco->at(1).position.X());
                    Double_t C = abs(RePos_p->at(1).X() - pointReco->at(2).position.X());

                                countPS5++;          
                                fPriEnergy = PriEn;  
                                fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(2).position.X();
                        fPosY_2 = pointReco->at(2).position.Y();
                        fPosZ_2 = pointReco->at(2).position.Z();
                        fPosX_2unc = pointReco->at(2).uncertainty.X();
                        fPosY_2unc = pointReco->at(2).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(1).position.X();
                           fPosY_3 = pointReco->at(1).position.Y();
                           fPosZ_3 = pointReco->at(1).position.Z();
                           fPosX_3unc = pointReco->at(1).uncertainty.X();
                           fPosY_3unc = pointReco->at(1).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(0).position.X();
                    fPosY_4 = pointReco->at(0).position.Y();
                    fPosZ_4 = pointReco->at(0).position.Z();
                    fPosX_4unc = pointReco->at(0).uncertainty.X();
                    fPosY_4unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(0).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(2).value;
                        fEnergyCunc = energy->at(2).uncertainty;
                        fEnergySe = energy->at(1).value;
                        fEnergySeunc = energy->at(1).uncertainty;
                        fEnergyTh = energy->at(0).value;
                        fEnergyThunc = energy->at(0).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(2).value - energy->at(3).value;
                        fRatioEnergy = energy->at(2).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(2).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost12 )*(1 + cost13);
                        fS = s;
                                     //fTreedB4->Fill();
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                                      
                                    countPS6++;
                        fPriEnergy = PriEn;  
                        fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(1).position.X();
                        fPosY_2 = pointReco->at(1).position.Y();
                        fPosZ_2 = pointReco->at(1).position.Z();
                        fPosX_2unc = pointReco->at(1).uncertainty.X();
                        fPosY_2unc = pointReco->at(1).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(0).position.X();
                           fPosY_3 = pointReco->at(0).position.Y();
                           fPosZ_3 = pointReco->at(0).position.Z();
                           fPosX_3unc = pointReco->at(0).uncertainty.X();
                           fPosY_3unc = pointReco->at(0).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                            fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(1).value;
                        fEnergyCunc = energy->at(1).uncertainty;
                        fEnergySe = energy->at(0).value;
                        fEnergySeunc =  energy->at(0).uncertainty;
                        fEnergyTh = energy->at(2).value;
                        fEnergyThunc = energy->at(2).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(1).value - energy->at(3).value;
                        fRatioEnergy = energy->at(1).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(1).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost21)*(1 + cost23);
                        fS = s;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                        
                                countPS7++;
                        fPriEnergy = PriEn; 
                        fPos_eX = RePos_e->at(0).X();
                                       fPos_eY = RePos_e->at(0).Y();
                                       fPos_eZ = RePos_e->at(0).Z();
                                       fPos_pX = RePos_p->at(1).X();
                                       fPos_pY = RePos_p->at(1).Y();
                                       fPos_pZ = RePos_p->at(1).Z();
                                       fRealEnergy_e = fRealEnergy_e;
                                       fRealEnergy_p = fRealEnergy_p;
                        fPosX_1 = pointReco->at(3).position.X();
                        fPosY_1 = pointReco->at(3).position.Y();
                        fPosZ_1 = pointReco->at(3).position.Z();
                        fPosX_1unc = pointReco->at(3).uncertainty.X();
                        fPosY_1unc = pointReco->at(3).uncertainty.Y();
                        fPosZ_1unc = pointReco->at(3).uncertainty.Z();
                        fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                        fEnergy_1 = energy->at(3).value;
                        fEnergy_1unc = energy->at(3).uncertainty;
                    
                        fPosX_2 = pointReco->at(0).position.X();
                        fPosY_2 = pointReco->at(0).position.Y();
                        fPosZ_2 = pointReco->at(0).position.Z();
                        fPosX_2unc = pointReco->at(0).uncertainty.X();
                        fPosY_2unc = pointReco->at(0).uncertainty.Y();
                        fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                        fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                        fPosX_3 = pointReco->at(2).position.X();
                           fPosY_3 = pointReco->at(2).position.Y();
                           fPosZ_3 = pointReco->at(2).position.Z();
                           fPosX_3unc = pointReco->at(2).uncertainty.X();
                           fPosY_3unc = pointReco->at(2).uncertainty.Y();
                           fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                            fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = 0;
                    fPosY_5 = 0;
                    fPosZ_5 = 0;
                    fPosX_5unc = 0;
                    fPosY_5unc = 0;
                    fPosZ_5unc = 0;
                        fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value;
                        fEnergy_2unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty);
                        fEnergyC = energy->at(0).value;
                        fEnergyCunc = energy->at(0).uncertainty;
                        fEnergySe = energy->at(2).value;
                        fEnergySeunc = energy->at(2).uncertainty;
                        fEnergyTh = energy->at(1).value;
                        fEnergyThunc = energy->at(1).uncertainty;
                        fEnergyFo = 0;
                        fEnergyFounc = 0;
                        fEnergy_3 = fEnergy_1 + fEnergy_2;
                        fEnergy_3unc = (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                        fDiffEnergy = energy->at(0).value - energy->at(3).value;
                        fRatioEnergy = energy->at(0).value/(fEnergy_2);  
                        fDiffPosX = pointReco->at(0).position.X() - pointReco->at(3).position.X();
                        fTheta = (1 + cost31)*(1 + cost32);
                        fS = s;
                        fTreeBS4->Fill();
                        fTreeB4->Fill();
                       
                                      
                        }
             
                        countBPS4++;
                        
                    } else if (s==5) {
               
                    
                        if (isnan(pointReco->at(0).position.X()) || isinf(pointReco->at(0).position.X()) || isnan(pointReco->at(0).position.Y()) || isinf(pointReco->at(0).position.Y()) || isnan(pointReco->at(0).position.Z()) || isinf(pointReco->at(0).position.Z()) || isnan(pointReco->at(1).position.X()) || isinf(pointReco->at(1).position.X()) || isnan(pointReco->at(1).position.Y()) || isinf(pointReco->at(1).position.Y()) || isnan(pointReco->at(1).position.Z()) || isinf(pointReco->at(1).position.Z()) || isnan(pointReco->at(2).position.X()) || isinf(pointReco->at(2).position.X()) || isnan(pointReco->at(2).position.Y()) || isinf(pointReco->at(2).position.Y()) || isnan(pointReco->at(2).position.Z()) || isinf(pointReco->at(2).position.Z()) || isnan(pointReco->at(3).position.X()) || isinf(pointReco->at(3).position.X()) || isnan(pointReco->at(3).position.Y()) || isinf(pointReco->at(3).position.Y()) || isnan(pointReco->at(3).position.Z()) || isinf(pointReco->at(3).position.Z()) || isnan(pointReco->at(4).position.X()) || isinf(pointReco->at(4).position.X()) || isnan(pointReco->at(4).position.Y()) || isinf(pointReco->at(4).position.Y()) || isnan(pointReco->at(4).position.Z()) || isinf(pointReco->at(4).position.Z())) {
                   
                
                            countnanR5++;
                            continue;
                        }
               
                        if (pointReco->at(0).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(0).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(1).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(1).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(2).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(2).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(3).position.X() >= (Absposition->X() - (Absthick_x/2)) && pointReco->at(3).position.X() <= (Absposition->X() + (Absthick_x/2)) && pointReco->at(4).position.X() >= (Scatposition->X() - (Scatthick_x/2)) && pointReco->at(4).position.X() <= (Scatposition->X() + (Scatthick_x/2))) {
                    
/*                          
                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15) || pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 || (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15)|| pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                                discardedb5++;
                                continue;
                            } 
*/ 
/*

                            if((pointReco->at(0).position.Y() <= 0.15 && pointReco->at(0).position.Y() >= -0.15)) {
                                
                                discardedb5++;
                                continue;
                                
                            }
                            if (pointReco->at(1).position.Y() <= 0.15 && pointReco->at(1).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if (pointReco->at(2).position.Y() <= 0.15 && pointReco->at(2).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            if (pointReco->at(3).position.Y() <= 0.15 && pointReco->at(3).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if (pointReco->at(4).position.Y() <= 0.15 && pointReco->at(4).position.Y() >= -0.15) {
                                
                                discardedb5++;
                                continue;
                            }
                            
                            if( pointReco->at(0).position.Y() <= -45 || pointReco->at(0).position.Y() >= 45 || pointReco->at(1).position.Y() <= -45 || pointReco->at(1).position.Y() >= 45 || pointReco->at(2).position.Y() <= -45 || pointReco->at(2).position.Y() >= 45 || pointReco->at(3).position.Y() <= -45 || pointReco->at(3).position.Y() >= 45 ||pointReco->at(4).position.Y() <= -45 || pointReco->at(4).position.Y() >= 45) {
                        
                                discardedb5++;
                                continue;
                            } 
*/

/*                            S1A1.SetXYZ(pointReco->at(3).position.X() - pointReco->at(4).position.X(), pointReco->at(3).position.Y() - pointReco->at(4).position.Y(), pointReco->at(3).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A2.SetXYZ(pointReco->at(2).position.X() - pointReco->at(4).position.X(), pointReco->at(2).position.Y() - pointReco->at(4).position.Y(), pointReco->at(2).position.Z() - pointReco->at(4).position.Z());
                                                
                            S1A3.SetXYZ(pointReco->at(1).position.X() - pointReco->at(4).position.X(), pointReco->at(1).position.Y() - pointReco->at(4).position.Y(), pointReco->at(1).position.Z() - pointReco->at(4).position.Z());
                    
                            S1A4.SetXYZ(pointReco->at(0).position.X() - pointReco->at(4).position.X(), pointReco->at(0).position.Y() - pointReco->at(4).position.Y(), pointReco->at(0).position.Z() - pointReco->at(4).position.Z());
                                                
                            A1A2 = S1A2 - S1A1;
                                                
                            A2A1 = -A1A2;
                                                
                            A1A3 = S1A3 - S1A1;
                                                
                            A3A1 = -A1A3;
                    
                            A1A4 = S1A4 - S1A1;
                                                
                            A4A1 = -A1A4;
                                                
                            A2A3 = S1A3 -S1A2;
                                                
                            A3A2 = -A2A3;
                    
                            A2A4 = S1A4 -S1A2;
                                                
                            A4A2 = -A2A4;
                    
                            A3A4 = S1A4 -S1A3;
                                                
                            A4A3 = -A3A4;
                                                
                            Double_t dot1 = S1A1.X()*A1A2.X() + S1A1.Y()*A1A2.Y() + S1A1.Z()*A1A2.Z();
                            Double_t dot2 = S1A2.X()*A2A1.X() + S1A2.Y()*A2A1.Y() + S1A2.Z()*A2A1.Z();
                            Double_t M1 = S1A1.Mag();
                            Double_t M2 = S1A2.Mag();
                            Double_t L1 = A1A2.Mag();
                            Double_t cost12 = dot1/(M1*L1);
                            Double_t cost21 = dot2/(M2*L1);
                                                
                    Double_t dot3 = S1A1.X()*A1A3.X() + S1A1.Y()*A1A3.Y() + S1A1.Z()*A1A3.Z();
                    Double_t dot4 = S1A3.X()*A3A1.X() + S1A3.Y()*A3A1.Y() + S1A3.Z()*A3A1.Z();
                                                
                    Double_t M3 = S1A3.Mag();
                    Double_t L2 = A1A3.Mag();
                                           
                    Double_t cost13 = dot3/(M1*L2);
                    Double_t cost31 = dot4/(M3*L2);
                    
                    Double_t dot5 = S1A1.X()*A1A4.X() + S1A1.Y()*A1A4.Y() + S1A1.Z()*A1A4.Z();
                    Double_t dot6 = S1A4.X()*A4A1.X() + S1A4.Y()*A4A1.Y() + S1A4.Z()*A4A1.Z();
                                                
                    Double_t M4 = S1A4.Mag();
                    Double_t L3 = A1A4.Mag();
                                           
                    Double_t cost14 = dot5/(M1*L3);
                    Double_t cost41 = dot6/(M4*L3);
                                                
                    Double_t dot7 = S1A2.X()*A2A3.X() + S1A2.Y()*A2A3.Y() + S1A2.Z()*A2A3.Z();
                    Double_t dot8 = S1A3.X()*A3A2.X() + S1A3.Y()*A3A2.Y() + S1A3.Z()*A3A2.Z();
                                                
                    Double_t L4 = A2A3.Mag();
                                                
                    Double_t cost23 = dot7/(M2*L4);
                    Double_t cost32 = dot8/(M3*L4);
                    
                    Double_t dot9 = S1A2.X()*A2A4.X() + S1A2.Y()*A2A4.Y() + S1A2.Z()*A2A4.Z();
                    Double_t dot10 = S1A4.X()*A4A2.X() + S1A4.Y()*A4A2.Y() + S1A4.Z()*A4A2.Z();
                                                
                    Double_t L5 = A2A4.Mag();
                                                
                    Double_t cost24 = dot9/(M2*L5);
                    Double_t cost42 = dot10/(M4*L5);
                    
                    Double_t dot11 = S1A3.X()*A3A4.X() + S1A3.Y()*A3A4.Y() + S1A3.Z()*A3A4.Z();
                    Double_t dot12 = S1A4.X()*A4A3.X() + S1A4.Y()*A4A3.Y() + S1A4.Z()*A4A3.Z();
                                                
                    Double_t L6 = A3A4.Mag();
                                                
                    Double_t cost34 = dot11/(M3*L6);
                    Double_t cost43 = dot12/(M4*L6);
                                  
                    Double_t T1 = (1 + cost12 )*(1 + cost13)*(1 + cost14);
                    Double_t T2 = (1 + cost21 )*(1 + cost23)*(1 + cost24);
                    Double_t T3 = (1 + cost31 )*(1 + cost32)*(1 + cost34);
                    Double_t T4 = (1 + cost41 )*(1 + cost42)*(1 + cost43);

                    countPS8++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(0).position.X();
                    fPosY_2 = pointReco->at(0).position.Y();
                    fPosZ_2 = pointReco->at(0).position.Z();
                    fPosX_2unc = pointReco->at(0).uncertainty.X();
                    fPosY_2unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(0).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(3).position.X();
                    fPosY_3 = pointReco->at(3).position.Y();
                    fPosZ_3 = pointReco->at(3).position.Z();
                    fPosX_3unc = pointReco->at(3).uncertainty.X();
                    fPosY_3unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(3).uncertainty.Z();
                    fPosX_4 = pointReco->at(2).position.X();
                    fPosY_4 = pointReco->at(2).position.Y();
                    fPosZ_4 = pointReco->at(2).position.Z();
                    fPosX_4unc = pointReco->at(2).uncertainty.X();
                    fPosY_4unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(2).uncertainty.Z();
                    fPosX_5 = pointReco->at(1).position.X();
                    fPosY_5 = pointReco->at(1).position.Y();
                    fPosZ_5 = pointReco->at(1).position.Z();
                    fPosX_5unc = pointReco->at(1).uncertainty.X();
                    fPosY_5unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(1).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(0).value;
                    fEnergyCunc =  energy->at(0).uncertainty;
                    fEnergySe = energy->at(3).value;
                    fEnergySeunc =  energy->at(3).uncertainty;
                    fEnergyTh = energy->at(2).value;
                    fEnergyThunc =  energy->at(2).uncertainty;
                    fEnergyFo = energy->at(1).value;
                    fEnergyFounc =  energy->at(1).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(0).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(0).position.X() - pointReco->at(4).position.X();
                    fTheta = T4;
                    fS = s; 
                    fTreeBS5->Fill();
                    fTreeB5->Fill();        

                    countPS9++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(1).position.X();
                    fPosY_2 = pointReco->at(1).position.Y();
                    fPosZ_2 = pointReco->at(1).position.Z();
                    fPosX_2unc = pointReco->at(1).uncertainty.X();
                    fPosY_2unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(1).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(0).position.X();
                    fPosY_3 = pointReco->at(0).position.Y();
                    fPosZ_3 = pointReco->at(0).position.Z();
                    fPosX_3unc = pointReco->at(0).uncertainty.X();
                    fPosY_3unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(0).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(2).position.X();
                    fPosY_5 = pointReco->at(2).position.Y();
                    fPosZ_5 = pointReco->at(2).position.Z();
                    fPosX_5unc = pointReco->at(2).uncertainty.X();
                    fPosY_5unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(2).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(1).value;
                    fEnergyCunc =  energy->at(1).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(2).value;
                    fEnergyFounc =  energy->at(2).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty + energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(1).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(1).position.X() - pointReco->at(4).position.X();
                    fTheta = T3;
                    fS = s; 
                    fTreeBS5->Fill();
                    fTreeB5->Fill();          
                                  
                    countPS10++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(2).position.X();
                    fPosY_2 = pointReco->at(2).position.Y();
                    fPosZ_2 = pointReco->at(2).position.Z();
                    fPosX_2unc = pointReco->at(2).uncertainty.X();
                    fPosY_2unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(2).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(1).position.X();
                    fPosY_3 = pointReco->at(1).position.Y();
                    fPosZ_3 = pointReco->at(1).position.Z();
                    fPosX_3unc = pointReco->at(1).uncertainty.X();
                    fPosY_3unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(1).uncertainty.Z();
                    fPosX_4 = pointReco->at(3).position.X();
                    fPosY_4 = pointReco->at(3).position.Y();
                    fPosZ_4 = pointReco->at(3).position.Z();
                    fPosX_4unc = pointReco->at(3).uncertainty.X();
                    fPosY_4unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(3).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(2).value;
                    fEnergyCunc =  energy->at(2).uncertainty;
                    fEnergySe = energy->at(1).value;
                    fEnergySeunc =  energy->at(1).uncertainty;
                    fEnergyTh = energy->at(3).value;
                    fEnergyThunc =  energy->at(3).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(2).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(2).position.X() - pointReco->at(4).position.X();
                    fTheta = T2;
                    fS = s; 
                    fTreeBS5->Fill();
                    fTreeB5->Fill();
                    
                    countPS11++;
                    fPriEnergy = PriEn;
//                     fPos_eX = RePos_e->at(0).X();
//                                        fPos_eY = RePos_e->at(0).Y();
//                                        fPos_eZ = RePos_e->at(0).Z();
//                                        fPos_pX = RePos_p->at(1).X();
//                                        fPos_pY = RePos_p->at(1).Y();
//                                        fPos_pZ = RePos_p->at(1).Z();
                                        fRealEnergy_e = fRealEnergy_e;
                                        fRealEnergy_p = fRealEnergy_p;
                    fPosX_2 = pointReco->at(3).position.X();
                    fPosY_2 = pointReco->at(3).position.Y();
                    fPosZ_2 = pointReco->at(3).position.Z();
                    fPosX_2unc = pointReco->at(3).uncertainty.X();
                    fPosY_2unc = pointReco->at(3).uncertainty.Y();
                    fPosZ_2unc = pointReco->at(3).uncertainty.Z();
                    fPosAbs->SetXYZ(fPosX_2,fPosY_2,fPosZ_2);
                    fPosX_3 = pointReco->at(2).position.X();
                    fPosY_3 = pointReco->at(2).position.Y();
                    fPosZ_3 = pointReco->at(2).position.Z();
                    fPosX_3unc = pointReco->at(2).uncertainty.X();
                    fPosY_3unc = pointReco->at(2).uncertainty.Y();
                    fPosZ_3unc = pointReco->at(2).uncertainty.Z();
                    fPosX_4 = pointReco->at(1).position.X();
                    fPosY_4 = pointReco->at(1).position.Y();
                    fPosZ_4 = pointReco->at(1).position.Z();
                    fPosX_4unc = pointReco->at(1).uncertainty.X();
                    fPosY_4unc = pointReco->at(1).uncertainty.Y();
                    fPosZ_4unc = pointReco->at(1).uncertainty.Z();
                    fPosX_5 = pointReco->at(0).position.X();
                    fPosY_5 = pointReco->at(0).position.Y();
                    fPosZ_5 = pointReco->at(0).position.Z();
                    fPosX_5unc = pointReco->at(0).uncertainty.X();
                    fPosY_5unc = pointReco->at(0).uncertainty.Y();
                    fPosZ_5unc = pointReco->at(0).uncertainty.Z();
                    fEnergy_2 = energy->at(0).value + energy->at(1).value + energy->at(2).value + energy->at(3).value;
                    fEnergy_2unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty + energy->at(3).uncertainty);
                    fEnergyC = energy->at(3).value;
                    fEnergyCunc =  energy->at(3).uncertainty;
                    fEnergySe = energy->at(0).value;
                    fEnergySeunc =  energy->at(0).uncertainty;
                    fEnergyTh = energy->at(1).value;
                    fEnergyThunc =  energy->at(1).uncertainty;
                    fEnergyFo = energy->at(0).value;
                    fEnergyFounc =  energy->at(0).uncertainty;
                    
                    fPosX_1 = pointReco->at(4).position.X();
                    fPosY_1 = pointReco->at(4).position.Y();
                    fPosZ_1 = pointReco->at(4).position.Z();
                    fPosX_1unc = pointReco->at(4).uncertainty.X();
                    fPosY_1unc = pointReco->at(4).uncertainty.Y();
                    fPosZ_1unc = pointReco->at(4).uncertainty.Z();
                    fPosScat->SetXYZ(fPosX_1,fPosY_1,fPosZ_1);
                    fEnergy_1 = energy->at(4).value;
                    fEnergy_1unc =  energy->at(4).uncertainty;
                    fEnergy_3 = fEnergy_1 + fEnergy_2;
                    fEnergy_3unc =  (energy->at(1).uncertainty + energy->at(0).uncertainty + energy->at(2).uncertainty+ energy->at(3).uncertainty+ energy->at(4).uncertainty);
                    fDiffEnergy = energy->at(3).value - energy->at(4).value;
                    fDiffPosX = pointReco->at(3).position.X() - pointReco->at(4).position.X();
                    fTheta = T1;
                            fS = s; 
                            fTreeBS5->Fill();
                            fTreeB5->Fill();
                        }
            
                        countBPS5++;
                        
                    } else {
               
                        otherclusterPS++; 
             //cout<< "other cluster number events" << endl;   
                    }
//            }  
                    
                    
                }
*/           
           
        }
       
      

//////////////new version ////////////////////////       
        RePos_p->clear();
        RePos_e->clear();
//       }
///////////////////////////////////////
  
    }
    
  
  
  
    SaveToFile(Pri);
    SaveToFile(Pri1);
    SaveToFile(Prirb);
    SaveToFile(Pribs);
    SaveToFile(ZPE);
    
    fNevS = fStop - fStart;
    fTree_stat->Fill();
    
    
//  SaveToFile(Sum);
/*
  SaveToFile(angendifff);
  SaveToFile(angendifft);
  SaveToFile(angenf);
  SaveToFile(angent);
  SaveToFile(endcf);
  SaveToFile(endct);
  SaveToFile(angencf);
  SaveToFile(angenct);
  SaveToFile(angposf);
  SaveToFile(angpost);
  SaveToFile(ensaf);
  SaveToFile(ensat);*/
  
    count22 = count1 + count2;
  
  
    int countdup313 = countdup31 + countdup32 + countdup33 + countdup34 + countdup35 + countdup36 + countdup37 + countdup38+ countdup39 + countdup310 + countdup311 + countdup312;
  
    int count411 = count41 + count42 + count43 /*+ count44 + count45 + count46 + count47 + count48 + count49 + count410*/;
    int count55 = count51 + count52 + count53 + count54;
    countdup4 = countdup411 + countdup412 + countdup4211 + countdup4222 + countdup4311 + countdup4322 + countdup41 + countdup42 + countdup43 + countdup44 + countdup45 + countdup46 + countdup47 + countdup48 + countdup49 + countdup410 + countdup413 + countdup414 + countdup415 + countdup416 + countdup417 + countdup418 + countdup419 + countdup420 + countdup421 + countdup422 + countdup423 + countdup424 + countdup425 + countdup426 + countdup427 + countdup428 + countdup429 + countdup430 + countdup431 + countdup432 + countdup433 + countdup434 + countdup435 + countdup436 + countdup437 + countdup438 + countdup439 + countdup440; 
  
    int countbacks1 = countback11 + countback12 + countback13 + countback14 + countback15;
  
    countbackall = countback1 + countback2 + countback3 + countback4 + countback5;

    cout<< "----------------------------------------------"<<endl;
    cout << " Real-Qualified events : " << countQR << " , sum : " << count4 << " + " << countdisc1 + countdisc2 + countdisc3 + countdisc4 << " + " << countb26 + countb39 + countb418 + countb520 << " = " << count4 + (countdisc1 + countdisc2 + countdisc3 + countdisc4) + (countb26 + countb39 + countb418 + countb520) << endl << endl;
  
    cout << " S==2 : " /*<< countr21 << " + " << countr22 << " = "*/ << countr2 << "  S==3 : " << countr3 << "  S==4 : " << countr4 << "  S==5 : " << countr5<< "  Others : " << countrall << endl << endl;
    
    cout << " True events s==2 : " << count22 << endl << endl;
    cout << " Total Bad events s==2 : " << countb21 << " + " << countb22 << " + " << countb23 << " + " << countb24 << " = " << countb21 + countb22 + countb23 + countb24 << " , P.P = " << countb25 << " , " << countb24 << ", discarded events : " << countdisc1 <<" , not acceptable : " << countb26 << endl << endl; 
    cout << " Reco ( nan - s=2 ) : " << countnan2 << endl<<endl;
  
    
    cout << " True events s==3 : " << count31 << " + " << count32 << " = " << count31 + count32 /*<< " , "<< count34*/ << endl << endl;
  
    cout << " Total Bad events s==3 : " /*<< countdup313 << " + "*/ << countb31 << " + " << countb32 << " = " << countb31 + countb32 << " , " << countb34 << " + " <<    countb35 << " + " << countb36 << " + " << countb37 << /*" + " << countb37 << " + " << countb38  << " + " << countb39 << " + " << countb310  <<*/" = " << /*countdup313 + countb33 + */countb34 + countb35 + countb36 + countb37 /*+ countb38 + countb39 + countb310*/<< " , case (2+1) : " << countb310 << " , P.P (1+2)= " << countb33 << " , " << countb38 << " , P.P (2+1)= " << countb311 << ", discarded events : "<< countdisc2 << " , not acceptable : " << countb39 << endl << endl;
  
    cout << " Reco ( nan - s=3 ) : " << countnan3 << endl<<endl;
    
    cout << " True events s==4 : " << count41 << " + " << count42 << " + "<< count43 << /*" + " << count44 << " + " << count45 << " + " << count46 << " + "<< count47 << " + " << count48 << " + "<< count49 << " + " << count410 <<*/ " = " << count411 << endl << endl;
  
  
  
    cout << " Total Bad events s==4 : "/* << countdup4 << " + "*/ << countb41 << " + " << countb42 << " + " /*<< countb43 << " + "*/ << countb44 << " + " << countb45 << " + " << countb46 << " + " << countb47 <<  " = " << /*countdup4 +*/ countb41 + countb42 /*+ countb43*/ + countb44 + countb45 + countb46 + countb47 /*+ countb48 + countb49 + countb410 + countb411 + countb412 + countb413 + countb414 + countb415 + countb416 + countb417*/ /*+ countb418 + countb419 + countb420*/ << " , "<< countb48 << " + " << countb49 << " + " << countb410 << " + " << countb411  << " = " << countb48 + countb49 + countb410 + countb411  << " , case (2+2) : " << countb412 << " , case (3+1) : " << countb414 << " , P.P (1+3)= " << countb43 << " , " << countb419 << " , P.P (2+2) = " << countb413 << " , P.P (3+1) = " << countb415 << ", discarded events : "<< countdisc3 << " , not acceptable : " << countb418<< endl << endl;
  
    cout << " Reco ( nan - s=4 ) : " << countnan4 << endl<<endl;
  
  
    cout << " True events s==5 : " << count51 << " + " << count52 << " + "<< count53 << " + " << count54 <</* " + " << count45 << " + " << count46 << " + "<< count47 << " + " << count48 << " + "<< count49 << " + " << count410 <<*/ " = " << count55 << endl << endl;
    
    cout << " Total Bad events s==5 : " << countb51 << " + " << countb52 << " + " << countb53 << " + " << countb54 << " + " << countb55 << " + " << countb56 << " + " << countb57 << " + " << countb58 << " + " << countb59 << " + " << countb510 << " + " << countb511 << " + " << countb512 <<" = " << countb51 + countb52 + countb53 + countb54 + countb55 + countb56 + countb57 + countb58 + countb59 + countb510 + countb511 + countb512/* + countb413 + countb414 + countb415 + countb416 + countb417*/ /*+ countb418 + countb419 + countb420*/ << " , "<< countb513 << " + " << countb514 << " + " << countb515 << " + " << countb516  << " = " << countb513 + countb514 + countb515 + countb516  << " , case (2+3) : " << countb517 << " , case (3+2) : " << countb518 << " , case (4+1)= " << countb519 << ", discarded events : "<< countdisc5 << " , not acceptable : " << countb520<< endl << endl;
    
    cout << " Reco ( nan - s=5 ) : " << countnan5 << endl<<endl;
    
    
    
    cout << " Backscattering, PriInAbs & PriInScat : " << countback << " + " << countPriAbs << " + " << countPriScat << " = " <<  countback + countPriAbs + countPriScat << endl << endl;
  //cout << " Real-Background : s=1 : " << countrs11 << " + " << countrs12 << " + " << countrs13 << " + " << countrs14 << " = " << countrs11+countrs12+ countrs13+countrs14 << " , " << countrs1 <<endl << endl;
    cout << " No second gamma interaction - Real Background  : " << countnosecondinteract << endl << endl;
    cout << " Real back ( nan - s=2 ) : " << countnanR2 << ", Real back s=2  : " << countrs2 << ", back-scattering s=2  : " << countrsb2 << ", Others s=2  : " << countBPA2 + countBPS2 << endl << endl;
 
    cout << " Real back ( nan - s=3 ) : " << countnanR3 << ", Real back s=3  : " << countrs3 << ", back-scattering s=3  : " << countrsb3 << ", Others s=3  : " << countBPA3 + countBPS3 << endl << endl;
 
    cout << " Real back ( nan - s=4 ) : " << countnanR4 << ", Real back s=4  : " << countrs4 << ",  back-scattering s=4  : " << countrsb4 << ", Others s=4  : " << countBPA4 + countBPS4 << endl << endl;
 
    cout << " Real back ( nan - s=5 ) : " << countnanR5 << ", Real back s=5  : " << countrs5 << ",  back-scattering s=5  : " << countrsb5 << ", Others s=5  : " << countBPA5 + countBPS5 << endl << endl;
    
    
    cout << " not a number : " << countnan << endl << endl;
    cout << " Energy zero(RB) + Back-scattering events & Others : "<< " s = 2 : " << countE01 << " , " << countE02 << " , " << countE021 << " , " << countPA2 << " , " << countPS2 << " , else : " << countE0 << " , "<< " s = 3 : "  << countE03 << " , " << countE04 << " , " << countE05 << " , " << countE06 << " , " << countE051 /*<< " , " << countE052*/ << " , " << countPA3 << " , " << countPA4 << " , " << countPS3 << " , " << countPS4 << " , else : " << countE1 << " , " << " s = 4 : " << countE07 << " , " << countE08 << " , " << countE09 << " , " << countE010 << " , " << countE011 << " , " << countE012 << " , " << countE0101 << " , " << countE0102 /*<< " , " << countE0103*/ << " , " << countPA5 << " , " << countPA6 << " , " << countPA7 << " , " << countPS5 << " , " << countPS6 << " , " << countPS7 << " s = 5 : " << countE013 << " , " << countE014 << " , " << countE015 << " , " << countE016 << " , " << countE017 << " , " << countE018 << " , " << countE019 << " , " << countE020 << " , " << countE0171 << " , " << countE0172 << " , " << countE0173 << /*" , " << countE0174 <<*/ " , " << countPA8 << " , " << countPA9 << " , " << countPA10 << " , " << countPA11 << " , " << countPS8 << " , " << countPS9 << " , " << countPS10 << " , " << countPS11 << endl << endl;
  
    cout << "discarded s=2 : " << discarded2 << " , discarded s=2 (others like backscattering) : " << discardedb2 << ", discarded s=3 : " << discarded3 << " , discarded s=3 (others like backscattering) : " << discardedb3 <<" , discarded s=4 : " << discarded4 << " , discarded s=4 (others like backscattering) : " << discardedb4 << " , discarded s=5 : " << discarded5 << " , discarded s=5 (others like backscattering) : " << discardedb5 << endl << endl;
    
    cout << "other cluster numbers (backscattering ,...) : " << othercluster + otherclusterPA + otherclusterPS << " , other cluster numbers (zero energy ,...) : " << othercluster1 << endl << endl;
    cout << " PriEnRealBack : " << countPriEnBackground << "," << countPriEnBackground - (discarded2 + discarded3 + discarded4 + discarded5) << endl << endl;
    cout << " Not acceptable interaction  : " << countnotaccept << endl << endl;
    cout<< " Total events = " << " Real-Qualified : "<< count4 << " + " << " Real-Background : " << countnosecondinteract << " + " << " BackScattering : " << countback << " + " << " PrimaryInAbs : " << countPriAbs << " + " << " PrimaryInScat : " << countPriScat << " + " << " -nan :" << countnan << " = " << count4 + countnosecondinteract + countback + countPriAbs + countPriScat + countnan << endl;
    
    cout << " Total events number : " << counter1 << endl;
  
  
    return kTRUE;

}

//------------------------------------
/// Reads configuration file and sets values of private class
/// members according to read information.
///\param path (TString) - full path to the configuration file.
Bool_t EIComp::ReadConfig(TString path) {
    

    ifstream config(path);

    if (!(config.is_open())) {
        
        cout << "##### Could not open configuration file!" << endl;
        return kFALSE;
    }

    cout << "\n\nIn EIMVA::Config(). Reading config file..." << endl;

    TString comment;

    while (!config.eof()) {
        
        comment.ReadLine(config);
        if (comment.Contains("Name of the input file")) {
            
            config >> fInputName;
            if (!fInputName.Contains(".root")) {
                
                cout << "##### Error in EIMVA::Config()! Unknown file type!" << endl;
                return false;
            }
            
        } else if (comment.Contains("No. of first and last event")) {
            
            config >> fStart >> fStop;
            if (fStart < 0 || fStop < 0 || fStop < fStart) {
                
                cout << "##### Error in EIMVA::Config()! Number of first or last "
                "event incorrect!"<< endl;
                return false;
            }
        } else if (comment.Contains("Verbose flag")) {
            
            config >> fVerbose;
            
        } else {
            
            cout << "##### Warning in EIMVA::Config()! Unknown syntax!" << endl;
            cout << comment << endl;
        }
    }
    
    if (fVerbose) Print();

    config.close();

    return true;
}
//-------------------------------------------
///Prints details of the CCMLEM class obejct.
void EIComp::Print(void) {
    
    cout << "\nEIMVA::Print()" << endl;
    cout << setw(35) << "Name of input file: \t"
       << fInputName << endl;
    cout << setw(35) << "No. of first and last event: \t" << fStart << ", "
       << fStop << endl;
    cout << setw(35) << "Verbose level: \t" << fVerbose << endl << endl;
}    
//------------------------------------    
/// Sets default values of the private class members.
void EIComp::Clear(void) {
    

    fInputName = "dummy";
    fOutputFile = NULL;
    fVerbose = kFALSE;
    fTree_stat = NULL;
    fTreeS2 = NULL;
    fTreeS3 = NULL;
    fTreeS4 = NULL;
    fTreeB2 = NULL;
    fTreeB3 = NULL;
    fTreeB4 = NULL;
    fTreedB2 = NULL;
    fTreedB3 = NULL;
    fTreedB4 = NULL;
    fTreeBB3 = NULL;
    fTreeBB4 = NULL;
    fTreeRB2 = NULL;
    fTreeRB3 = NULL;
    fTreeRB4 = NULL;
    fTreeBS2 = NULL;
    fTreeBS3 = NULL;
    fTreeBS4 = NULL;
    fTreeSB2 = NULL;
    fTreeSB3 = NULL;
    fTreeSB4 = NULL;
    fTreeSB5 = NULL;
    fTreeSB = NULL;
  

}
//--------------------------------------
/// Saves object in the output file.
///\param ob (TObject*) - saved object.
Bool_t EIComp::SaveToFile(TObject* ob) {
    
    fOutputFile->cd();
    ob->Write();
    cout << ob->ClassName() << " " << ob->GetName() << " saved in the file "
       << fOutputFile->GetName() << endl;
    return kTRUE;
}
